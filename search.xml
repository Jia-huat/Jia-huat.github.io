<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Node.js</title>
      <link href="/2023/03/21/Node-js/"/>
      <url>/2023/03/21/Node-js/</url>
      
        <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p><img src="/2023/03/21/Node-js/image-20230316180421251.png" alt="image-20230316180421251"></p><h2 id="什么是node-js"><a href="#什么是node-js" class="headerlink" title="什么是node.js?"></a>什么是node.js?</h2><p><img src="/2023/03/21/Node-js/image-20230316181054504.png" alt="image-20230316181054504"></p><blockquote><p>开源跨平台的，javascript的运行环境</p></blockquote><h2 id="为什么要学？"><a href="#为什么要学？" class="headerlink" title="为什么要学？"></a>为什么要学？</h2><p><img src="/2023/03/21/Node-js/image-20230316181139369.png" alt="image-20230316181139369"></p><blockquote><p>框架的使用离不开node.js</p></blockquote><h2 id="工作内容-作用-是什么"><a href="#工作内容-作用-是什么" class="headerlink" title="工作内容(作用)是什么"></a>工作内容(作用)是什么</h2><p><img src="/2023/03/21/Node-js/image-20230316181711554.png" alt="image-20230316181711554"></p><blockquote><p>在服务器上运行的代码，实现人与人网页云端上的交互</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230316182107974.png" alt="image-20230316182107974"></p><h3 id="开发与应用"><a href="#开发与应用" class="headerlink" title="开发与应用"></a>开发与应用</h3><p><img src="/2023/03/21/Node-js/image-20230316181903682.png" alt="image-20230316181903682"></p><blockquote><p>1.开发服务器应用</p><p>2.开发工具类应用</p><p>3.开发桌面端应用</p></blockquote><h2 id="没有浏览器的API"><a href="#没有浏览器的API" class="headerlink" title="没有浏览器的API"></a>没有浏览器的API</h2><p><img src="/2023/03/21/Node-js/image-20230316190546829.png" alt="image-20230316190546829"></p><blockquote><p>有自己的API</p><p>主要是<code>BOM和DOM的对象没有</code></p></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><img src="/2023/03/21/Node-js/image-20230316191132436.png" alt="image-20230316191132436"></p><blockquote><p>navigator、history等等</p><p>document、window等等</p></blockquote><hr><h1 id="Node-js简介"><a href="#Node-js简介" class="headerlink" title="Node.js简介"></a>Node.js简介</h1><h2 id="顶级对象global"><a href="#顶级对象global" class="headerlink" title="顶级对象global"></a>顶级对象global</h2><p><img src="/2023/03/21/Node-js/image-20230316191443723.png" alt="image-20230316191443723"></p><blockquote><p>globalThis === global</p></blockquote><h2 id="Buffer-缓冲区"><a href="#Buffer-缓冲区" class="headerlink" title="Buffer(缓冲区)"></a>Buffer(缓冲区)</h2><blockquote><p>一个类似于数组的东西(对象)</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230316191932717.png" alt="image-20230316191932717"></p><blockquote><p>类似于那种ASCAll码</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230316191938196.png" alt="image-20230316191938196"></p><blockquote><p>每个元素大小为1字节 </p></blockquote><h4 id><a href="#" class="headerlink" title></a></h4><h4 id="创建Buffer-数组"><a href="#创建Buffer-数组" class="headerlink" title="创建Buffer(数组)"></a>创建Buffer(数组)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.alloc(清空数据，后创建)</span></span><br><span class="line"><span class="keyword">let</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.allocUnsafe(有旧数据，省略清空)</span></span><br><span class="line"><span class="keyword">let</span> buf_2 = <span class="title class_">Buffer</span>.<span class="title function_">allocUnsafe</span>(<span class="number">10</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf_2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.from(将字符串或数组转为buffer码)</span></span><br><span class="line"><span class="keyword">let</span> buf_3 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf_3);</span><br></pre></td></tr></table></figure><p><img src="/2023/03/21/Node-js/image-20230316214148640.png" alt="image-20230316214148640"></p><blockquote><p>1.alloc(清空数据，后创建)</p><p>2.allocUnsafe(有旧数据，省略清空的时间)</p><p>3.from(将字符串或数组转为buffer码)</p><p>4.toString(将buffer转为为字符串)<code>默认为utf-8</code></p></blockquote><p>操作</p><p><img src="/2023/03/21/Node-js/image-20230316215544389.png" alt="image-20230316215544389"></p><p>溢出</p><p>中文</p><p><img src="/2023/03/21/Node-js/image-20230316220056808.png" alt="image-20230316220056808"></p><hr><h3 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h3><blockquote><p>进程里面包含线程</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230316221140221.png" alt="image-20230316221140221"></p><h3 id="fs"><a href="#fs" class="headerlink" title="fs"></a>fs</h3><p><img src="/2023/03/21/Node-js/image-20230316221324759.png" alt="image-20230316221324759"></p><h4 id="文件的创建"><a href="#文件的创建" class="headerlink" title="文件的创建"></a>文件的创建</h4><p><img src="/2023/03/21/Node-js/image-20230316221804053.png" alt="image-20230316221804053"></p><blockquote><p>require</p><p>writeFile</p><p>帮助用户自动化形成文件(脚本)</p></blockquote><h3 id="fs异步与同步"><a href="#fs异步与同步" class="headerlink" title="fs异步与同步"></a>fs异步与同步</h3><blockquote><p>异步有点像事件.压入任务队列等待主线程完成</p></blockquote><p>文件的追加写入</p><p>writeFileSync同步写入</p><p><img src="/2023/03/21/Node-js/image-20230316223225392.png" alt="image-20230316223225392"></p><p>writeFile异步追加写入</p><p><img src="/2023/03/21/Node-js/image-20230316223657490.png" alt="image-20230316223657490"></p><blockquote><p>要有flag:’a</p></blockquote><p>appendFile异步写入</p><p><img src="/2023/03/21/Node-js/image-20230316223535661.png" alt="image-20230316223535661"></p><blockquote><p>换行\r\n</p></blockquote><h3 id="流式写入"><a href="#流式写入" class="headerlink" title="流式写入"></a>流式写入</h3><blockquote><p>可以减少打开文件的次数</p></blockquote><h4 id="日常所见的文件写入"><a href="#日常所见的文件写入" class="headerlink" title="日常所见的文件写入"></a>日常所见的文件写入</h4><blockquote><p>下载文件</p><p>安装软件</p><p>git </p><p>需要持久性地保存文件</p></blockquote><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><p><img src="/2023/03/21/Node-js/image-20230316230650088.png" alt="image-20230316230650088"></p><blockquote><p>对应文件写入</p><p>同步和异步区别就是Sync</p></blockquote><h4 id="为什么需要文件读取"><a href="#为什么需要文件读取" class="headerlink" title="为什么需要文件读取"></a>为什么需要文件读取</h4><blockquote><p>脚本帮忙自动读取文件</p><p>(否则就是自己打开给用户)</p></blockquote><h4 id="日用场景"><a href="#日用场景" class="headerlink" title="日用场景"></a>日用场景</h4><p><img src="/2023/03/21/Node-js/image-20230316231051571.png" alt="image-20230316231051571"></p><blockquote><p>平时看什么都是要读取文件的</p></blockquote><h4 id="三种读取方法"><a href="#三种读取方法" class="headerlink" title="三种读取方法"></a>三种读取方法</h4><p><img src="/2023/03/21/Node-js/image-20230316231257089.png" alt="image-20230316231257089"></p><h5 id="流式读取"><a href="#流式读取" class="headerlink" title="流式读取"></a>流式读取</h5><p><img src="/2023/03/21/Node-js/image-20230317001709013.png" alt="image-20230317001709013"></p><blockquote><p>rs.on(‘data’,名字 =&gt; {})</p><p>on方法，内容为data</p></blockquote><h5 id="两种读写的区别"><a href="#两种读写的区别" class="headerlink" title="两种读写的区别"></a>两种读写的区别</h5><p><img src="/2023/03/21/Node-js/image-20230317003258678.png" alt="image-20230317003258678"></p><blockquote><p>显然流式读取，所占用的内存空间少</p><p>读取速度快于写的速度</p><p>读写的时候</p></blockquote><h4 id="查看内存使用"><a href="#查看内存使用" class="headerlink" title="查看内存使用"></a>查看内存使用</h4><p><img src="/2023/03/21/Node-js/image-20230317003839586.png" alt="image-20230317003839586"></p><h3 id="文件移动与重命名"><a href="#文件移动与重命名" class="headerlink" title="文件移动与重命名"></a>文件移动与重命名</h3><h4 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h4><blockquote><p>fs.rename(<code>oldPath</code>, <code>newPath</code>, callback)</p><p>fs.renameSync(oldPath, newPath)</p></blockquote><h4 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h4><p>oldPath 文件当前的路径</p><p>newPath 文件新的路径</p><p>callback 操作后的回调</p><blockquote><p>两者都是文件的移动</p></blockquote><h3 id="文件删除"><a href="#文件删除" class="headerlink" title="文件删除"></a>文件删除</h3><h4 id="unlink方法"><a href="#unlink方法" class="headerlink" title="unlink方法"></a>unlink方法</h4><blockquote><p>fs.unlink(path, callback)</p><p>fs.unlinkSync(path)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">unlink</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除成功&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">unlinkSync</span>(<span class="string">&#x27;./test2.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="rm方法"><a href="#rm方法" class="headerlink" title="rm方法"></a>rm方法</h4><blockquote><p>14.4版本</p><p>+Sync是同步方法</p></blockquote><p>如下图所示</p><p><img src="/2023/03/21/Node-js/image-20230317214432733.png" alt="image-20230317214432733"></p><p>文件夹操作</p><blockquote><p>创建文件夹</p><p>mkdir / mkdirSync </p></blockquote><blockquote><p>读取文件夹</p><p>readdir / readdirSync </p></blockquote><blockquote><p>删除文件夹</p><p>rmdir / rmdirSync      =&gt;<code>(remove的缩写)</code></p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">mkdir</span>(<span class="string">&#x27;./page&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;创建成功&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//递归异步创建</span></span><br><span class="line">fs.<span class="title function_">mkdir</span>(<span class="string">&#x27;./1/2/3&#x27;</span>, &#123;<span class="attr">recursive</span>: <span class="literal">true</span>&#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;递归创建成功&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//递归同步创建文件夹</span></span><br><span class="line">fs.<span class="title function_">mkdirSync</span>(<span class="string">&#x27;./x/y/z&#x27;</span>, &#123;<span class="attr">recursive</span>: <span class="literal">true</span>&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>1.递归创建与递归删除雷同，其实这些方法都大致相同</p><p>2.递归时需要加入<code>&#123;recursive: true&#125;</code>这样一个参数</p><p>3.递归就是创建一个目录下，多个文件</p><p>4.递归删除推荐rm方法</p></blockquote><h3 id="查看资源状态"><a href="#查看资源状态" class="headerlink" title="查看资源状态"></a>查看资源状态</h3><blockquote><p>fs.stat(path[, options], callback)</p><p>fs.statSync(path[, options])</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异步获取状态</span></span><br><span class="line">fs.<span class="title function_">stat</span>(<span class="string">&#x27;./data.txt&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(err) <span class="keyword">throw</span> err;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//同步获取状态</span></span><br><span class="line"><span class="keyword">let</span> data = fs.<span class="title function_">statSync</span>(<span class="string">&#x27;./data.txt&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="data包括"><a href="#data包括" class="headerlink" title="data包括"></a>data包括</h5><blockquote><p>data.size() 文件体积</p><p>…birthtime 创建时间</p><p>…mtime 最后修改时间</p><p>…isFile 检测是否为文件</p><p>…isDirectory 检测是否为文件夹</p></blockquote><hr><h2 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h2><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><blockquote><ol><li><p>./座右铭.txt 当前目录下的座右铭.txt</p></li><li><p>座右铭.txt 等效于上面的写法</p></li><li><p>../座右铭.txt 当前目录的上一级目录中的座右铭.txt</p></li></ol></blockquote><h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h4><blockquote><ol><li><p>D:/Program Files windows 系统下的绝对路径</p></li><li><p>/usr/bin Linux 系统下的绝对路径</p></li></ol></blockquote><p><code>看起来和JS都差不多</code></p><h4 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h4><blockquote><p>相对路径的参照物是<code>终端命令行的</code></p><p>所以当命令行的工作目录与文件所在目录不一致时，会出现一些 BUG</p></blockquote><h4 id="解决方法-dirname"><a href="#解决方法-dirname" class="headerlink" title="解决方法(__dirname)"></a>解决方法(__dirname)</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = fs.<span class="title function_">readFileSync</span>(__dirname + <span class="string">&#x27;/data.txt&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><p>也等价于</p><p><img src="/2023/03/21/Node-js/image-20230317221728730.png" alt="image-20230317221728730"></p><blockquote><p>或者终端运行时，在当前文件夹运行<img src="/2023/03/21/Node-js/5E0216B3.png" alt="img"></p></blockquote><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>1.实现文件的复制</p><p>2.文件重命名</p><h2 id="path模块"><a href="#path模块" class="headerlink" title="path模块"></a>path模块</h2><p><img src="/2023/03/21/Node-js/image-20230318220210903.png" alt="image-20230318220210903"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取路径分隔符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="property">sep</span>);</span><br><span class="line"><span class="comment">//拼接绝对路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//解析路径</span></span><br><span class="line"><span class="keyword">let</span> pathname = <span class="string">&#x27;D:/program file/nodejs/node.exe&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">parse</span>(pathname));</span><br><span class="line"><span class="comment">//获取路径基础名称</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">basename</span>(pathname))</span><br><span class="line"><span class="comment">//获取路径的目录名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">dirname</span>(pathname));</span><br><span class="line"><span class="comment">//获取路径的扩展名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">extname</span>(pathname));</span><br></pre></td></tr></table></figure><blockquote><p>重点掌握resolve</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230319211156723.png" alt="image-20230319211156723"></p><p>D:\index.html\test</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>在其它地方复制过来的路径的<code>斜杠</code>，可能会变成<code>转义符号</code></p></blockquote><hr><h2 id="http模块"><a href="#http模块" class="headerlink" title="http模块"></a>http模块</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote><p>HTTP（hypertext transport protocol）协议；中文叫<strong>超文本传输协议</strong></p></blockquote><p>是一种基于TCP/IP的应用层通信协议</p><p>这个协议详细规定了 <code>浏览器 </code>和<code>万维网 </code>服务器 之间<code>互相通信</code>的规则。</p><p>协议中主要规定了两个方面的内容</p><ul><li><p>客户端：用来向服务器发送数据，可以被称之为<strong>请求报文</strong></p></li><li><p>服务端：向客户端返回数据，可以被称之为<strong>响应报文</strong></p></li></ul><blockquote><p>报文：可以简单理解为就是一堆字符串</p><p>raw查看</p></blockquote><h4 id="请求报文的组成"><a href="#请求报文的组成" class="headerlink" title="请求报文的组成"></a>请求报文的组成</h4><ul><li><p>请求行</p></li><li><p>请求头</p></li><li><p>空行</p></li><li><p>请求体</p></li></ul><h5 id="如下图所示"><a href="#如下图所示" class="headerlink" title="如下图所示"></a>如下图所示</h5><p><img src="/2023/03/21/Node-js/image-20230319213734741.png" alt="image-20230319213734741"></p><h5 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h5><p><img src="/2023/03/21/Node-js/image-20230319213852074.png" alt="image-20230319213852074"></p><p><img src="/2023/03/21/Node-js/image-20230318221538277.png" alt="image-20230318221538277"></p><p><strong>URL</strong>(统一资源定位器)</p><p><img src="/2023/03/21/Node-js/image-20230319214401867.png" alt="image-20230319214401867"></p><h5 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h5><blockquote><p>格式：【头名：头值</p><p>===键头(host)：键值</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230318221649603.png" alt="image-20230318221649603"></p><h5 id="请求体"><a href="#请求体" class="headerlink" title="请求体"></a>请求体</h5><p><img src="/2023/03/21/Node-js/image-20230318221743730.png" alt="image-20230318221743730"></p><h3 id="响应报文的组成"><a href="#响应报文的组成" class="headerlink" title="响应报文的组成"></a>响应报文的组成</h3><blockquote><p>与请求报文基本一致</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230319215930754.png" alt="image-20230319215930754"></p><ul><li>响应行</li><li>响应头</li><li>响应头</li><li>空行</li><li>响应体</li></ul><h4 id="响应行"><a href="#响应行" class="headerlink" title="响应行"></a>响应行</h4><p><img src="/2023/03/21/Node-js/image-20230319220034700.png" alt="image-20230319220034700"></p><p><img src="/2023/03/21/Node-js/image-20230319220748049.png" alt="image-20230319220748049"></p><p><strong>状态码</strong></p><p><img src="/2023/03/21/Node-js/image-20230319220820560.png" alt="image-20230319220820560"></p><p><img src="/2023/03/21/Node-js/image-20230319220939370.png" alt="image-20230319220939370"></p><blockquote><p>状态码与描述一致</p></blockquote><h4 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h4><p><img src="/2023/03/21/Node-js/image-20230319221248861.png" alt="image-20230319221248861"></p><blockquote><p>自定义响应头，可能搜不到</p></blockquote><h4 id="响应体"><a href="#响应体" class="headerlink" title="响应体"></a>响应体</h4><p><img src="/2023/03/21/Node-js/image-20230319221649429.png" alt="image-20230319221649429"></p><blockquote><p>跟请求体差不多</p></blockquote><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p><img src="/2023/03/21/Node-js/image-20230319222715528.png" alt="image-20230319222715528"></p><blockquote><p>192.168.1.3</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230319223331376.png" alt="image-20230319223331376"></p><h5 id="局域网-私网IP"><a href="#局域网-私网IP" class="headerlink" title="局域网(私网IP)"></a>局域网(私网IP)</h5><ul><li>家里的设备(对内)</li></ul><h5 id="公网IP"><a href="#公网IP" class="headerlink" title="公网IP"></a>公网IP</h5><ul><li>对外唯一</li></ul><h5 id="本机IP"><a href="#本机IP" class="headerlink" title="本机IP"></a>本机IP</h5><p><img src="/2023/03/21/Node-js/image-20230319223603974.png" alt="image-20230319223603974"></p><p><img src="/2023/03/21/Node-js/image-20230319223628254.png" alt="image-20230319223628254"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="/2023/03/21/Node-js/image-20230319223734557.png" alt="image-20230319223734557"></p><hr><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p><img src="/2023/03/21/Node-js/image-20230320003249787.png" alt="image-20230320003249787"></p><blockquote><p>编号：应用程序的数字标识</p></blockquote><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p><img src="/2023/03/21/Node-js/image-20230320003122124.png" alt="image-20230320003122124"></p><p><img src="/2023/03/21/Node-js/image-20230320003520677.png" alt="image-20230320003520677"></p><hr><h2 id="创建HTTP请求"><a href="#创建HTTP请求" class="headerlink" title="创建HTTP请求"></a>创建HTTP请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.模块启用</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">//2.创建服务对象</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>) =&gt;</span>&#123;</span><br><span class="line">    response.<span class="title function_">setHeader</span>(<span class="string">&#x27;content-type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">    response.<span class="title function_">end</span>(<span class="string">&#x27;Hello HTTP Server&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.监听端口</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">9000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;创建成功&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>(request,response)两个形参，<code>请求，响应报告</code></p><p><strong>响应内容中文乱码</strong></p><p>response.setHeader(‘content-type’,’text/html;charset=utf-8’),相当于设置格式版本，可以识别中文</p></blockquote><h3 id="效果如图所示"><a href="#效果如图所示" class="headerlink" title="效果如图所示"></a>效果如图所示</h3><p><img src="/2023/03/21/Node-js/image-20230320005918221.png" alt="image-20230320005918221"></p><p><strong>端口占用</strong></p><blockquote><p>关闭窗口</p><p>更换端口</p></blockquote><blockquote><p>HTTP 协议默认端口是 80 。HTTPS 协议的默认端口是 443, </p><p>HTTP 服务开发常用端口有 3000，8080，8090，9000 等</p></blockquote><h3 id="浏览器查看HTTP报文"><a href="#浏览器查看HTTP报文" class="headerlink" title="浏览器查看HTTP报文"></a>浏览器查看HTTP报文</h3><blockquote><p>网络</p></blockquote><h3 id="获取请求报文"><a href="#获取请求报文" class="headerlink" title="获取请求报文"></a>获取请求报文</h3><p><img src="/2023/03/21/Node-js/image-20230320203737176.png" alt="image-20230320203737176"></p><h4 id="获取请求头"><a href="#获取请求头" class="headerlink" title="获取请求头"></a>获取请求头</h4><p><img src="/2023/03/21/Node-js/image-20230320202120998.png" alt="image-20230320202120998"></p><blockquote><p>因为有<code>&#39;-&#39;</code>所以要用引号引着，不然会识别成减号</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.模块启用</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="comment">//2.创建服务对象</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request,response</span>) =&gt;</span>&#123;</span><br><span class="line">    response.<span class="title function_">setHeader</span>(<span class="string">&#x27;content-type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment">//3.分别获取请求头、方法、路径、版本</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">headers</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">url</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">method</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">httpVersion</span>);</span><br><span class="line">    response.<span class="title function_">end</span>(<span class="string">&#x27;Hello HTTP Server 你好&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4.监听端口</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">9000</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;创建成功&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="获取请求体"><a href="#获取请求体" class="headerlink" title="获取请求体"></a>获取请求体</h4><p><img src="/2023/03/21/Node-js/image-20230320211120375.png" alt="image-20230320211120375"></p><blockquote></blockquote><h4 id="查询字符串"><a href="#查询字符串" class="headerlink" title="查询字符串"></a>查询字符串</h4><p><img src="/2023/03/21/Node-js/image-20230320214756054.png" alt="image-20230320214756054"></p><blockquote><p>血的教训，不要留空格；<code>总的来说，也是js的对象的用法</code></p></blockquote><h4 id="另一种方法"><a href="#另一种方法" class="headerlink" title="另一种方法"></a>另一种方法</h4><p><img src="/2023/03/21/Node-js/image-20230320215634845.png" alt="image-20230320215634845"></p><h3 id="设置响应报文"><a href="#设置响应报文" class="headerlink" title="设置响应报文"></a>设置响应报文</h3><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p><img src="/2023/03/21/Node-js/image-20230320223913062.png" alt="image-20230320223913062"></p><p><strong>设置</strong></p><p><img src="/2023/03/21/Node-js/image-20230320224217603.png" alt="image-20230320224217603"></p><hr><h2 id="网页加载的基本过程"><a href="#网页加载的基本过程" class="headerlink" title="网页加载的基本过程"></a>网页加载的基本过程</h2><p><img src="/2023/03/21/Node-js/image-20230320225341705.png" alt="image-20230320225341705"></p><blockquote><p>响应请求，只会调用请求函数里面的内容</p></blockquote><p><img src="/2023/03/21/Node-js/image-20230320230130597.png" alt="image-20230320230130597"></p><h3 id="静态资源服务"><a href="#静态资源服务" class="headerlink" title="静态资源服务"></a>静态资源服务</h3><p><img src="/2023/03/21/Node-js/image-20230320230420794.png" alt="image-20230320230420794"></p><h4 id="拼接路径方法"><a href="#拼接路径方法" class="headerlink" title="拼接路径方法"></a>拼接路径方法</h4><p><img src="/2023/03/21/Node-js/image-20230320231354772.png" alt="image-20230320231354772"></p><blockquote><p>找相同路径，拼接新路径</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置根目录</span></span><br><span class="line">   <span class="keyword">const</span> root = __dirname +<span class="string">&#x27;/page&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="setHeader-血的教训"><a href="#setHeader-血的教训" class="headerlink" title="setHeader(血的教训)"></a>setHeader(<code>血的教训</code>)<img src="/2023/03/21/Node-js/image-20230321203135413.png" alt="image-20230321203135413"></h4><blockquote><p>setHeader(页面信息格式)，不能乱放，会让外部文件无法使用</p></blockquote><h3 id="网站根目录或静态资源目录"><a href="#网站根目录或静态资源目录" class="headerlink" title="网站根目录或静态资源目录"></a>网站根目录或静态资源目录</h3><h4 id="相对路径-1"><a href="#相对路径-1" class="headerlink" title="相对路径"></a>相对路径</h4><blockquote><p>./index.js</p><p>../index.js</p><p>index.js</p></blockquote><p>相对路径在发送请求时，<code>需要与当前页面 URL 路径进行</code> 计算 ，得到完整 URL 后，再发送请求，学习阶段用的较多</p><h4 id="绝对路径-更加可靠"><a href="#绝对路径-更加可靠" class="headerlink" title="绝对路径(更加可靠)"></a>绝对路径(更加可靠)</h4><blockquote><p>‘<a href="http://baidu.com/index.js&#39;">http://baidu.com/index.js&#39;</a></p><p>//baidu.com/index.js</p><p>/index.js</p></blockquote><p>绝对路径可靠性强，而且相对容易理解，在项目中运用较多</p><h3 id="设置资源类型-mime类型"><a href="#设置资源类型-mime类型" class="headerlink" title="设置资源类型(mime类型)"></a>设置资源类型(mime类型)</h3><p>媒体类型（通常称为 Multipurpose Internet Mail Extensions 或 MIME 类型 ）是一种标准，用来表示文档、文件或字节流的性质和格式。</p><p><img src="/2023/03/21/Node-js/image-20230321230822661.png" alt="image-20230321230822661"></p><blockquote><p>mime 类型结构： [type]/[subType]</p><p>例如： text/html ,text/css ,image/jpeg ,image/png application/json</p></blockquote><p>HTTP 服务可以设置响应头 Content-Type 来表明响应体的 MIME 类型，浏览器会根据该类型决定如何处理资源</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.<span class="title function_">setHeader</span>(<span class="string">&#x27;content-type&#x27;</span>,<span class="string">&#x27;text/html;charset=utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>通常在读取文件的时候进行类型的响应头设置(来处理对应类型的文件)</p></blockquote><hr><h2 id="两种请求方式"><a href="#两种请求方式" class="headerlink" title="两种请求方式"></a>两种请求方式</h2><p><img src="/2023/03/21/Node-js/image-20230321182647444.png" alt="image-20230321182647444"></p><p><img src="/2023/03/21/Node-js/image-20230321182713961.png" alt="image-20230321182713961"></p><hr><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><p><strong>1.1</strong> <strong>什么是模块化与模块</strong> <strong>?</strong></p><ul><li><p>将一个复杂的程序文件依据一定规则（规范）拆分成多个文件的过程称之为<code>模块化</code></p></li><li><p>其中拆分出的<code>每个文件就是一个模块</code>，模块的内部数据是<code>私有的</code>，不过模块可以<code>暴露内部数据</code>以便其他模块使用</p></li></ul><p><strong>1.2</strong> <strong>什么是模块化项目</strong> <strong>?</strong></p><ul><li>编码时是按照模块一个一个编码的， 整个项目就是一个模块化的项目</li></ul><p><strong>1.3</strong> <strong>模块化好处</strong></p><p>下面是模块化的一些好处：</p><ol><li><p>防止命名冲突<code>(私有)</code></p></li><li><p>高复用性<code>(其它项目可用)</code></p></li><li><p>高维护性<code>(分块维护)</code></p></li></ol><p><img src="/2023/03/21/Node-js/image-20230321232627754.png" alt="image-20230321232627754"></p><blockquote><p>小模块组合成大模块</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS进阶</title>
      <link href="/2023/03/14/JS%E8%BF%9B%E9%98%B6/"/>
      <url>/2023/03/14/JS%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="JS进阶"><a href="#JS进阶" class="headerlink" title="JS进阶"></a>JS进阶</h1><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F.png"></p><h3 id="块作用域，函数大括号"><a href="#块作用域，函数大括号" class="headerlink" title="块作用域，函数大括号"></a>块作用域，函数大括号</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%9D%97%E4%BD%9C%E7%94%A8%E5%9F%9F.png"></p><blockquote><p>var没有块作用域。let有(不能被访问)</p></blockquote><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%B1%80%E9%83%A8%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AE%E9%A2%98.png"></p><h3 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE.png"></p><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%93%BE%E6%9F%A5%E6%89%BE%E6%9C%BA%E5%88%B6.png"></p><h3 id="JS立即回收机制"><a href="#JS立即回收机制" class="headerlink" title="JS立即回收机制"></a>JS立即回收机制</h3><h4 id="引用计数法"><a href="#引用计数法" class="headerlink" title="引用计数法"></a>引用计数法</h4><blockquote><p>标记引用(数据的地址)次数，已淘汰</p></blockquote><h4 id="标记清除法"><a href="#标记清除法" class="headerlink" title="标记清除法"></a>标记清除法</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E6%A0%87%E8%AE%B0%E6%B8%85%E9%99%A4%E6%B3%95.png"></p><h5 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h5><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E8%A7%A3%E5%86%B3%E4%BA%86%E7%9B%B8%E4%BA%92%E5%BC%95%E7%94%A8%E7%9A%84%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F.png"></p><blockquote><p>解决了相互引用导致的数据不能清除(引用一直有)</p><p>能够<code>被标记</code>的就不会被清除</p></blockquote><h5 id="解释如下图"><a href="#解释如下图" class="headerlink" title="解释如下图"></a>解释如下图</h5><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E6%A0%87%E8%AE%B0%E6%B8%85%E9%99%A4%E6%B3%95%E7%9A%84%E9%97%AE%E9%A2%98.png"></p><h3 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E9%97%AD%E5%8C%85.png"></p><blockquote><p>闭包可以实现数据私有，内层函数+(引用)外层的变量</p></blockquote><h4 id="能够被标记"><a href="#能够被标记" class="headerlink" title="能够被标记"></a>能够被标记</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E8%BF%99%E6%A0%B7%E5%8F%AF%E4%BB%A5%E5%81%9A%E6%A0%87%E8%AE%B0%E8%80%8C%E4%B8%8D%E8%A2%AB%E5%9B%9E%E6%94%B6.png"></p><h4 id="问题解释"><a href="#问题解释" class="headerlink" title="问题解释"></a>问题解释</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E9%97%AD%E5%8C%85%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E9%87%8A.png"></p><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/var%E7%9A%84%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87.png"></p><blockquote><p>var会提升到当前作用域最前面声明<code>出现先声明再赋值</code></p></blockquote><hr><h2 id="函数进阶"><a href="#函数进阶" class="headerlink" title="函数进阶"></a>函数进阶</h2><h3 id="函数提升"><a href="#函数提升" class="headerlink" title="函数提升"></a>函数提升</h3><h4 id="提升过程"><a href="#提升过程" class="headerlink" title="提升过程"></a>提升过程</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%87%BD%E6%95%B0%E6%8F%90%E5%8D%87.png"></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%87%BD%E6%95%B0%E6%8F%90%E5%8D%87%E6%80%BB%E7%BB%93.png"></p><h3 id="arguments-本身是伪数组"><a href="#arguments-本身是伪数组" class="headerlink" title="arguments(本身是伪数组)"></a>arguments(本身是伪数组)</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/%E5%8A%A8%E6%80%81%E5%8F%82%E6%95%B0.png"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310164108460.png"></p><h3 id="剩余参数"><a href="#剩余参数" class="headerlink" title="剩余参数"></a>剩余参数</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310164522922.png" alt="image-20230310164522922"></p><blockquote><p>当不知道参数有几个时</p></blockquote><h3 id="展开运算符-…"><a href="#展开运算符-…" class="headerlink" title="展开运算符(…)"></a>展开运算符(…)</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310164842406.png" alt="image-20230310164842406"></p><blockquote><p>Math方法时，…将数组可以展开为数字</p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310165009430.png" alt="image-20230310165009430"></p><hr><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><code>注意事项</code></h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313155546032.png" alt="image-20230313155546032"></p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310165840906.png" alt="image-20230310165840906"></p><blockquote><p>因为=&gt;{}函数时</p><p>所以对象=&gt;({ name : myname })，用来区分对象与函数</p></blockquote><h3 id="箭头函数参数"><a href="#箭头函数参数" class="headerlink" title="箭头函数参数"></a>箭头函数参数</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310170123503.png" alt="image-20230310170123503"></p><blockquote><p>参数两个或以上时，需要用（x，y）</p></blockquote><h4 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310170401865.png"></p><h3 id="箭头函数的this指向"><a href="#箭头函数的this指向" class="headerlink" title="箭头函数的this指向"></a>箭头函数的this指向</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310170917468.png" alt="image-20230310170917468"></p><blockquote><p>指向<code>上层作用域的指向</code></p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310171501923.png" alt="image-20230310171501923"></p><hr><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><h3 id="交换两个变量"><a href="#交换两个变量" class="headerlink" title="交换两个变量"></a>交换两个变量</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310172217322.png" alt="image-20230310172217322"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310172628192.png" alt="image-20230310172628192"></p><h4 id="数组结构变量的多少与函数的-形参，实参-相似"><a href="#数组结构变量的多少与函数的-形参，实参-相似" class="headerlink" title="数组结构变量的多少与函数的(形参，实参)相似"></a>数组结构变量的多少与函数的(形参，实参)相似</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310173026638.png" alt="image-20230310173026638"></p><blockquote><p>1.变量多undefined,少了就少了</p><p>2.剩余数组，直接返回真数组真好用</p></blockquote><h3 id="多维数组的数组解构"><a href="#多维数组的数组解构" class="headerlink" title="多维数组的数组解构"></a>多维数组的数组解构</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310173725799.png" alt="image-20230310173725799"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310173813552.png" alt="image-20230310173813552"></p><hr><h3 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h3><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310174158106.png" alt="image-20230310174158106"></p><blockquote><p>要一致且，前面不能有命名</p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310174426028.png" alt="image-20230310174426028"></p><blockquote><p>或者改名</p></blockquote><h4 id="多级数组对象解构"><a href="#多级数组对象解构" class="headerlink" title="多级数组对象解构"></a>多级数组对象解构</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310183622039.png" alt="image-20230310183622039"> </p><h4 id="对单一元素进行解构"><a href="#对单一元素进行解构" class="headerlink" title="对单一元素进行解构"></a>对单一元素进行解构</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310184700089.png" alt="image-20230310184700089"></p><h4 id="下面就是对象解构的魅力"><a href="#下面就是对象解构的魅力" class="headerlink" title="下面就是对象解构的魅力"></a>下面就是对象解构的魅力</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310221544030.png" alt="image-20230310221544030"></p><blockquote><p>取出了目标的两个属性与声明的进行绑定</p></blockquote><hr><h2 id="几种类似的遍历"><a href="#几种类似的遍历" class="headerlink" title="几种类似的遍历"></a>几种类似的遍历</h2><h3 id="遍历数组forEach"><a href="#遍历数组forEach" class="headerlink" title="遍历数组forEach"></a>遍历数组forEach</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310185413006.png" alt="image-20230310185413006"></p><blockquote><p>加强版的for循环</p></blockquote><h4 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h4><h5 id="js"><a href="#js" class="headerlink" title="js"></a>js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment">//2.遍历对象,利用解构，获得对应的信息</span></span><br><span class="line">goodsList.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;name,price,picture&#125; = item</span><br><span class="line">    str += <span class="string">` </span></span><br><span class="line"><span class="string">            &lt;div class=&quot;item&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img src=&quot;<span class="subst">$&#123;picture&#125;</span>&quot; alt=&quot;&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;name&quot;&gt;<span class="subst">$&#123;name&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;price&quot;&gt;<span class="subst">$&#123;price&#125;</span>&lt;/p&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>();</span><br><span class="line">&#125;)    </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.list&#x27;</span>).<span class="property">innerHTML</span> = str</span><br></pre></td></tr></table></figure><blockquote><p>1.利用forEach进行遍历，解构每个数组里面的对象</p><p>2.获取对象的属性值</p><p>3.item用来代表每个数组元素arr[i]</p></blockquote><h3 id="filter过滤"><a href="#filter过滤" class="headerlink" title="filter过滤"></a>filter过滤</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310215613579.png" alt="image-20230310215613579"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310220401625.png" alt="image-20230310220401625"></p><hr><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">render</span>(goodsList)</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.filter&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="function"><span class="params">e</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = goodsList</span><br><span class="line">    <span class="keyword">const</span> &#123;tagName,dataset&#125; = e.<span class="property">target</span></span><br><span class="line">    <span class="keyword">if</span>(tagName === <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dataset.<span class="property">index</span> === <span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                arr = goodsList.<span class="title function_">filter</span>( <span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">price</span> &lt; <span class="number">100</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dataset.<span class="property">index</span> === <span class="string">&#x27;2&#x27;</span>)&#123;</span><br><span class="line">                arr = goodsList.<span class="title function_">filter</span>( <span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">price</span> &gt; <span class="number">100</span> &amp;&amp; item.<span class="property">price</span> &lt;<span class="number">300</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dataset.<span class="property">index</span> === <span class="string">&#x27;3&#x27;</span>)&#123;</span><br><span class="line">                arr = goodsList.<span class="title function_">filter</span>( <span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">price</span> &gt;= <span class="number">300</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">render</span>(arr)</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230311002050508.png" alt="image-20230311002050508"></p><hr><blockquote><p>1.goodsList.filter( item =&gt; item.price &lt; 100)</p><p>返回的是满足条件的数组</p><p>2.在一行的时候，return可以省略</p></blockquote><h2 id="深入对象"><a href="#深入对象" class="headerlink" title="深入对象"></a>深入对象</h2><p>创建对象</p><p>三种方法</p><p>字面量、直接、构建函数</p><h3 id="对象的底层包装"><a href="#对象的底层包装" class="headerlink" title="对象的底层包装"></a>对象的底层包装</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230312154834591.png" alt="image-20230312154834591"></p><blockquote><p>平时可以引用的.length，toFixed，tagName等等,都是包装好的对象，所以可以肢解引用</p></blockquote><h3 id="Object静态方法"><a href="#Object静态方法" class="headerlink" title="Object静态方法"></a>Object静态方法</h3><h4 id="获取属性名"><a href="#获取属性名" class="headerlink" title="获取属性名"></a>获取属性名</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230312155618882.png" alt="image-20230312155618882"></p><blockquote><p>用来替代for in </p></blockquote><h4 id="对象的拷贝"><a href="#对象的拷贝" class="headerlink" title="对象的拷贝"></a>对象的拷贝</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230312155918424.png" alt="image-20230312155918424"></p><h2 id="Array-几种类似的遍历"><a href="#Array-几种类似的遍历" class="headerlink" title="(Array)几种类似的遍历"></a>(Array)几种类似的遍历</h2><h3 id="遍历数组forEach-1"><a href="#遍历数组forEach-1" class="headerlink" title="遍历数组forEach"></a>遍历数组forEach</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230310185413006.png" alt="image-20230310185413006"></p><blockquote><p>加强版的for循环</p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230312160401104.png" alt="image-20230312160401104"></p><h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h4><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230312161444135.png" alt="image-20230312161444135"></p><blockquote><p>将循环一次后的值作为下一次循环的初始值</p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313162108237.png" alt="image-20230313162108237"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313170300348.png" alt="image-20230313170300348"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313170330939.png" alt="image-20230313170330939"></p><blockquote><p>由此可见，两者用法一样，返回的是</p><p>1.find返回的是数</p><p>2.every返回的是布尔值</p></blockquote><h4 id="相同"><a href="#相同" class="headerlink" title="相同"></a>相同</h4><blockquote><p>在调用 <code>every</code>(函数) 之后添加到数组中的元素不会被 <code>callback</code> 访问到。如果数组中存在的元素被更改，则他们传入 <code>callback</code> 的值是 <code>every</code> 访问到他们那一刻的值。</p><p>调用callback直至满足</p></blockquote><h4 id="不同"><a href="#不同" class="headerlink" title="不同"></a>不同</h4><blockquote><p>find:所有索引都可调用<code>(遍历所有)</code>，被删除的元素仍旧会被访问到，但是其值已经是 undefined 了。</p><p>every:只为赋值的索引调用，那些被删除的元素或从来未被赋值的元素将不会被访问到。<code>(遍历有值)</code></p></blockquote><p>伪数组转化为真数组</p><p>Array.from()</p><p>字符串转化为数组</p><p>const arr = str.split(‘分隔符’)</p><p>将对象获取</p><p>const arr = Object.value(对象)</p><blockquote><p>Object.value(对象)，返回的是数组</p></blockquote><p>并转化为字符串</p><p>arr.join(‘分隔符’)</p><h3 id="String的实例方法"><a href="#String的实例方法" class="headerlink" title="String的实例方法"></a>String的实例方法</h3><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313181639415.png" alt="image-20230313181639415"></p><h3 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`&lt;p class=&quot;spec&quot;&gt;<span class="subst">$&#123;<span class="built_in">Object</span>.values(spec).join(<span class="string">&#x27;/&#x27;</span>)&#125;</span>&lt;/p&gt;`</span></span><br><span class="line"><span class="keyword">const</span> total = goodsList.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev,item</span>)=&gt;</span>prev + (item.<span class="property">price</span> * item.<span class="property">count</span>)</span><br><span class="line">,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><blockquote><p>1.用reduce累加，要给一个初始值，否则第一个元素就是prev</p><p>2.Object.values(对象)返回一个数组，记得要加S</p></blockquote><hr><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313224149293.png" alt="image-20230313224149293"></p><blockquote><p>JS主要是面向过程</p></blockquote><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313224848129.png" alt="image-20230313224848129"></p><h2 id="原型对象"><a href="#原型对象" class="headerlink" title="原型对象"></a>原型对象</h2><blockquote><p>每个对象，都会有原型对象（也是属性），prototype。成为共用对象</p><p>解决浪费内存的问题</p></blockquote><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313225509117.png" alt="image-20230313225509117"></p><p><img src="/2023/03/14/JS%E8%BF%9B%E9%98%B6/image-20230313234818426.png" alt="image-20230313234818426"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS2023BOM</title>
      <link href="/2023/03/09/JS2023BOM/"/>
      <url>/2023/03/09/JS2023BOM/</url>
      
        <content type="html"><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><h2 id="JS执行机制"><a href="#JS执行机制" class="headerlink" title="JS执行机制"></a>JS执行机制</h2><h3 id="同步和异步"><a href="#同步和异步" class="headerlink" title="同步和异步"></a>同步和异步</h3><p><img src="/2023/03/09/JS2023BOM/%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5.png"></p><blockquote><p>同步：按照顺序执行</p><p>异步：事件可以同时执行</p></blockquote><h4 id="同步任务"><a href="#同步任务" class="headerlink" title="同步任务"></a>同步任务</h4><blockquote><p>指任务都在主线上执行，形成一个<code>执行线</code></p></blockquote><h4 id="异步任务-后执行"><a href="#异步任务-后执行" class="headerlink" title="异步任务(后执行)"></a>异步任务(后执行)</h4><p><img src="/2023/03/09/JS2023BOM/%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1.png"></p><blockquote><p>很多的事件、资源加载，定时器等等(有独立性)</p></blockquote><h2 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h2><p><img src="/2023/03/09/JS2023BOM/%E5%90%84%E7%A7%8D%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%88%B7%E6%96%B0.png"></p><p><img src="/2023/03/09/JS2023BOM/%E8%8E%B7%E5%8F%96%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%A1%E6%81%AF.png"></p><p><img src="/2023/03/09/JS2023BOM/%E9%A1%B5%E9%9D%A2%E5%89%8D%E8%BF%9B%E5%90%8E%E9%80%80.png"></p><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//目标</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;hahaah&#x27;</span></span><br><span class="line"><span class="comment">//定义规则(匹配信息)</span></span><br><span class="line"><span class="keyword">const</span> reg =<span class="regexp">/ha/</span></span><br><span class="line"><span class="comment">//打印结果，返回布尔值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(str))</span><br><span class="line"><span class="comment">//同理</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">exec</span>(str))</span><br><span class="line"><span class="comment">//但返回空或者数组</span></span><br></pre></td></tr></table></figure><h2 id="元字符之边界符"><a href="#元字符之边界符" class="headerlink" title="元字符之边界符"></a>元字符之边界符</h2><blockquote><p>^以开头</p><p>$以结尾</p><p>^哈$精准单一个哈字</p></blockquote><h3 id="元字符之量词"><a href="#元字符之量词" class="headerlink" title="元字符之量词"></a>元字符之量词</h3><p><img src="/2023/03/09/JS2023BOM/%E8%BE%B9%E7%95%8C%E7%AC%A6%E5%BB%B6%E4%BC%B8.png"></p><blockquote><p>^哈*$ <code>只能是哈，次数+</code></p><p>^哈$ <code>精准</code></p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E8%BE%B9%E7%95%8C%E7%AC%A6%E9%87%8F%E8%AF%8D.png"></p><h3 id="元字符之字符类"><a href="#元字符之字符类" class="headerlink" title="元字符之字符类"></a>元字符之字符类</h3><p><img src="/2023/03/09/JS2023BOM/%E8%BE%B9%E7%95%8C%E7%AC%A6%E4%B9%8B%E5%AD%97%E7%AC%A6%E7%B1%BB.png"></p><blockquote><p>最后一个优势在于可以出现两次</p><p><code>均为精准</code></p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E5%85%A8%E9%80%89%E7%9A%84%E5%85%83%E5%AD%97%E7%AC%A6.png"></p><blockquote><p>全选</p></blockquote><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p><img src="/2023/03/09/JS2023BOM/%E5%B0%B1%E8%BF%91%E5%8E%9F%E5%88%99%E5%85%83%E5%AD%97%E7%AC%A6.png"></p><blockquote><p>^[1-9] [0-9]{4,}$：以第一个中括号开头，以第二个中括号结尾，且满足+=4</p><p>中间没有空格</p></blockquote><blockquote><p>[^0-9],除了括号里面的，<code>表示取反</code></p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E5%BF%AB%E6%8D%B7%E5%AE%9A%E4%B9%89%E5%AD%97%E7%AC%A6%E7%B1%BB.png"></p><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><p><img src="/2023/03/09/JS2023BOM/%E4%BF%AE%E9%A5%B0%E7%AC%A6.png"></p><blockquote><p>用于约束正则表达式</p></blockquote><h3 id="replace替换"><a href="#replace替换" class="headerlink" title="replace替换"></a>replace替换</h3><p><img src="/2023/03/09/JS2023BOM/%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E7%B1%BB.png"></p><blockquote><p>联想到：屏蔽词，王者里面的</p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E6%95%B4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%BF%E6%8D%A2.png"></p><hr><h2 id="短信发送倒计时"><a href="#短信发送倒计时" class="headerlink" title="短信发送倒计时"></a>短信发送倒计时</h2><h3 id="change事件监听"><a href="#change事件监听" class="headerlink" title="change事件监听"></a>change事件监听</h3><blockquote><p>有改动再触发</p></blockquote><p><img src="/2023/03/09/JS2023BOM/change%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6.png"></p><h3 id="追加样式-toggle"><a href="#追加样式-toggle" class="headerlink" title="追加样式(toggle)"></a>追加样式(toggle)</h3><blockquote><p>实现同一协议的勾选的css切换</p></blockquote><h4 id="js"><a href="#js" class="headerlink" title="js"></a>js</h4><p><img src="/2023/03/09/JS2023BOM/%E8%BF%BD%E5%8A%A0%E6%A0%B7%E5%BC%8Ftoggle.png"></p><h4 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/03/09/JS2023BOM/toggle.png"></p><h3 id="追加样式-contains"><a href="#追加样式-contains" class="headerlink" title="追加样式(contains)"></a>追加样式(contains)</h3><blockquote><p>含有返回true,<code>利用返回判断 </code></p><p>我的想法是直接判断样式(以前的伪类样式返回数字)</p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E6%A0%B7%E5%BC%8F%E8%BF%BD%E5%8A%A0contains.png"></p><h3 id="全局提交判断"><a href="#全局提交判断" class="headerlink" title="全局提交判断"></a>全局提交判断</h3><blockquote><p>利用封装函数返回的值，一般都是<code>布尔值</code></p></blockquote><p><img src="/2023/03/09/JS2023BOM/%E5%8C%85%E8%A3%85%E5%87%BD%E6%95%B0%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E9%80%9A%E8%BF%87.png"></p><h3 id="flag-防误触变量"><a href="#flag-防误触变量" class="headerlink" title="flag(防误触变量)"></a>flag(防误触变量)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> flag = <span class="literal">true</span></span><br><span class="line">code.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">//防止多次计时</span></span><br><span class="line">  <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    flag = <span class="literal">false</span></span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    flag = <span class="literal">true</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>防误触，多次计时</p></blockquote><h3 id="localStorage的使用"><a href="#localStorage的使用" class="headerlink" title="localStorage的使用"></a>localStorage的使用</h3><p><img src="/2023/03/09/JS2023BOM/%E5%AD%98%E5%82%A8localStorage.png"></p><blockquote><p>可以用于缓存用户名</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git基本用法</title>
      <link href="/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Git的初认识"><a href="#Git的初认识" class="headerlink" title="Git的初认识"></a>Git的初认识</h2><p><img src="/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/Git%E5%B7%A5%E4%BD%9C%E7%A4%BA%E6%84%8F%E5%9B%BE.png"></p><h3 id="git创建仓库"><a href="#git创建仓库" class="headerlink" title="git创建仓库"></a>git创建仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.仓库初始化，同时生成默认master分支</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure><blockquote><ul><li>每次操作之前都要进行git init</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2.将内容放到暂缓区(因为不是指定，所以可能会有多余文件)</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#2.详细文件</span></span><br><span class="line">git add 文件</span><br></pre></td></tr></table></figure><blockquote><ul><li>送至暂缓区(修改的文件需要追踪才能提交)</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.将暂缓区的信息提交</span></span><br><span class="line">git commit</span><br><span class="line"><span class="comment">#包含了add,但可能会有多余文件</span></span><br><span class="line">git commit -a -m <span class="string">&quot;修改注释&quot;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>-m  “修改注释”</li><li><code>一键提交不知道为什么不行</code></li></ul></blockquote><hr><h2 id="git分支管理"><a href="#git分支管理" class="headerlink" title="git分支管理"></a>git分支管理</h2><p><img src="/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86.png"></p><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.生成分支</span></span><br><span class="line">git branch 分支名字</span><br></pre></td></tr></table></figure><blockquote><ul><li>第一次提交会有默认分支master</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2.切换到()分支</span></span><br><span class="line">git checkout 分支名字</span><br><span class="line"><span class="comment">#2.一步到位，生成+切换</span></span><br><span class="line">git checkout -b 文件</span><br></pre></td></tr></table></figure><blockquote><ul><li>git branch -d 文件 (删除分支,<code>切换出才能删除</code>)</li><li>切换分支需要<code>先提交修改</code></li></ul></blockquote><h3 id="分支的细节"><a href="#分支的细节" class="headerlink" title="分支的细节"></a>分支的细节</h3><blockquote><ul><li><code>git log(上一次的提交记录)</code>查看当前分支</li></ul></blockquote><p><img src="/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/%E5%B7%A5%E4%BD%9C%E5%88%86%E6%94%AF.png"></p><blockquote><p>1.<code>HEAD→指向当前工作的分支</code></p><p>2.切换分支需要<code>先提交修改</code></p><p>3.分支没有commit到本地时(新的改动)，会保留上一次提交的最初状态。(我理解为，各个分支独立)</p></blockquote><hr><h3 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#分支合并</span></span><br><span class="line">git merge 分支名字</span><br></pre></td></tr></table></figure><blockquote><ul><li><p>合并之前，需要提交修改</p></li><li><p>合并前可以通过git status查看未提交</p></li><li><p>合并会提示内容差别</p></li></ul></blockquote><hr><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p><img src="/2023/02/28/Git%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/Git%E5%B7%A5%E4%BD%9C%E7%A4%BA%E6%84%8F%E5%9B%BE2.png"></p><h3 id="远程项目操作"><a href="#远程项目操作" class="headerlink" title="远程项目操作"></a>远程项目操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 项目地址</span><br></pre></td></tr></table></figure><blockquote><p>没怎么用过，可以复制别人的项目，不建议github的(卡)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将本地仓库推到远程仓库</span></span><br><span class="line">git push 地址</span><br></pre></td></tr></table></figure><blockquote><p>绑定仓库之后直接push就好了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 到分支master</span></span><br><span class="line">git pull --rebase origin master  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2023JS</title>
      <link href="/2023/02/28/JS2023/"/>
      <url>/2023/02/28/JS2023/</url>
      
        <content type="html"><![CDATA[<h2 id="2023JS新增"><a href="#2023JS新增" class="headerlink" title="2023JS新增"></a>2023JS新增</h2><h3 id="定义改成let"><a href="#定义改成let" class="headerlink" title="定义改成let"></a>定义改成let</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num</span><br><span class="line"><span class="comment">//改成</span></span><br><span class="line"><span class="keyword">let</span> num</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><blockquote><p>解决了var可以定义多个同命名的变量的问题<code>let定义的变量唯一</code></p></blockquote><hr><h3 id="页面断点调试"><a href="#页面断点调试" class="headerlink" title="页面断点调试"></a>页面断点调试</h3><p><img src="/2023/02/28/JS2023/%E8%B0%83%E8%AF%95.png" alt="image-20230206165107492"></p><blockquote><p>鼠标移至变量处可以获得当前的值</p><p>双击之后刷新</p></blockquote><hr><h3 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h3><blockquote><p>for(;;){}</p><p>while(“aaa”){}</p><p>while(true){}</p></blockquote><h4 id="金字塔的实现"><a href="#金字塔的实现" class="headerlink" title="金字塔的实现"></a>金字塔的实现</h4><p><img src="/2023/02/28/JS2023/%E9%87%91%E5%AD%97%E5%A1%94.png" alt="image-20230206165107492"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">10</span>; k &gt;= i; k--) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&amp;nbsp&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;❤&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="操作数组"><a href="#操作数组" class="headerlink" title="操作数组"></a>操作数组</h3><h4 id="script"><a href="#script" class="headerlink" title="script"></a>script</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;刘备&#x27;</span>, <span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>]</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;div&gt;<span class="subst">$&#123;arr&#125;</span>&lt;/div&gt;`</span>)</span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">1</span>)<span class="comment">//(起始位置，删除数量)</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;div&gt;<span class="subst">$&#123;arr&#125;</span>&lt;/div&gt;`</span>)</span><br></pre></td></tr></table></figure><h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: red solid <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">2px</span> red</span><br><span class="line">    margin: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">189</span>, <span class="number">239</span>, <span class="number">231</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果如图"><a href="#效果如图" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E7%B2%BE%E7%A1%AE%E5%88%A0%E9%99%A4.png" alt="splice"></p><blockquote><p>splice做到了数组<code>选择删除的位置和数量</code></p></blockquote><hr><h3 id="对象添加"><a href="#对象添加" class="headerlink" title="对象添加"></a>对象添加</h3><p><img src="/2023/02/28/JS2023/%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%B7%BB%E5%8A%A0.png"></p><blockquote><p><code>变量得用中括号</code>，中括号里面是字符串。</p><p>o.age = 18</p><p>o.[‘age’] = 18</p><p><code>const k = &#39;age&#39;   o.[k] = 18</code></p><p><code>(item.name = &#39;age&#39; &amp; item.value = 18    o.[item.name] = item.value)</code></p></blockquote><h3 id="函数返回-return"><a href="#函数返回-return" class="headerlink" title="函数返回(return)"></a>函数返回(return)</h3><h4 id="script-1"><a href="#script-1" class="headerlink" title="script"></a>script</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getNum</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> max = arr[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">let</span> min = arr[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">                    max = arr[i]</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (min &gt; arr[i]) &#123;</span><br><span class="line">                    min = arr[i]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> [max, min]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> newArr = <span class="title function_">getNum</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.price&#x27;</span>)</span><br><span class="line">        div.<span class="property">innerHTML</span> = <span class="string">`最小值是: <span class="subst">$&#123;newArr[<span class="number">1</span>]&#125;</span>`</span></span><br><span class="line">        <span class="keyword">let</span> min = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.min&#x27;</span>)</span><br><span class="line">        min.<span class="property">innerHTML</span> = <span class="string">`最大值是: <span class="subst">$&#123;newArr[<span class="number">0</span>]&#125;</span>`</span></span><br></pre></td></tr></table></figure><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;min&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如图-1"><a href="#效果如图-1" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E8%BF%94%E5%9B%9E%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E5%80%BC.png" alt="splice"></p><blockquote><p>利用return返回<code>数组实现多个答案</code></p></blockquote><hr><h3 id="立即执行函数"><a href="#立即执行函数" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><blockquote><p><code>可以解决变量污染(同名变量)</code></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>)(x, y)&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y)</span><br><span class="line">&#125;(<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//注意这里要加分号结束</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">x，y</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y)</span><br><span class="line">&#125;(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">);<span class="comment">//注意这里要加分号结束</span></span><br></pre></td></tr></table></figure><hr><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="基本数据类型-值类型"><a href="#基本数据类型-值类型" class="headerlink" title="基本数据类型(值类型)"></a>基本数据类型(值类型)</h4><blockquote><ul><li>string</li><li>number</li><li>boolean</li><li>undefined</li><li>null</li></ul></blockquote><h4 id="引用数据类型（地址类型）"><a href="#引用数据类型（地址类型）" class="headerlink" title="引用数据类型（地址类型）"></a>引用数据类型（地址类型）</h4><blockquote><ul><li><p>Object</p></li><li><p>Array</p></li><li><p>Date</p><p>…(对象)</p></li></ul></blockquote><h4 id="如下图"><a href="#如下图" class="headerlink" title="如下图"></a>如下图</h4><p><img src="/2023/02/28/JS2023/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png"></p><hr><h2 id="DOM事件"><a href="#DOM事件" class="headerlink" title="DOM事件"></a>DOM事件</h2><h3 id="追加样式"><a href="#追加样式" class="headerlink" title="追加样式"></a>追加样式</h3><h4 id="css-1"><a href="#css-1" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.add</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blueviolet;</span><br><span class="line">    <span class="attribute">border</span>:red solid <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="html-1"><a href="#html-1" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">haha</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;add&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//追加一个样式</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如下图"><a href="#效果如下图" class="headerlink" title="效果如下图"></a>效果如下图</h4><p><img src="/2023/02/28/JS2023/%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F.png"></p><blockquote><ul><li>add()//添加</li><li>remove()//移除</li><li>taggle()//切换没有加上，有删除</li></ul></blockquote><hr><h3 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h3><h4 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h4><h5 id="js"><a href="#js" class="headerlink" title="js"></a>js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 1. 初始数据</span></span><br><span class="line">        <span class="keyword">const</span> sliderData = [</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;01.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;什么超前了？&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(100, 67, 68)&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;02.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;黑暗传说！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(43, 35, 26)&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;03.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;什么出现了！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(36, 31, 33)&#x27;</span> &#125;,</span><br><span class="line">            </span><br><span class="line">        ]</span><br><span class="line"><span class="comment">//2.获取对象        </span></span><br><span class="line">        <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-wrapper img&#x27;</span>)</span><br><span class="line">        <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer p&#x27;</span>)</span><br><span class="line">        <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer toggle&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">const</span> time = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            i++</span><br><span class="line">            <span class="keyword">if</span> (i === sliderData.<span class="property">length</span>) &#123;</span><br><span class="line">                i = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            img.<span class="property">src</span> = sliderData[i].<span class="property">url</span></span><br><span class="line">            p.<span class="property">innerHTML</span> = sliderData[i].<span class="property">title</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator .active`</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator li:nth-child(<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>)`</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">        &#125;, <span class="number">500</span>)<span class="comment">//注意标号</span></span><br></pre></td></tr></table></figure><blockquote><p>删除增加，利用了排他思想</p></blockquote><h5 id="html-2"><a href="#html-2" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-footer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>什么太超前了？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;slider-indicator&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toggle&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="css-2"><a href="#css-2" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">         <span class="attribute">box-sizing</span>: border-box;<span class="comment">/*盒子变化跟随内边距*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">display</span>: flex;</span><br><span class="line">        &#125;<span class="comment">/*适合摆图标位置*/</span></span><br><span class="line">     </span><br><span class="line"><span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">28px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">28px</span>;</span><br><span class="line">            appearance: none;</span><br><span class="line">            <span class="comment">/*可以时样式消失*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-indicator</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">            <span class="attribute">display</span>: flex;<span class="comment">/*让li变横排列*/</span></span><br><span class="line">            <span class="attribute">align-items</span>: center;<span class="comment">/*li居中*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;<span class="comment">/*透明度*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h5><p><img src="/2023/02/28/JS2023/%E8%BD%AE%E6%92%AD%E5%9B%BE.png"></p><hr><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h3><p><code>将自己作为参数</code>传递给其它函数使用的函数</p><blockquote><ul><li><p>事件监听</p><p>btn.addEventListener(‘click’,function(){</p><p>console.log(‘##’)</p><p>})</p></li><li><p>setInterval(fn,1000)时间函数</p></li></ul></blockquote><hr><h3 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h3><blockquote><p>事件捕获</p><p>事件冒泡<code>子元素冒泡经过父元素</code></p><p>方便事件<code>委托给父亲</code>，解决了需要多个绑定事件的问题</p><p>因为冒泡document.querySelector(‘ul’)等价于</p><p>document.querySelectorAll(‘li’)</p><p>用tagName区别其它标签名</p></blockquote><blockquote><p>在JavaScript中，添加到页面上的事件处理程序数量将直接关系到页面的整体运行性能，因为需要不断的与dom节点进行交互，访问dom的次数越多，引起浏览器重绘与重排的次数也就越多，就会延长整个页面的交互就绪时间，这就是为什么性能优化的主要思想之一就是减少DOM操作的原因；如果要用事件委托，就会将所有的操作放到js程序里面，与dom的操作就只需要交互一次，这样就能大大的减少与dom的交互次数，<code>提高性能</code></p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p><img src="/2023/02/28/JS2023/%E4%B8%A4%E7%A7%8D%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB.png"></p><blockquote><p><code>事件解绑</code></p><p>onclick=null,</p><p>removeEventListener(‘click’,<code>fn</code>)<code>函数必须有命名</code></p><p><code>阻止冒泡</code></p><p>事件对象.stopPropagation()</p></blockquote><h4 id="阻止默认行为"><a href="#阻止默认行为" class="headerlink" title="阻止默认行为"></a>阻止默认行为</h4><p><img src="/2023/02/28/JS2023/%E9%98%BB%E6%AD%A2%E9%BB%98%E8%AE%A4%E6%8F%90%E4%BA%A4.png"></p><blockquote><p>默认跳转，默认发送等等</p></blockquote><hr><h3 id="Tag栏切换"><a href="#Tag栏切换" class="headerlink" title="Tag栏切换"></a>Tag栏切换</h3><blockquote><p>1.通过tagName判断点击的对象</p><p>2.<code>target.dataset.id</code>取目标的对应序号</p><p>3.直接获取父级利用事件委托</p></blockquote><h4 id="html-3"><a href="#html-3" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-id</span>=<span class="string">&quot;4&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>精品<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tab&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">lis.<span class="title function_">addEventListener</span>(<span class="string">`click`</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;A&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> i = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如图-2"><a href="#效果如图-2" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.png"></p><h4 id="忘了的"><a href="#忘了的" class="headerlink" title="忘了的"></a>忘了的</h4><blockquote><p><code>a,标签</code>通过decoration，去除下划线</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tab <span class="selector-tag">a</span> &#123;</span><br><span class="line">     <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他事件"><a href="#其他事件" class="headerlink" title="其他事件"></a>其他事件</h2><h3 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h3><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6.png"></p><h4 id="load事件"><a href="#load事件" class="headerlink" title="load事件"></a>load事件</h4><blockquote><p>等待页面全部加载完</p></blockquote><h4 id="DOMContentLoaded"><a href="#DOMContentLoaded" class="headerlink" title="DOMContentLoaded"></a>DOMContentLoaded</h4><blockquote><p>无需等待样式、图像加载完成</p></blockquote><hr><h3 id="页面滚动事件"><a href="#页面滚动事件" class="headerlink" title="页面滚动事件"></a>页面滚动事件</h3><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E4%BA%8B%E4%BB%B6.png"></p><blockquote><p>1.页面滚动持续触发</p><p>2.document或window添加</p></blockquote><blockquote><p>为什么要用</p><p>1.有些事件需要滚动到某些地方触发</p><p>​    <code>固定导航栏</code>，<code>返回顶部图标</code></p></blockquote><h4 id="页面距离"><a href="#页面距离" class="headerlink" title="页面距离"></a>页面距离</h4><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E8%B7%9D%E7%A6%BB.png"></p><blockquote><p>scrollTop</p><p>scrollLeft</p><p><code>超出框</code>的距离</p><p>可读写(<code>可以赋值</code>让改变初始位置)</p></blockquote><blockquote><p>scrollTo(x , y)</p></blockquote><hr><h3 id="页面缩放"><a href="#页面缩放" class="headerlink" title="页面缩放"></a>页面缩放</h3><blockquote><p>调整窗口大小<code>resize</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口变化了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="调节窗口像素"><a href="#调节窗口像素" class="headerlink" title="调节窗口像素"></a>调节窗口像素</h4><p><img src="/2023/02/28/JS2023/%E4%B8%8D%E5%90%8C%E9%A1%B5%E9%9D%A2%E5%B0%BA%E5%AF%B8%E4%B8%8D%E5%90%8C%E8%B0%83%E8%8A%82.png"></p><blockquote><p>获得变化的屏幕尺寸，不断调节</p><p><code>页面的像素</code>，<code>调节字体大小</code></p></blockquote><hr><h3 id="获取宽高"><a href="#获取宽高" class="headerlink" title="获取宽高"></a>获取宽高</h3><h4 id="不包含外边框"><a href="#不包含外边框" class="headerlink" title="不包含外边框"></a>不包含外边框</h4><p><img src="/2023/02/28/JS2023/%E8%8E%B7%E5%8F%96%E5%AE%BD%E9%AB%98.png"></p><blockquote><p>获得的盒子宽高<code>不包含外边距</code></p><p>clientWidth</p><p>clientHeight</p></blockquote><h4 id="包含所有边框"><a href="#包含所有边框" class="headerlink" title="包含所有边框"></a>包含所有边框</h4><blockquote><p>offsetWidth</p><p>offsetHeight</p><p>获得的<code>盒子</code>宽高<code>包含</code>内容+padding+border</p><p>offsetTop</p><p>offsetLeft</p><p>与<code>窗口</code>，受<code>最近</code>父亲影响，当<code>相对定位</code>时，算父级的距离,100+8(外边)</p><p>得出<code>数字型</code>数据,<code>只读</code>。</p></blockquote><h4 id="元素窗口查信息"><a href="#元素窗口查信息" class="headerlink" title="元素窗口查信息"></a>元素窗口查信息</h4><blockquote><p><code>元素.getBoundingClientRect()</code></p></blockquote><h5 id="css-3"><a href="#css-3" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">border</span>: red solid <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="html-4"><a href="#html-4" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="title function_">getBoundingClientRect</span>()); </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a>效果如下</h5><p><img src="/2023/02/28/JS2023/%E5%85%83%E7%B4%A0%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>将offsetTop 的值给 scrollTop<code>实现跳转</code></p></blockquote><hr><h2 id="插入表单制作"><a href="#插入表单制作" class="headerlink" title="插入表单制作"></a>插入表单制作</h2><h3 id="html-5"><a href="#html-5" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>新增学员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> /&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;age&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    性别:</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gender&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    薪资：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;salary&quot;</span> <span class="attr">name</span>=<span class="string">&quot;salary&quot;</span> /&gt;</span></span><br><span class="line">    就业城市：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">class</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;广州&quot;</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;曹县&quot;</span>&gt;</span>曹县<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span>录入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>就业榜<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>薪资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>就业城市<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        &lt;tr&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;1001&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;欧阳霸天&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;19&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;男&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;15000&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;上海&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;</span></span><br><span class="line"><span class="comment">            &lt;a href=&quot;javascript:&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="comment">          &lt;/td&gt;</span></span><br><span class="line"><span class="comment">        &lt;/tr&gt; </span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="js-元素获取-主事件"><a href="#js-元素获取-主事件" class="headerlink" title="js(元素获取+主事件)"></a>js(元素获取+主事件)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素</span></span><br><span class="line">    <span class="keyword">const</span> tb = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tb&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> info = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.info&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> items = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;[name]&#x27;</span>)</span><br><span class="line">   <span class="comment">// ...省略</span></span><br><span class="line">    <span class="comment">//构造数组，利用for循环更新列表，重新(获取父级)生成子列表</span></span><br><span class="line">    <span class="keyword">const</span> arr = []</span><br><span class="line">    info.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="comment">//阻止跳转</span></span><br><span class="line">      e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      <span class="comment">//判断输入</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; items.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (items[i].<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;不能输入空的值&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//构造对象</span></span><br><span class="line">      <span class="keyword">const</span> obj = &#123;</span><br><span class="line">        <span class="attr">stuId</span>: arr.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">        <span class="attr">uname</span>: uname.<span class="property">value</span>&#125;,</span><br><span class="line">        <span class="attr">age</span>: age.<span class="property">value</span>&#125;,</span><br><span class="line">        <span class="attr">gender</span>: gender.<span class="property">value</span>&#125;,</span><br><span class="line">        <span class="attr">salary</span>: salary.<span class="property">value</span>&#125;,</span><br><span class="line">        <span class="attr">city</span>: city.<span class="property">value</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//对象送入数组</span></span><br><span class="line">      arr.<span class="title function_">push</span>(obj)</span><br><span class="line">      <span class="comment">//清空上一次的记录</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">      <span class="title function_">append</span>()</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="js-渲染函数"><a href="#js-渲染函数" class="headerlink" title="js(渲染函数)"></a>js(渲染函数)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">append</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//清空数据</span></span><br><span class="line">      tb.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="comment">//生成列表</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> tr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>)</span><br><span class="line">        tr.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].uname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].age&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].gender&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].salary&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].city&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;javascript:&quot; data-id = <span class="subst">$&#123;i&#125;</span>&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">          &lt;/td&gt;</span></span><br><span class="line"><span class="string">        `</span><span class="comment">//序号与数组对应</span></span><br><span class="line">        tb.<span class="title function_">appendChild</span>(tr)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="js-删除功能"><a href="#js-删除功能" class="headerlink" title="js(删除功能)"></a>js(删除功能)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除列表信息，重新渲染</span></span><br><span class="line">   tb.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>);</span><br><span class="line">     <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">     arr.<span class="title function_">splice</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>, <span class="number">1</span>)</span><br><span class="line">       <span class="comment">//重新排序</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">let</span> i = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">         arr[i].<span class="property">stuId</span> += -<span class="number">1</span></span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i].<span class="property">stuId</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">append</span>()</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><h2 id="改进表单"><a href="#改进表单" class="headerlink" title="改进表单"></a>改进表单</h2><h3 id="localStorage的使用"><a href="#localStorage的使用" class="headerlink" title="localStorage的使用"></a>localStorage的使用</h3><h4 id="js-1"><a href="#js-1" class="headerlink" title="js"></a>js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> objArr = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;arr&#x27;</span>))<span class="comment">//获取本地数据</span></span><br><span class="line"><span class="keyword">const</span> data = objArr </span><br><span class="line"><span class="keyword">const</span> arr = data ? data : []</span><br><span class="line"><span class="title function_">append</span>()</span><br></pre></td></tr></table></figure><blockquote><p>1.获得上次存储的数据(<code>对象为数组，所以类型为对象</code>)</p><p>2.声明为缓存数据(好习惯)</p><p>3.三元表达式，顺便兜底一个空数组(可能获取的信息是假的)</p><p>4.页面渲染缓存的数据</p></blockquote><h4 id="如图"><a href="#如图" class="headerlink" title="如图"></a>如图</h4><p><img src="/2023/02/28/JS2023/%E7%BC%93%E5%AD%98%E7%9A%84%E6%95%B0%E6%8D%AE.png"></p><h3 id="map-join的使用"><a href="#map-join的使用" class="headerlink" title="(map\join的使用)"></a>(map\join的使用)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> trArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item, i</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">` </span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.uname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.age&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.gender&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.salary&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.city&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;</span></span><br><span class="line"><span class="string">    &lt;a href=&quot;javascript:&quot; data-id = <span class="subst">$&#123;i&#125;</span>&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    `</span>## 2023JS新增</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 定义改成<span class="keyword">let</span></span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">var num</span></span><br><span class="line"><span class="string">//改成</span></span><br><span class="line"><span class="string">let num</span></span><br><span class="line"><span class="string">//</span></span><br></pre></td></tr></table></figure><blockquote><p>解决了var可以定义多个同命名的变量的问题<code>let定义的变量唯一</code></p></blockquote><hr><h3 id="页面断点调试-1"><a href="#页面断点调试-1" class="headerlink" title="页面断点调试"></a>页面断点调试</h3><p><img src="/2023/02/28/JS2023/%E8%B0%83%E8%AF%95.png" alt="image-20230206165107492"></p><blockquote><p>鼠标移至变量处可以获得当前的值</p><p>双击之后刷新</p></blockquote><hr><h3 id="无限循环-1"><a href="#无限循环-1" class="headerlink" title="无限循环"></a>无限循环</h3><blockquote><p>for(;;){}</p><p>while(“aaa”){}</p><p>while(true){}</p></blockquote><h4 id="金字塔的实现-1"><a href="#金字塔的实现-1" class="headerlink" title="金字塔的实现"></a>金字塔的实现</h4><p><img src="/2023/02/28/JS2023/%E9%87%91%E5%AD%97%E5%A1%94.png" alt="image-20230206165107492"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">10</span>; k &gt;= i; k--) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;&amp;nbsp&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;❤&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="操作数组-1"><a href="#操作数组-1" class="headerlink" title="操作数组"></a>操作数组</h3><h4 id="script-2"><a href="#script-2" class="headerlink" title="script"></a>script</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">&#x27;刘备&#x27;</span>, <span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>]</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;div&gt;<span class="subst">$&#123;arr&#125;</span>&lt;/div&gt;`</span>)</span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>,<span class="number">1</span>)<span class="comment">//(起始位置，删除数量)</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">`&lt;div&gt;<span class="subst">$&#123;arr&#125;</span>&lt;/div&gt;`</span>)</span><br></pre></td></tr></table></figure><h4 id="css-4"><a href="#css-4" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: red solid <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">0</span> <span class="number">2px</span> red</span><br><span class="line">    margin: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">189</span>, <span class="number">239</span>, <span class="number">231</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果如图-3"><a href="#效果如图-3" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E7%B2%BE%E7%A1%AE%E5%88%A0%E9%99%A4.png" alt="splice"></p><blockquote><p>splice做到了数组<code>选择删除的位置和数量</code></p></blockquote><hr><h3 id="对象添加-1"><a href="#对象添加-1" class="headerlink" title="对象添加"></a>对象添加</h3><p><img src="/2023/02/28/JS2023/%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%B7%BB%E5%8A%A0.png"></p><blockquote><p><code>变量得用中括号</code>，中括号里面是字符串。</p><p>o.age = 18</p><p>o.[‘age’] = 18</p><p><code>const k = &#39;age&#39;   o.[k] = 18</code></p><p><code>(item.name = &#39;age&#39; &amp; item.value = 18    o.[item.name] = item.value)</code></p></blockquote><h3 id="函数返回-return-1"><a href="#函数返回-return-1" class="headerlink" title="函数返回(return)"></a>函数返回(return)</h3><h4 id="script-3"><a href="#script-3" class="headerlink" title="script"></a>script</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getNum</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> max = arr[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">let</span> min = arr[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (max &lt; arr[i]) &#123;</span><br><span class="line">                    max = arr[i]</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (min &gt; arr[i]) &#123;</span><br><span class="line">                    min = arr[i]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> [max, min]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> newArr = <span class="title function_">getNum</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">11</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.price&#x27;</span>)</span><br><span class="line">        div.<span class="property">innerHTML</span> = <span class="string">`最小值是: <span class="subst">$&#123;newArr[<span class="number">1</span>]&#125;</span>`</span></span><br><span class="line">        <span class="keyword">let</span> min = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.min&#x27;</span>)</span><br><span class="line">        min.<span class="property">innerHTML</span> = <span class="string">`最大值是: <span class="subst">$&#123;newArr[<span class="number">0</span>]&#125;</span>`</span></span><br></pre></td></tr></table></figure><h4 id="html-6"><a href="#html-6" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;min&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如图-4"><a href="#效果如图-4" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E8%BF%94%E5%9B%9E%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E5%80%BC.png" alt="splice"></p><blockquote><p>利用return返回<code>数组实现多个答案</code></p></blockquote><hr><h3 id="立即执行函数-1"><a href="#立即执行函数-1" class="headerlink" title="立即执行函数"></a>立即执行函数</h3><blockquote><p><code>可以解决变量污染(同名变量)</code></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>)(x, y)&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y)</span><br><span class="line">&#125;(<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//注意这里要加分号结束</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params">x，y</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="variable language_">console</span>.<span class="title function_">log</span>(x + y)</span><br><span class="line">&#125;(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">);<span class="comment">//注意这里要加分号结束</span></span><br></pre></td></tr></table></figure><hr><h3 id="数据类型-1"><a href="#数据类型-1" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="基本数据类型-值类型-1"><a href="#基本数据类型-值类型-1" class="headerlink" title="基本数据类型(值类型)"></a>基本数据类型(值类型)</h4><blockquote><ul><li>string</li><li>number</li><li>boolean</li><li>undefined</li><li>null</li></ul></blockquote><h4 id="引用数据类型（地址类型）-1"><a href="#引用数据类型（地址类型）-1" class="headerlink" title="引用数据类型（地址类型）"></a>引用数据类型（地址类型）</h4><blockquote><ul><li><p>Object</p></li><li><p>Array</p></li><li><p>Date</p><p>…(对象)</p></li></ul></blockquote><h4 id="如下图-1"><a href="#如下图-1" class="headerlink" title="如下图"></a>如下图</h4><p><img src="/2023/02/28/JS2023/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png"></p><hr><h2 id="DOM事件-1"><a href="#DOM事件-1" class="headerlink" title="DOM事件"></a>DOM事件</h2><h3 id="追加样式-1"><a href="#追加样式-1" class="headerlink" title="追加样式"></a>追加样式</h3><h4 id="css-5"><a href="#css-5" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.add</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blueviolet;</span><br><span class="line">    <span class="attribute">border</span>:red solid <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="html-7"><a href="#html-7" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">haha</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">box.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;add&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">//追加一个样式</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如下图-1"><a href="#效果如下图-1" class="headerlink" title="效果如下图"></a>效果如下图</h4><p><img src="/2023/02/28/JS2023/%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F.png"></p><blockquote><ul><li>add()//添加</li><li>remove()//移除</li><li>taggle()//切换没有加上，有删除</li></ul></blockquote><hr><h3 id="数组对象-1"><a href="#数组对象-1" class="headerlink" title="数组对象"></a>数组对象</h3><h4 id="轮播图-1"><a href="#轮播图-1" class="headerlink" title="轮播图"></a>轮播图</h4><h5 id="js-2"><a href="#js-2" class="headerlink" title="js"></a>js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 1. 初始数据</span></span><br><span class="line">        <span class="keyword">const</span> sliderData = [</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;01.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;什么超前了？&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(100, 67, 68)&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;02.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;黑暗传说！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(43, 35, 26)&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">url</span>: <span class="string">&#x27;03.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;什么出现了！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(36, 31, 33)&#x27;</span> &#125;,</span><br><span class="line">            </span><br><span class="line">        ]</span><br><span class="line"><span class="comment">//2.获取对象        </span></span><br><span class="line">        <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-wrapper img&#x27;</span>)</span><br><span class="line">        <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer p&#x27;</span>)</span><br><span class="line">        <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer toggle&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">const</span> time = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            i++</span><br><span class="line">            <span class="keyword">if</span> (i === sliderData.<span class="property">length</span>) &#123;</span><br><span class="line">                i = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">            img.<span class="property">src</span> = sliderData[i].<span class="property">url</span></span><br><span class="line">            p.<span class="property">innerHTML</span> = sliderData[i].<span class="property">title</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator .active`</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator li:nth-child(<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>)`</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span><br><span class="line">            </span><br><span class="line">        &#125;, <span class="number">500</span>)<span class="comment">//注意标号</span></span><br></pre></td></tr></table></figure><blockquote><p>删除增加，利用了排他思想</p></blockquote><h5 id="html-8"><a href="#html-8" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-footer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>什么太超前了？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;slider-indicator&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toggle&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="css-6"><a href="#css-6" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">         <span class="attribute">box-sizing</span>: border-box;<span class="comment">/*盒子变化跟随内边距*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">display</span>: flex;</span><br><span class="line">        &#125;<span class="comment">/*适合摆图标位置*/</span></span><br><span class="line">     </span><br><span class="line"><span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span> &#123;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">28px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">28px</span>;</span><br><span class="line">            appearance: none;</span><br><span class="line">            <span class="comment">/*可以时样式消失*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-indicator</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">            <span class="attribute">display</span>: flex;<span class="comment">/*让li变横排列*/</span></span><br><span class="line">            <span class="attribute">align-items</span>: center;<span class="comment">/*li居中*/</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">            <span class="attribute">opacity</span>: <span class="number">1</span>;<span class="comment">/*透明度*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="效果如下-2"><a href="#效果如下-2" class="headerlink" title="效果如下"></a>效果如下</h5><p><img src="/2023/02/28/JS2023/%E8%BD%AE%E6%92%AD%E5%9B%BE.png"></p><hr><h3 id="回调函数-1"><a href="#回调函数-1" class="headerlink" title="回调函数"></a>回调函数</h3><p><code>将自己作为参数</code>传递给其它函数使用的函数</p><blockquote><ul><li><p>事件监听</p><p>btn.addEventListener(‘click’,function(){</p><p>console.log(‘##’)</p><p>})</p></li><li><p>setInterval(fn,1000)时间函数</p></li></ul></blockquote><hr><h3 id="事件流-1"><a href="#事件流-1" class="headerlink" title="事件流"></a>事件流</h3><blockquote><p>事件捕获</p><p>事件冒泡<code>子元素冒泡经过父元素</code></p><p>方便事件<code>委托给父亲</code>，解决了需要多个绑定事件的问题</p><p>因为冒泡document.querySelector(‘ul’)等价于</p><p>document.querySelectorAll(‘li’)</p><p>用tagName区别其它标签名</p></blockquote><blockquote><p>在JavaScript中，添加到页面上的事件处理程序数量将直接关系到页面的整体运行性能，因为需要不断的与dom节点进行交互，访问dom的次数越多，引起浏览器重绘与重排的次数也就越多，就会延长整个页面的交互就绪时间，这就是为什么性能优化的主要思想之一就是减少DOM操作的原因；如果要用事件委托，就会将所有的操作放到js程序里面，与dom的操作就只需要交互一次，这样就能大大的减少与dom的交互次数，<code>提高性能</code></p></blockquote><h4 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h4><p><img src="/2023/02/28/JS2023/%E4%B8%A4%E7%A7%8D%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB.png"></p><blockquote><p><code>事件解绑</code></p><p>onclick=null,</p><p>removeEventListener(‘click’,<code>fn</code>)<code>函数必须有命名</code></p><p><code>阻止冒泡</code></p><p>事件对象.stopPropagation()</p></blockquote><h4 id="阻止默认行为-1"><a href="#阻止默认行为-1" class="headerlink" title="阻止默认行为"></a>阻止默认行为</h4><p><img src="/2023/02/28/JS2023/%E9%98%BB%E6%AD%A2%E9%BB%98%E8%AE%A4%E6%8F%90%E4%BA%A4.png"></p><blockquote><p>默认跳转，默认发送等等</p></blockquote><hr><h3 id="Tag栏切换-1"><a href="#Tag栏切换-1" class="headerlink" title="Tag栏切换"></a>Tag栏切换</h3><blockquote><p>1.通过tagName判断点击的对象</p><p>2.<code>target.dataset.id</code>取目标的对应序号</p><p>3.直接获取父级利用事件委托</p></blockquote><h4 id="html-9"><a href="#html-9" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">data-id</span>=<span class="string">&quot;4&quot;</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>精品<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> lis = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tab&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">lis.<span class="title function_">addEventListener</span>(<span class="string">`click`</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;A&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> i = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果如图-5"><a href="#效果如图-5" class="headerlink" title="效果如图"></a>效果如图</h4><p><img src="/2023/02/28/JS2023/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.png"></p><h4 id="忘了的-1"><a href="#忘了的-1" class="headerlink" title="忘了的"></a>忘了的</h4><blockquote><p><code>a,标签</code>通过decoration，去除下划线</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tab <span class="selector-tag">a</span> &#123;</span><br><span class="line">     <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他事件-1"><a href="#其他事件-1" class="headerlink" title="其他事件"></a>其他事件</h2><h3 id="页面加载事件-1"><a href="#页面加载事件-1" class="headerlink" title="页面加载事件"></a>页面加载事件</h3><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E4%BA%8B%E4%BB%B6.png"></p><h4 id="load事件-1"><a href="#load事件-1" class="headerlink" title="load事件"></a>load事件</h4><blockquote><p>等待页面全部加载完</p></blockquote><h4 id="DOMContentLoaded-1"><a href="#DOMContentLoaded-1" class="headerlink" title="DOMContentLoaded"></a>DOMContentLoaded</h4><blockquote><p>无需等待样式、图像加载完成</p></blockquote><hr><h3 id="页面滚动事件-1"><a href="#页面滚动事件-1" class="headerlink" title="页面滚动事件"></a>页面滚动事件</h3><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E4%BA%8B%E4%BB%B6.png"></p><blockquote><p>1.页面滚动持续触发</p><p>2.document或window添加</p></blockquote><blockquote><p>为什么要用</p><p>1.有些事件需要滚动到某些地方触发</p><p>​    <code>固定导航栏</code>，<code>返回顶部图标</code></p></blockquote><h4 id="页面距离-1"><a href="#页面距离-1" class="headerlink" title="页面距离"></a>页面距离</h4><p><img src="/2023/02/28/JS2023/%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E8%B7%9D%E7%A6%BB.png"></p><blockquote><p>scrollTop</p><p>scrollLeft</p><p><code>超出框</code>的距离</p><p>可读写(<code>可以赋值</code>让改变初始位置)</p></blockquote><blockquote><p>scrollTo(x , y)</p></blockquote><hr><h3 id="页面缩放-1"><a href="#页面缩放-1" class="headerlink" title="页面缩放"></a>页面缩放</h3><blockquote><p>调整窗口大小<code>resize</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口变化了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="调节窗口像素-1"><a href="#调节窗口像素-1" class="headerlink" title="调节窗口像素"></a>调节窗口像素</h4><p><img src="/2023/02/28/JS2023/%E4%B8%8D%E5%90%8C%E9%A1%B5%E9%9D%A2%E5%B0%BA%E5%AF%B8%E4%B8%8D%E5%90%8C%E8%B0%83%E8%8A%82.png"></p><blockquote><p>获得变化的屏幕尺寸，不断调节</p><p><code>页面的像素</code>，<code>调节字体大小</code></p></blockquote><hr><h3 id="获取宽高-1"><a href="#获取宽高-1" class="headerlink" title="获取宽高"></a>获取宽高</h3><h4 id="不包含外边框-1"><a href="#不包含外边框-1" class="headerlink" title="不包含外边框"></a>不包含外边框</h4><p><img src="/2023/02/28/JS2023/%E8%8E%B7%E5%8F%96%E5%AE%BD%E9%AB%98.png"></p><blockquote><p>获得的盒子宽高<code>不包含外边距</code></p><p>clientWidth</p><p>clientHeight</p></blockquote><h4 id="包含所有边框-1"><a href="#包含所有边框-1" class="headerlink" title="包含所有边框"></a>包含所有边框</h4><blockquote><p>offsetWidth</p><p>offsetHeight</p><p>获得的<code>盒子</code>宽高<code>包含</code>内容+padding+border</p><p>offsetTop</p><p>offsetLeft</p><p>与<code>窗口</code>，受<code>最近</code>父亲影响，当<code>相对定位</code>时，算父级的距离,100+8(外边)</p><p>得出<code>数字型</code>数据,<code>只读</code>。</p></blockquote><h4 id="元素窗口查信息-1"><a href="#元素窗口查信息-1" class="headerlink" title="元素窗口查信息"></a>元素窗口查信息</h4><blockquote><p><code>元素.getBoundingClientRect()</code></p></blockquote><h5 id="css-7"><a href="#css-7" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">border</span>: red solid <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="html-10"><a href="#html-10" class="headerlink" title="html"></a>html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="title function_">getBoundingClientRect</span>()); </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="效果如下-3"><a href="#效果如下-3" class="headerlink" title="效果如下"></a>效果如下</h5><p><img src="/2023/02/28/JS2023/%E5%85%83%E7%B4%A0%E7%AA%97%E5%8F%A3%E7%9A%84%E4%BF%A1%E6%81%AF.png"></p><blockquote><p>将offsetTop 的值给 scrollTop<code>实现跳转</code></p></blockquote><hr><h2 id="插入表单制作-1"><a href="#插入表单制作-1" class="headerlink" title="插入表单制作"></a>插入表单制作</h2><h3 id="html-11"><a href="#html-11" class="headerlink" title="html"></a>html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>新增学员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> /&gt;</span></span><br><span class="line">    年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;age&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    性别:</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">class</span>=<span class="string">&quot;gender&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    薪资：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;salary&quot;</span> <span class="attr">name</span>=<span class="string">&quot;salary&quot;</span> /&gt;</span></span><br><span class="line">    就业城市：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">class</span>=<span class="string">&quot;city&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;广州&quot;</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;深圳&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;曹县&quot;</span>&gt;</span>曹县<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span>录入<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>就业榜<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>薪资<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>就业城市<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">        &lt;tr&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;1001&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;欧阳霸天&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;19&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;男&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;15000&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;上海&lt;/td&gt;</span></span><br><span class="line"><span class="comment">          &lt;td&gt;</span></span><br><span class="line"><span class="comment">            &lt;a href=&quot;javascript:&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="comment">          &lt;/td&gt;</span></span><br><span class="line"><span class="comment">        &lt;/tr&gt; </span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="js-元素获取-主事件-1"><a href="#js-元素获取-主事件-1" class="headerlink" title="js(元素获取+主事件)"></a>js(元素获取+主事件)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取元素</span></span><br><span class="line">    <span class="keyword">const</span> tb = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.tb&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> info = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.info&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> items = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;[name]&#x27;</span>)</span><br><span class="line">   <span class="comment">// ...省略</span></span><br><span class="line">    <span class="comment">//构造数组，利用for循环更新列表，重新(获取父级)生成子列表</span></span><br><span class="line">    <span class="keyword">const</span> arr = []</span><br><span class="line">    info.<span class="title function_">addEventListener</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="comment">//阻止跳转</span></span><br><span class="line">      e.<span class="title function_">preventDefault</span>()</span><br><span class="line">      <span class="comment">//判断输入</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; items.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (items[i].<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&#x27;不能输入空的值&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//构造对象</span></span><br><span class="line">      <span class="keyword">const</span> obj = &#123;</span><br><span class="line">        <span class="attr">stuId</span>: arr.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">        <span class="attr">uname</span>: uname.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">age</span>: age.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">gender</span>: gender.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">salary</span>: salary.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">city</span>: city.<span class="property">value</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//对象送入数组</span></span><br><span class="line">      arr.<span class="title function_">push</span>(obj)</span><br><span class="line">      <span class="comment">//清空上一次的记录</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">      <span class="title function_">append</span>()</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="js-渲染函数-1"><a href="#js-渲染函数-1" class="headerlink" title="js(渲染函数)"></a>js(渲染函数)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//渲染函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">append</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//清空数据</span></span><br><span class="line">      tb.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="comment">//生成列表</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> tr = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;tr&#x27;</span>)</span><br><span class="line">        tr.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].uname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].age&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].gender&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].salary&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;<span class="subst">$&#123;arr[i].city&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">          &lt;td&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;javascript:&quot; data-id = <span class="subst">$&#123;i&#125;</span>&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">          &lt;/td&gt;</span></span><br><span class="line"><span class="string">        `</span><span class="comment">//序号与数组对应</span></span><br><span class="line">        tb.<span class="title function_">appendChild</span>(tr)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="js-删除功能-1"><a href="#js-删除功能-1" class="headerlink" title="js(删除功能)"></a>js(删除功能)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除列表信息，重新渲染</span></span><br><span class="line">   tb.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>);</span><br><span class="line">     <span class="keyword">if</span> (e.<span class="property">target</span>.<span class="property">tagName</span> === <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">     arr.<span class="title function_">splice</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>, <span class="number">1</span>)</span><br><span class="line">       <span class="comment">//重新排序</span></span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">let</span> i = e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">id</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">         arr[i].<span class="property">stuId</span> += -<span class="number">1</span></span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i].<span class="property">stuId</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="title function_">append</span>()</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure><h2 id="改进表单-1"><a href="#改进表单-1" class="headerlink" title="改进表单"></a>改进表单</h2><h3 id="localStorage的使用-1"><a href="#localStorage的使用-1" class="headerlink" title="localStorage的使用"></a>localStorage的使用</h3><h4 id="js-3"><a href="#js-3" class="headerlink" title="js"></a>js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> objArr = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;arr&#x27;</span>))<span class="comment">//获取本地数据</span></span><br><span class="line"><span class="keyword">const</span> data = objArr </span><br><span class="line"><span class="keyword">const</span> arr = data ? data : []</span><br><span class="line"><span class="title function_">append</span>()</span><br></pre></td></tr></table></figure><blockquote><p>1.获得上次存储的数据(<code>对象为数组，所以类型为对象</code>)</p><p>2.声明为缓存数据(好习惯)</p><p>3.三元表达式，顺便兜底一个空数组(可能获取的信息是假的)</p><p>4.页面渲染缓存的数据</p></blockquote><h4 id="如图-1"><a href="#如图-1" class="headerlink" title="如图"></a>如图</h4><p><img src="/2023/02/28/JS2023/%E7%BC%93%E5%AD%98%E7%9A%84%E6%95%B0%E6%8D%AE.png"></p><h3 id="map-join的使用-1"><a href="#map-join的使用-1" class="headerlink" title="(map\join的使用)"></a>(map\join的使用)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> trArr = arr.<span class="title function_">map</span>(<span class="keyword">function</span> (<span class="params">item, i</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">` </span></span><br><span class="line"><span class="string">    &lt;tr&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.stuId&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.uname&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.age&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.gender&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.salary&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;<span class="subst">$&#123;item.city&#125;</span>&lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;td&gt;</span></span><br><span class="line"><span class="string">    &lt;a href=&quot;javascript:&quot; data-id = <span class="subst">$&#123;i&#125;</span>&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;/td&gt;</span></span><br><span class="line"><span class="string">    &lt;/tr&gt;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">&#125;)</span><br><span class="line">tb.<span class="property">innerHTML</span> = trArr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">//将新数组给列表</span></span><br></pre></td></tr></table></figure><blockquote><p>arr.map(function (item, i){return})//用于遍历，或者返回一个新数组</p><p>trArr.join(‘’) //去除将数组转化为字符串，并且去除分隔的逗号</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS小技巧</title>
      <link href="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="1-更改markdown样式"><a href="#1-更改markdown样式" class="headerlink" title="1.更改markdown样式"></a>1.更改markdown样式</h3><blockquote><p>1.通过查看页面源代码找到对应的样式</p><p>2.通过修改样式来更改</p><p>期间我发现了伪元素的用法</p><p>通过伪元素画图，给代码块增加了三个原点</p></blockquote><h4 id="如下图所示"><a href="#如下图所示" class="headerlink" title="如下图所示"></a>如下图所示</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.name</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">content</span>:<span class="string">&#x27;旺财&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">name</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%BC%AA%E5%85%83%E7%B4%A0%E7%9A%84%E7%94%A8%E6%B3%95.png" alt="伪元素"></p><h3 id="2-CSS的投影"><a href="#2-CSS的投影" class="headerlink" title="2.CSS的投影"></a>2.CSS的投影</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-webkit-<span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc625d</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">12px</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span>;</span><br></pre></td></tr></table></figure><h4 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%8A%95%E5%BD%B1.png" alt="伪元素"></p><hr><h3 id="3-CSS项目对齐"><a href="#3-CSS项目对齐" class="headerlink" title="3.CSS项目对齐"></a>3.CSS项目对齐</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">    <span class="attribute">align-items</span>: flex-end;<span class="comment">/*以下边对齐*/</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&gt;<span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>justify-content://里面的项目对齐方式</p><p><code>如下：</code></p><p>space-around//水平距离均匀分配</p><p>space-between//相邻间距相等</p></blockquote><h4 id="效果如下-2"><a href="#效果如下-2" class="headerlink" title="效果如下"></a>效果如下</h4><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%91%86%E6%94%BE1.png" alt="css摆放"></p><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%91%86%E6%94%BE2.png" alt="css摆放"></p><hr><h3 id="4-逻辑中断思路"><a href="#4-逻辑中断思路" class="headerlink" title="4.逻辑中断思路"></a>4.逻辑中断思路</h3><blockquote><p>利用逻辑中断，让函数不再执行</p></blockquote><h4 id="script1"><a href="#script1" class="headerlink" title="script1"></a>script1</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span> &amp;&amp; <span class="number">22</span>)<span class="comment">//一假则假，均真返回22(不中断)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">11</span> || <span class="number">22</span>)<span class="comment">//一真则真，均真返回11(不中断)</span></span><br></pre></td></tr></table></figure><h4 id="script2"><a href="#script2" class="headerlink" title="script2"></a>script2</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span> &amp;&amp; num++)<span class="comment">//一假则假，均真返回false</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);<span class="comment">//(中断,num++不执行)</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num+<span class="number">1</span> || <span class="number">22</span>)<span class="comment">//一真则真，均真返回num+1(不中断,执行运算)</span></span><br></pre></td></tr></table></figure><h4 id="效果如下图"><a href="#效果如下图" class="headerlink" title="效果如下图"></a>效果如下图</h4><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E4%B8%8E%E6%88%96%E9%80%BB%E8%BE%91%E4%B8%AD%E6%96%AD.png" alt="逻辑中断"></p><h4 id="布尔型的值"><a href="#布尔型的值" class="headerlink" title="布尔型的值"></a>布尔型的值</h4><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%B8%83%E5%B0%94%E5%9E%8B(true&false).png" alt="布尔型"></p><h5 id="运算时"><a href="#运算时" class="headerlink" title="运算时"></a>运算时</h5><blockquote><ul><li>空字符串当0</li><li>null当0</li><li>undefined变成NaN</li></ul></blockquote><hr><h3 id="5-包装函数"><a href="#5-包装函数" class="headerlink" title="5.包装函数"></a>5.包装函数</h3><h4 id="数组求和求平均"><a href="#数组求和求平均" class="headerlink" title="数组求和求平均"></a>数组求和求平均</h4><h6 id="script"><a href="#script" class="headerlink" title="script"></a>script</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">        <span class="keyword">function</span> <span class="title function_">getNum</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">            <span class="keyword">let</span> sum = arr[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span> ;i&lt;=arr.<span class="property">length</span>-<span class="number">1</span>;i++)&#123;</span><br><span class="line">                sum = sum + arr[i]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> [sum,<span class="built_in">parseFloat</span>(sum/arr.<span class="property">length</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>)]<span class="comment">//保留两位</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">let</span> result = <span class="title function_">getNum</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>]);</span><br><span class="line"><span class="keyword">let</span> num = <span class="title class_">Boolean</span>(<span class="title function_">prompt</span>(<span class="string">&#x27;请输入true求和或false求平均&#x27;</span>)) </span><br><span class="line"><span class="keyword">if</span>(num == <span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result[<span class="number">0</span>]); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num == <span class="literal">false</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result[<span class="number">1</span>]); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="结果如下图"><a href="#结果如下图" class="headerlink" title="结果如下图"></a>结果如下图</h6><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C%E6%B1%82%E5%B9%B3%E5%9D%87.png" alt="逻辑中断"></p><hr><h3 id="6-事件的技巧"><a href="#6-事件的技巧" class="headerlink" title="6.事件的技巧"></a>6.事件的技巧</h3><h4 id="6-1轮转图"><a href="#6-1轮转图" class="headerlink" title="6.1轮转图"></a>6.1轮转图</h4><blockquote><p>1.设置轮转按键，</p><p>2.利用时间函数重复调用，按键函数实现自动轮转。</p><p>省去了麻烦的自动轮转</p></blockquote><h4 id="6-2去除文本空格"><a href="#6-2去除文本空格" class="headerlink" title="6.2去除文本空格"></a>6.2去除文本空格</h4><h5 id="css"><a href="#css" class="headerlink" title="css"></a>css</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>&#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">90px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">8s</span>;<span class="comment">/*框延迟拉伸(需要设置变化长度)*/</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="built_in">rgb</span>(<span class="number">156</span>, <span class="number">153</span>, <span class="number">153</span>) solid ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="js"><a href="#js" class="headerlink" title="js"></a>js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span><br><span class="line">        ipt.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;<span class="comment">//事件对象e</span></span><br><span class="line">            <span class="keyword">if</span>(e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(ipt.<span class="property">value</span>.<span class="title function_">trim</span>()); <span class="comment">//去除空格</span></span><br><span class="line">                <span class="comment">// ipt.value = &#x27;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h5 id="效果如下-3"><a href="#效果如下-3" class="headerlink" title="效果如下"></a>效果如下</h5><p><img src="/2023/02/23/JS%E5%B0%8F%E6%8A%80%E5%B7%A7/%E6%96%87%E6%9C%AC%E5%8E%BB%E9%99%A4%E7%A9%BA%E6%A0%BC.png"></p><blockquote><p><code>trim()去除空格</code></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS的BOM</title>
      <link href="/2022/12/20/JS%E7%9A%84BOM/"/>
      <url>/2022/12/20/JS%E7%9A%84BOM/</url>
      
        <content type="html"><![CDATA[<h1 id="BOM简述"><a href="#BOM简述" class="headerlink" title="BOM简述"></a>BOM简述</h1><p><img src="/2022/12/20/JS%E7%9A%84BOM/%E5%8C%85%E5%90%AB%E8%8C%83%E5%9B%B4.png"></p><blockquote><p>BOM比DOM更大，他管理着整个窗口</p></blockquote><p><img src="/2022/12/20/JS%E7%9A%84BOM/%E4%BB%80%E4%B9%88%E6%98%AFBOM.png"></p><blockquote><p>整个窗口的交互，滚动条啊，页面返回、刷新等等</p></blockquote><p><img src="/2022/12/20/JS%E7%9A%84BOM/BOM%E6%9E%84%E6%88%90.png"></p><hr><h2 id="窗口事件"><a href="#窗口事件" class="headerlink" title="窗口事件"></a>窗口事件</h2><blockquote><p>窗口事件的区别</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="comment">//1.等待页面加载完后进行，只执行最后一组</span></span></span><br><span class="line"><span class="language-javascript">   <span class="variable language_">window</span>.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//2.可以执行多个</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"> <span class="comment">//3.主要的DOM交互效果，（不包括图片,flash,css）加载完就可以执行</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>调整窗口大小</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口变化了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><h4 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout()"></a>setTimeout()</h4><blockquote><p>延迟函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;出现&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">var</span> time1 = <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(fn,时间);<span class="comment">//time为标识符</span></span><br></pre></td></tr></table></figure><blockquote><p>clearTimeout(timer);</p><p>停止定时器的函数</p></blockquote><hr><h4 id="setlnterval"><a href="#setlnterval" class="headerlink" title="setlnterval()"></a>setlnterval()</h4><blockquote><p>每隔一段时间之后就重新调用</p><p>下面是倒计时的使用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hour = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.hour&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> minute = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.minute&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> second = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.second&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> inputTime = +<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2022-12-19 23:59:59&#x27;</span>);<span class="comment">//返回的是用户输入的总毫秒数</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">getTime</span>(<span class="params">time</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> nowTime = +<span class="keyword">new</span> <span class="title class_">Date</span>();<span class="comment">//时间戳</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(nowTime);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> times = (inputTime - nowTime) / <span class="number">1000</span>;<span class="comment">//剩余时间（单位秒）</span></span><br><span class="line">            <span class="keyword">var</span> d = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>);<span class="comment">//天数</span></span><br><span class="line">            <span class="keyword">var</span> h = <span class="built_in">parseInt</span>(times / <span class="number">60</span> / <span class="number">60</span> % <span class="number">24</span>);<span class="comment">//当天的余数小时</span></span><br><span class="line">            <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(times / <span class="number">60</span> % <span class="number">60</span>);</span><br><span class="line">            <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(times % <span class="number">60</span>);</span><br><span class="line">            hour.<span class="property">innerHTML</span> = h;</span><br><span class="line">            minute.<span class="property">innerHTML</span> = m;</span><br><span class="line">            second.<span class="property">innerHTML</span> = s;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_">getTime</span>();</span><br><span class="line">        <span class="keyword">var</span> timer = <span class="built_in">setInterval</span>(getTime, <span class="number">1000</span>);<span class="comment">//每秒调用一次</span></span><br></pre></td></tr></table></figure><blockquote><ul><li>添加一个停止/开始功能</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">btn</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stop.<span class="property">value</span> === <span class="string">&#x27;停止&#x27;</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            stop.<span class="property">value</span> = <span class="string">&#x27;开始&#x27;</span>;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(stop.<span class="property">value</span>);</span><br><span class="line">            <span class="comment">// stop.disabled = true;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (stop.<span class="property">value</span> === <span class="string">&#x27;开始&#x27;</span>) &#123;</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">                 timer = <span class="built_in">setInterval</span>(getTime, <span class="number">1000</span>);</span><br><span class="line">                stop.<span class="property">value</span> = <span class="string">&#x27;停止&#x27;</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(stop.<span class="property">value</span>);</span><br><span class="line">            &#125;              </span><br><span class="line">    &#125;&#125;         </span><br><span class="line">stop.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">   <span class="title function_">btn</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS的DOM</title>
      <link href="/2022/12/14/JS%E7%9A%84DOM/"/>
      <url>/2022/12/14/JS%E7%9A%84DOM/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简单-amp-复杂的数据类型"><a href="#1-简单-amp-复杂的数据类型" class="headerlink" title="1.简单&amp;复杂的数据类型"></a>1.简单&amp;复杂的数据类型</h2><blockquote><p><code>简单的数据类型又叫值类型</code></p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E7%AE%80%E5%8D%95%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="简单数据类型"></p><hr><blockquote><p><code>复杂数据类型又叫引用类型</code></p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%A4%8D%E6%9D%82%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="复杂数据类型"></p><blockquote><p><code>空间栈与空间堆</code></p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%A0%88%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%A0%86%E7%A9%BA%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="栈空间与堆空间的数据类型"></p><hr><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%94%B9%E5%8F%98%E7%9A%84%E6%98%AF%E5%80%BC.png" alt="改变的是值"></p><hr><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E7%BB%99%E7%9A%84%E6%98%AF%E5%9C%B0%E5%9D%80%EF%BC%8C%E7%94%A8%E7%9A%84%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%E5%80%BC.png" alt="给的是地址，用的是同一个值"></p><hr><hr><hr><h2 id="2-Web-APIs"><a href="#2-Web-APIs" class="headerlink" title="2.Web APIs"></a>2.Web APIs</h2><p>![Web APIs和JS基础关联性](Web APIs和JS基础关联性.png)</p><blockquote><p>前面学的主要是ECMAScript</p></blockquote><hr><blockquote><p>API就是一个接口，类似于连接某个封装好的功能</p></blockquote><hr><blockquote><p>能够使用API接口，帮助实现某种功能</p></blockquote><hr><h2 id="3-DOM"><a href="#3-DOM" class="headerlink" title="3.DOM"></a>3.DOM</h2><p><img src="/2022/12/14/JS%E7%9A%84DOM/DOM%E6%A0%91.png" alt="DOM树"></p><blockquote><p>DOM就是文档对象模型</p><ul><li>他是一个接口，可以对以上对象（样式、结构、内容）</li></ul></blockquote><hr><hr><h3 id="3-1常见的获取元素的方式"><a href="#3-1常见的获取元素的方式" class="headerlink" title="3.1常见的获取元素的方式"></a>3.1常见的获取元素的方式</h3><h4 id="3-11getElemengtById-‘id’-获取元素"><a href="#3-11getElemengtById-‘id’-获取元素" class="headerlink" title="3.11getElemengtById(‘id’)获取元素"></a>3.11getElemengtById(‘id’)获取元素</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0.png" alt=")"></p><blockquote><ul><li><p>返回的是一个元素对象</p><p>可以console.log(typeof timer);//来返回判断类型</p><p>console.dir(timer)//可以打印元素对象，<code>可以看一些数据（id&amp;内容)</code></p></li></ul></blockquote><hr><p><code>获取元素对象集合getElemengtByTagName(&#39;li&#39;);</code></p><p><code>用伪数组的方式储存</code></p><p>如果没有相应的元素，返回的是空的伪数组</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%85%83%E7%B4%A0%E4%BC%AA%E6%95%B0%E7%BB%84%E8%BF%94%E5%9B%9E.png" alt="获取元素"></p><hr><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E7%88%B6%E5%85%83%E7%B4%A0.png" alt="获取元素"></p><blockquote><p>var ol = 父元素.getElementsByTagName(‘标签’);</p><p>console.log(ol.getElementsByTagName(‘li’);</p><p><code>一般设定id指定</code></p></blockquote><hr><h4 id="3-12html5新增三个获取元素的接口"><a href="#3-12html5新增三个获取元素的接口" class="headerlink" title="3.12html5新增三个获取元素的接口"></a>3.12html5新增三个获取元素的接口</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%80%89%E6%8B%A9%E5%99%A8%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0.png" alt="获取元素"></p><hr><h4 id="3-13body-html元素获取方式"><a href="#3-13body-html元素获取方式" class="headerlink" title="3.13body,html元素获取方式"></a>3.13body,html元素获取方式</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/body,html%E5%85%83%E7%B4%A0%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F.png" alt="获取元素"></p><blockquote><ul><li>对应两个命令来获取元素信息<a name="top">获取方式</a></li><li>document.body() &amp; document.documentElement()</li></ul></blockquote><hr><h3 id="3-2对DOM的事件三要素"><a href="#3-2对DOM的事件三要素" class="headerlink" title="3.2对DOM的事件三要素"></a>3.2对DOM的事件三要素</h3><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%BA%8B%E4%BB%B6%E4%B8%89%E8%A6%81%E7%B4%A0.png" alt="获取元素"></p><blockquote><p>1.获取事件 2.绑定事件 3.函数处理</p></blockquote><hr><h3 id="3-3获取元素后的处理（案例）"><a href="#3-3获取元素后的处理（案例）" class="headerlink" title="3.3获取元素后的处理（案例）"></a>3.3获取元素后的处理（案例）</h3><h4 id="3-31处理刷新时间"><a href="#3-31处理刷新时间" class="headerlink" title="3.31处理刷新时间"></a>3.31处理刷新时间</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%94%B9%E5%8F%98%E5%85%83%E7%B4%A0%E5%86%85%E5%AE%B9.png" alt="获取元素"></p><blockquote><p>onclick（判定点击）</p><p>div.innerText(div里面的内容)</p><p>getTime(封装好的时间函数)，记得<code>要实例化</code></p><p><code>var date = new Date();</code>//目前<code>参数固定</code></p></blockquote><h4 id="3-311拓展innerHTML"><a href="#3-311拓展innerHTML" class="headerlink" title="3.311拓展innerHTML"></a>3.311<code>拓展innerHTML</code></h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/innerHtml.png" alt="获取元素"></p><blockquote><p>是否识别html标签</p><p>是否保留空格/换行（格式）</p></blockquote><hr><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%B8%B8%E7%94%A8%E5%85%83%E7%B4%A0.png" alt="获取元素"></p><hr><h4 id="3-32-根据时间改变图片路径"><a href="#3-32-根据时间改变图片路径" class="headerlink" title="3.32 根据时间改变图片路径"></a>3.32 根据时间改变图片路径</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%97%B6%E9%97%B4%E8%87%AA%E5%8A%A8%E6%94%B9%E5%8F%98%E5%9B%BE%E7%89%87.png" alt="获取元素"></p><blockquote><p>1.获取图片元素</p><p>2.获取系统时间信息</p><p>3.判断时间，并修改图片路径</p></blockquote><hr><h4 id="3-32表单元素修改"><a href="#3-32表单元素修改" class="headerlink" title="3.32表单元素修改"></a>3.32表单元素修改</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%A1%A8%E5%8D%95%E5%86%85%E5%AE%B9%E4%BF%AE%E6%94%B9.png" alt="获取元素"></p><blockquote><p>input里面的内容需要<code>通过value值来修改</code></p></blockquote><hr><h4 id="3-33js修改样式"><a href="#3-33js修改样式" class="headerlink" title="3.33js修改样式"></a>3.33js修改样式</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/js%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F.png" alt="获取元素"></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/js%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F.png" alt="获取元素"></p><hr><h4 id="3-34精灵图标快速使用"><a href="#3-34精灵图标快速使用" class="headerlink" title="3.34精灵图标快速使用"></a>3.34精灵图标快速使用</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E7%B2%BE%E7%81%B5%E5%9B%BE%E6%A0%87%E5%BF%AB%E9%80%9F.png" alt="获取元素"></p><blockquote><ul><li>利用图标的坐标，使用for循环依次截取图标</li><li><code>最好控制一个坐标一直不变</code></li></ul></blockquote><hr><h4 id="3-35显示隐藏文本框内容"><a href="#3-35显示隐藏文本框内容" class="headerlink" title="3.35显示隐藏文本框内容"></a>3.35显示隐藏文本框内容</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC.png" alt="获取元素"></p><blockquote><p>利用的是</p><p>onfocus</p><p>onblur实现</p></blockquote><hr><h3 id="3-4忘记了的总结"><a href="#3-4忘记了的总结" class="headerlink" title="3.4忘记了的总结"></a>3.4忘记了的总结</h3><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0%E7%9A%84%E6%80%BB%E7%BB%93.png" alt="获取元素"></p><blockquote><ul><li>一个是body和html的元素获取方式<a href="#top">特殊元素的获取</a></li><li>绝对定位和相对定位的使用</li><li>input和password和button的使用   </li><li>cursor: pointer;实现元素能被点击</li><li>下拉式菜单，利用a:hover实现</li><li>display：none;实现开关灯</li><li>焦点的触发与离开。</li><li><code>display: inline-block</code>;实现块元素同行（本来不可同行）</li></ul></blockquote><hr><hr><h3 id="3-5排他思想（算法）"><a href="#3-5排他思想（算法）" class="headerlink" title="3.5排他思想（算法）"></a>3.5排他思想（算法）</h3><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%8E%92%E4%BB%96%E6%80%9D%E6%83%B3.png" alt="获取元素"></p><blockquote><p>循环全部清空清算敌人，选中自己</p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%8E%92%E4%BB%96%E6%80%9D%E6%83%B3%E8%A7%A3%E6%9E%90.png" alt="获取元素"></p><blockquote><p>同一组元素，想改变某一个元素</p></blockquote><h4 id="3-51-背景更换"><a href="#3-51-背景更换" class="headerlink" title="3.51.背景更换"></a>3.51.背景更换</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%8E%92%E4%BB%96%E6%80%9D%E6%83%B3.png" alt="获取元素"></p><hr><hr><h3 id="3-6-表格制作"><a href="#3-6-表格制作" class="headerlink" title="3.6.表格制作"></a>3.6.表格制作</h3><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%A1%A8%E6%A0%BC.png" alt="获取元素"></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%A1%A8%E6%A0%BC%E4%BE%8B%E5%AD%90.png" alt="获取元素"></p><hr><h4 id="3-61拓展表格"><a href="#3-61拓展表格" class="headerlink" title="3.61拓展表格"></a><code>3.61拓展表格</code></h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%A1%A8%E6%A0%BC%E5%85%A8%E9%80%89%E5%AE%9E%E7%8E%B0.png" alt="获取元素"></p><p><code>效果如下图</code></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%85%A8%E9%80%89.png" alt="获取元素"></p><hr><hr><h3 id="3-7-自定义属性操作"><a href="#3-7-自定义属性操作" class="headerlink" title="3.7.自定义属性操作"></a>3.7.自定义属性操作</h3><blockquote><p>1.自定义属性只能div.getAttribute(‘data-index’);</p><p>2.div.dataset.index</p><p>3.有多个-时</p><p>div.dataset.listName</p><p>div.data[‘listName’]</p><ul><li>规范data-开头为自己设置的自定义属性<code>（H5新增）</code></li></ul></blockquote><h4 id="3-71获取元素的属性"><a href="#3-71获取元素的属性" class="headerlink" title="3.71获取元素的属性"></a>3.71获取元素的属性</h4><ul><li><p>老方法+获取自定义属性的方法</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95.png" alt="获取元素"></p></li></ul><h4 id="3-71-设置属性"><a href="#3-71-设置属性" class="headerlink" title="3.71.设置属性"></a>3.71.设置属性</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%AE%BE%E7%BD%AE%E5%B1%9E%E6%80%A7.png" alt="获取元素"></p><blockquote><p><code>setAttribute(&#39;  &#39;,&#39;  &#39;);还可以更改自定义属性</code></p></blockquote><p><code>*拓展</code></p><blockquote><p>removeAttribute//移除属性值</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%AE%BE%E7%BD%AE&%E8%8E%B7%E5%8F%96%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7.png" alt="获取元素"></p></blockquote><p><code>效果如下图</code></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%8F%82%E6%95%B0%E5%8F%98%E5%8C%96.png" alt="获取元素"></p><hr><hr><h3 id="3-8-节点操作"><a href="#3-8-节点操作" class="headerlink" title="3.8.节点操作"></a>3.8.节点操作</h3><hr><h4 id="3-81-节点层级"><a href="#3-81-节点层级" class="headerlink" title="3.81.节点层级"></a>3.81.节点层级</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8A%82%E7%82%B9%E5%B1%82%E7%BA%A7.png" alt="获取元素"></p><h4 id="3-82-操作"><a href="#3-82-操作" class="headerlink" title="3.82.操作"></a>3.82.操作</h4><ul><li>获取父级节点</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E7%88%B6%E7%BA%A7%E8%8A%82%E7%82%B9.png" alt="获取元素"></p><blockquote><p>li.parentNode</p></blockquote><ul><li>获取子节点</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%AD%90%E8%8A%82%E7%82%B9%E8%8E%B7%E5%8F%96.png" alt="获取元素"></p><blockquote><p>ul.children</p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%AD%90%E5%85%83%E7%B4%A0.png" alt="获取元素"></p><ul><li>获取兄弟节点</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E8%8E%B7%E5%8F%96%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9.png" alt="获取元素"></p><blockquote><p><code>根据元素、文本、对应的数字</code></p></blockquote><ul><li>创建添加节点（评论区）</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%88%9B%E5%BB%BA%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9.png" alt="获取元素"></p><blockquote><p><code>1.创建</code></p><p>createElement(‘li’);</p><p><code>2.添加</code></p><p>ul.appendChildren(li);//<code>前提</code>是获取它的父节点</p><p>ul.insertBefore(li,ul.children[0]);<code>插入</code>节点到位置</p></blockquote><hr><ul><li><code>删除节点</code></li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9.png" alt="获取元素"></p><ul><li><code>拷贝节点</code></li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%B5%85%E6%8B%B7%E8%B4%9D.png" alt="获取元素"></p><blockquote><p>node.cloneNode();<code>括号为空时是浅拷贝</code></p><p>node.cloneNode(<code>true</code>);//<code>为深拷贝</code></p></blockquote><hr><hr><p>创建元素</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%B8%89%E7%A7%8D%E5%88%9B%E5%BB%BA%E5%85%83%E7%B4%A0.png" alt="元素"></p><blockquote><p>利用数组，的innerHTML效率更高</p><p><code>忘记的</code>数组转化为字符串</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%95%B0%E7%BB%84join%E6%8B%BC%E6%8E%A5.png" alt="获取元素"></p><p>参数为空</p></blockquote><hr><h3 id="3-83-生成动态表格"><a href="#3-83-生成动态表格" class="headerlink" title="3.83.生成动态表格"></a><code>3.83.生成动态表格</code></h3><ul><li>数组数据</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%95%B0%E7%BB%84%E6%95%B0%E6%8D%AE.png" alt="节点操作"></p><ul><li>动态生成表格</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E8%A1%A8%E6%A0%BC.png" alt="节点操作"></p><blockquote><ul><li>行数与数组元素有关</li><li>格子数与对象个数有关</li><li>datas[ i ] [ k ]//指的是第i个元素的第k个对象属性</li></ul></blockquote><hr><hr><hr><hr><h2 id="4-DOM核心"><a href="#4-DOM核心" class="headerlink" title="4.DOM核心"></a>4.DOM核心</h2><blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/dom%E6%93%8D%E4%BD%9C.png" alt="节点操作"></p></blockquote><p>1.创建（三种）</p><p>2.增（两个）</p><p>3.一个</p><p>4.<img src="/2022/12/14/JS%E7%9A%84DOM/%E6%94%B9%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7.png" alt="节点操作"></p><p>5.查（获取）</p><p>分三类：古老、H5、节点父子兄关系</p><p>6.属性操作</p><ul><li>设置</li><li>获取</li><li>移除</li></ul><p>7.事件操作</p><blockquote><p>onclick</p><p>onfoucus</p><p>onblur</p><p>onmouseover</p><p>onmouseout</p><p>onmouseup</p><p>onmousedown</p><p>onmousemove</p></blockquote><hr><hr><p><code>任务目标</code> </p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E5%85%83%E7%B4%A0%E6%93%8D%E4%BD%9C%E7%9B%AE%E6%A0%87.png" alt="节点操作"></p><p><code>1.注册事件</code></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%BC%A0%E7%BB%9F%E7%9A%84%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6.png" alt="节点操作"></p><hr><p><code>方法监听注册方式</code></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%96%B9%E6%B3%95%E7%9B%91%E5%90%AC%E6%B3%A8%E5%86%8C%E6%96%B9%E5%BC%8F.png" alt="节点操作"></p><hr><p><code>addEvetListener()</code></p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E7%9B%91%E5%90%AC%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6.png" alt="节点操作"></p><blockquote><p>注意字符串要加单引号</p></blockquote><p>解决兼容性的问题。通过判断是否支持，不支持改成支持的那种格式</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E6%B3%A8%E5%86%8C%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7.png" alt="事件"></p><hr><hr><p>2.移除事件</p><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%B8%89%E7%A7%8D%E7%A7%BB%E9%99%A4%E4%BA%8B%E4%BB%B6.png" alt="事件"></p><blockquote><p><code>添加</code></p><p>1.div.onclick = function()</p><p>2.div.<code>add</code>EventListener(<code>&#39;click&#39;</code>,fn)</p><p>3.div.attachEvent(<code>&#39;onclick&#39;</code>,fn1)</p><p><code>移除</code></p><p>1.div.onclick = null;</p><p>2.div.<code>remove</code>EventListener(<code>&#39;click&#39;</code>,fn)</p><p>3.div.detachEvent(<code>&#39;onclick&#39;</code>,fn1)</p></blockquote><hr><h3 id="1-DOM事件流"><a href="#1-DOM事件流" class="headerlink" title="1.DOM事件流"></a>1.DOM事件流</h3><p><img src="/2022/12/14/JS%E7%9A%84DOM/DOM%E4%BA%8B%E4%BB%B6%E6%B5%81.png" alt="事件"></p><blockquote><ul><li>捕获阶段，参数为ture</li><li>冒泡阶段，参数为false</li><li>2.div.<code>add</code>EventListener(<code>&#39;click&#39;</code>,fn,<code>ture/false</code>)</li></ul></blockquote><hr><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%BA%8B%E4%BB%B6%E6%B5%81%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9.png" alt="."></p><hr><h4 id="1-常见的属性"><a href="#1-常见的属性" class="headerlink" title="1.常见的属性"></a>1.常见的属性</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95.png" alt="事件对象常见属性和方法"></p><blockquote><p><code>e.target与this的区别</code></p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/this%E4%B8%8Ee.target%E7%9A%84%EF%BC%88%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%EF%BC%89%E5%8C%BA%E5%88%AB.png"></p><blockquote><p><code>返回</code>事件的<code>类型</code>&amp;<code>阻止</code>默认事件的<code>方法</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//常见事件对象的属性和方法</span></span><br><span class="line">    <span class="comment">//1.返回事件类型</span></span><br><span class="line">    <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseover&#x27;</span>,fn);</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fn);</span><br><span class="line">    div.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseout&#x27;</span>,fn);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">type</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.阻止默认事件，让链接不要跳转，或者让提交按钮不提交</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">a.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">e.<span class="title function_">preventDefault</span>();<span class="comment">//dom 标准写法 常用</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.传统的注册方式</span></span><br><span class="line">a.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//普通浏览器 e.preventDefault(); 方法</span></span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    <span class="comment">//低版本浏览器 ie678  e.returnValue 属性</span></span><br><span class="line">    e.<span class="property">returnValue</span>;</span><br><span class="line">    <span class="comment">//没有兼容性问题 但是后面的代码不执行了</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>阻止事件冒泡</p></blockquote><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1.png" alt="阻止事件冒泡"></p><hr><h4 id="2-事件委派"><a href="#2-事件委派" class="headerlink" title="2.事件委派"></a>2.事件委派</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%B4%BE.png" alt="事件委派"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    ul.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;把我也带走&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//冒泡父级影响子节点，通过一个dom操作实现四个dom操作</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="3-鼠标事件"><a href="#3-鼠标事件" class="headerlink" title="3.鼠标事件"></a>3.鼠标事件</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%BC%A0%E6%A0%87%E8%8E%B7%E5%8F%96%E5%9D%90%E6%A0%87.png" alt="鼠标获取坐标"></p><blockquote><p>根据对应要求获取坐标信息</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">//鼠标事件对象 MouseEvent</span></span><br><span class="line">        <span class="comment">//鼠标位置</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="comment">//可视区（移动拖条也不变）</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">clientX</span>+<span class="string">&#x27;,&#x27;</span>+e.<span class="property">clientY</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-------&#x27;</span>);</span><br><span class="line">            <span class="comment">//页面文档</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">pageX</span>+<span class="string">&#x27;,&#x27;</span>+e.<span class="property">pageY</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-------&#x27;</span>);</span><br><span class="line">            <span class="comment">//电脑屏幕</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">screenX</span>+<span class="string">&#x27;,&#x27;</span>+e.<span class="property">screenY</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>鼠标移动精灵的应用</li></ul><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8%E7%B2%BE%E7%81%B5.png" alt="鼠标移动精灵"></p><hr><h4 id="4-键盘事件"><a href="#4-键盘事件" class="headerlink" title="4.键盘事件"></a>4.键盘事件</h4><p><img src="/2022/12/14/JS%E7%9A%84DOM/%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6.png" alt="键盘事件"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS基础（2）</title>
      <link href="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/"/>
      <url>/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="9-数组"><a href="#9-数组" class="headerlink" title="9.数组"></a>9.数组</h2><h3 id="9-1创建数组"><a href="#9-1创建数组" class="headerlink" title="9.1创建数组"></a>9.1创建数组</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%95%B0%E7%BB%84%E5%88%9B%E5%BB%BA.png" alt="数组创建"></p><blockquote><p><code>中括号是常用的方法</code></p></blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%95%B0%E7%BB%84%E5%88%9B%E5%BB%BA%E8%A7%84%E5%88%99.png" alt="数组创建规则"></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%95%B0%E7%BB%84%E9%97%AE%E9%A2%98.png" alt="数组问题"></p><p><strong><code>可以将多个数据存储到一个变量下，方便</code></strong></p><p><strong><code>利用new创建</code></strong></p><p><strong><code>利用中括号创建</code></strong></p><p>数组里面的数据、没有限制，有字符，数字，布尔等等</p><hr><h3 id="9-2-数组数据的使用"><a href="#9-2-数组数据的使用" class="headerlink" title="9.2 数组数据的使用"></a>9.2 数组数据的使用</h3><blockquote><p> var arr = [‘a’,’b’,’c’,’d’];</p><p> 通过索引号使用，0、1、2、3</p><p> arr[1];</p></blockquote><blockquote><p><code>**可以通过循环的方式，会更方便**</code></p></blockquote><hr><h4 id="1-遍历数组"><a href="#1-遍历数组" class="headerlink" title="1.遍历数组"></a>1.遍历数组</h4><p><code>循环遍历</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [关羽 刘备，张飞]；</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">2</span>;i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;arr[i]&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>i&lt; arr.length//会更加方便，<code>动态检测</code></p></blockquote><p>问题</p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84%E9%97%AE%E9%A2%98.png" alt="遍历数组问题"></p><blockquote><ul><li><strong><code>输出数组最大/小值</code></strong></li><li><strong><code>数组字符串相连，（符号可以在外面定义一个变量</code></strong></li></ul></blockquote><hr><hr><h4 id="2-数组新增-删除元素"><a href="#2-数组新增-删除元素" class="headerlink" title="2.数组新增/删除元素"></a>2.数组新增/删除元素</h4><blockquote><ul><li><p>检测数组长度</p><p>console.log(arr.length);</p></li></ul></blockquote><hr><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%96%B0%E5%A2%9E%E6%95%B0%E7%BB%84.png" alt="新增数组"></p><ol><li><strong><code>修改长度</code></strong>(出现未定义的元素)</li><li>**<code>增加索引号，追加数组</code>**（加入元素，替换元素）</li></ol><blockquote><p><strong>数组变量相当于变量，不能直接赋值，否则数据没了</strong></p></blockquote><hr><hr><p>2.<strong>删除数组元素</strong></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%95%B0%E7%BB%84%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0.png" alt="数组删除元素"></p><p><code>**由于数组的长度会跟着变化，所以一般这样设定**</code></p><hr><hr><h4 id="3-冒泡排序（从大到小-从小到大从新排）"><a href="#3-冒泡排序（从大到小-从小到大从新排）" class="headerlink" title="3.冒泡排序（从大到小/从小到大从新排）"></a>3.冒泡排序（从大到小/从小到大从新排）</h4><p>用到双循环，管外，管内</p><p>用到变量值的交换</p><p>用到数组的一些长度计算，新数组等等</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>];</span><br><span class="line">        <span class="keyword">var</span> newArr = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= arr.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt;= arr.<span class="property">length</span> - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &lt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="keyword">var</span> temp = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>容易<code>**犯错**</code>的点：</p><ol><li><strong><code>比较次数j与循环趟数i需要分开，这样更加清晰</code></strong></li><li><strong><code>减去多余的次数，更加方便</code></strong></li><li><strong><code>可以在外面定义变量temp剩下空间</code></strong></li><li><strong><code>双循环的思路一般是两个循环分开工作，要理解好各自工作的内容。</code></strong></li></ol></blockquote><hr><p><code>**翻转数组**</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> arr=[<span class="string">&#x27;刘备&#x27;</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="string">&#x27;张飞&#x27;</span>,<span class="string">&#x27;赵云&#x27;</span>,<span class="string">&#x27;黄忠&#x27;</span>];</span><br><span class="line">        <span class="keyword">var</span> newa=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;=arr.<span class="property">length</span>-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            newa[i] = arr[arr.<span class="property">length</span>-i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(newa);</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>定义新数组从新增加元素，<code>**注意元素的位置**</code></li></ul><hr><hr><hr><h2 id="10-函数"><a href="#10-函数" class="headerlink" title="10.函数"></a>10.函数</h2><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%87%BD%E6%95%B0%E4%BE%8B%E5%AD%90.png" alt="函数例子"></p><blockquote><p><code>**一般函数的封装**</code></p></blockquote><blockquote><ul><li>函数命名通常是<code>动词</code></li><li>函数的执行需要调用，<code>getSum();</code></li></ul></blockquote><hr><h3 id="10-1-函数参数的问题"><a href="#10-1-函数参数的问题" class="headerlink" title="10.1 函数参数的问题"></a>10.1 函数参数的问题</h3><ol><li>形参（函数参数）、实参（用户）</li><li>实参超过。则会取参，取前面的</li><li>若实参不够，则NaN</li></ol><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0.png" alt="函数参数"></p><hr><hr><h3 id="10-2-return的使用和注意事项"><a href="#10-2-return的使用和注意事项" class="headerlink" title="10.2 return的使用和注意事项"></a>10.2 return的使用和注意事项</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/return%E7%9A%84%E4%BD%BF%E7%94%A8.png" alt="return的使用"></p><blockquote><p><strong><strong><code>**利用数组时，可以实现许多功能**</code></strong></strong></p><p>如数组里面可以放方程</p><p><code>注意</code>：</p><ol><li><p>在返回值时，没有return返回undefined</p></li><li><p>return不仅可以跳出循环，还能返回return语句中的值，结束函数代码</p></li></ol></blockquote><hr><h3 id="10-3实参与形参的个数对应问题"><a href="#10-3实参与形参的个数对应问题" class="headerlink" title="10.3实参与形参的个数对应问题"></a>10.3实参与形参的个数对应问题</h3><blockquote><p>比较free，可以允许实参个数少于形参个数</p></blockquote><h3 id="1-遇到的问题可调用"><a href="#1-遇到的问题可调用" class="headerlink" title="1.遇到的问题可调用"></a><strong>1.遇到的问题<code>可调用</code></strong></h3><blockquote><p><strong><code>1.函数里面的变量只能在函数里面用</code></strong></p><p><strong><code>不能带到外面</code></strong></p><p>2.<code>**但是函数之间可以互相调用**</code></p></blockquote><hr><hr><h3 id="10-4-arguments-存储实参的组"><a href="#10-4-arguments-存储实参的组" class="headerlink" title="10.4 arguments(存储实参的组)"></a>10.4 arguments(存储实参的组)</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/arguments%E8%8E%B7%E5%8F%96%E5%AE%9E%E5%8F%82.png" alt="arguments获取实参"></p><blockquote><ul><li>只有函数才有的，内置好的（伪数组）</li><li>存储了所有传递的实参<ol><li>console.log(arguments.length);</li><li>利用遍历可以输出</li></ol></li></ul></blockquote><hr><h3 id="2-案例中的发现"><a href="#2-案例中的发现" class="headerlink" title="2.案例中的发现"></a>2.案例中的发现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)&#123;<span class="comment">//true是函数的值</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-函数的命名"><a href="#3-函数的命名" class="headerlink" title="3.函数的命名"></a>3.函数的命名</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E7%9A%84%E4%B8%8D%E5%90%8C.png" alt="函数命名的不同"></p><hr><hr><h2 id="11-作用域（起作用的范围）"><a href="#11-作用域（起作用的范围）" class="headerlink" title="11 作用域（起作用的范围）"></a>11 作用域（起作用的范围）</h2><blockquote><ol><li><p>提高代码的可靠性</p></li><li><p>减少命名的冲突问题</p></li><li><p>函数里面的命名与全局里面的命名</p></li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure><hr><h3 id="11-1变量作用域"><a href="#11-1变量作用域" class="headerlink" title="11.1变量作用域"></a>11.1变量作用域</h3><blockquote><ol><li><code>全局变量</code><ol><li>在函数里面<code>没有var声明</code></li><li>在全局作用域下的变量</li></ol></li></ol></blockquote><hr><blockquote><p>2.<code>局部变量</code></p><ol><li>在函数里面<code>有声明</code></li><li>函数里面的<code>形参</code></li></ol></blockquote><hr><h4 id="1-区别"><a href="#1-区别" class="headerlink" title="1.区别"></a>1.区别</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%8F%98%E9%87%8F%E4%B8%8D%E5%90%8C%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt="变量不同的区别"></p><blockquote><p><code>注意</code></p><p>es6中才加的块级作用域</p></blockquote><hr><hr><h3 id="11-2作用域链"><a href="#11-2作用域链" class="headerlink" title="11.2作用域链"></a>11.2作用域链</h3><p><code>函数包含函数时的变量作用域问题</code></p><hr><hr><h2 id="12-预解析（将一些定义提前）"><a href="#12-预解析（将一些定义提前）" class="headerlink" title="12.预解析（将一些定义提前）"></a>12.预解析（将一些定义提前）</h2><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E9%A2%84%E8%A7%A3%E6%9E%90%E7%9A%84%E5%86%85%E5%AE%B9.png" alt="预解析的内容"></p><blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/var%E9%A2%84%E8%A7%A3%E6%9E%90.png" alt="var预解析"></p></blockquote><ul><li><code>提升到当前作用域的最前面</code></li><li><code>定义变量/函数</code></li></ul><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%BD%93%E5%89%8D%E5%AE%9A%E4%B9%89%E5%9F%9F%E7%9A%84%E5%8F%98%E9%87%8F%E5%92%8C%E5%87%BD%E6%95%B0%E6%8F%90%E5%89%8D.png" alt="当前定义域的变量和函数提前"></p><blockquote><p>最后加上console.log(num);</p><p>结果分别是是undefind  ,20 ，10</p><p>1.函数外var全局声明，函数内var在函数内全局（局部变量），两者均提前到当前域的最前面</p></blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%BD%93%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E6%9C%89%E5%85%B3%E7%B3%BB%E6%97%B6.png" alt="当变量声明有关系时"></p><ul><li><code>var a = b = c = 9(只声明了a)</code>这样容易变成全局声明</li><li><code>var a = 9, b = 9, c = 9;（全部声明）</code> </li></ul><hr><hr><hr><h2 id="13-TARGET（对象）"><a href="#13-TARGET（对象）" class="headerlink" title="13.TARGET（对象）"></a>13.TARGET（对象）</h2><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/JS%E4%B8%AD%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%AE%9A%E4%B9%89.png" alt="JS中对象的定义"></p><blockquote><p>具体的</p></blockquote><h3 id="13-1创建对象的三种方法"><a href="#13-1创建对象的三种方法" class="headerlink" title="13.1创建对象的三种方法"></a>13.1创建对象的三种方法</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95.png" alt="创建对象的三种方法"></p><blockquote><p>1.字面量//<code>大括号创建空对象</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">         <span class="attr">uname</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">         <span class="attr">age</span>: <span class="string">&#x27;18&#x27;</span>,</span><br><span class="line">         <span class="attr">sayHi</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">             <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi~&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">uname</span>);<span class="comment">//.+信息</span></span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="string">&#x27;age&#x27;</span>]);<span class="comment">//属性信息用中括号</span></span><br><span class="line">     obj.<span class="title function_">sayHi</span>();<span class="comment">//属性的方法调用</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>2.<code>其中&#39;.&#39;理解为‘的’</code></p><p>如<code>obj的方法</code>||<code>obj的age</code></p><p>3.uname: ‘张三’,<br>         age: ‘18’</p><p>这里需要注意中间用<code>冒号</code>表示一个键值对</p><p>每个键值对用<code>逗号隔开</code></p></blockquote><h4 id="1-与变量的相同"><a href="#1-与变量的相同" class="headerlink" title="1.与变量的相同"></a>1.与变量的相同</h4><blockquote><p> 都是可以存储信息</p></blockquote><h4 id="2-不同"><a href="#2-不同" class="headerlink" title="2.不同"></a>2.不同</h4><blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%AF%B9%E8%B1%A1%E4%B8%8E%E4%B8%80%E8%88%AC%E5%8F%98%E9%87%8F&%E5%87%BD%E6%95%B0%E7%9A%84%E5%BC%82%E5%90%8C.png" alt="对象与一般变量&amp;函数的异同"></p><p><code>一般都是调用的时候不同</code></p><p>变量和函数都是可以<code>单独存在</code>的</p></blockquote><hr><hr><h3 id="13-2利用new-Object创建对象"><a href="#13-2利用new-Object创建对象" class="headerlink" title="13.2利用new Object创建对象"></a>13.2利用new Object创建对象</h3><blockquote><p>其实就是<code>直接创建对象</code></p><p>1.先创建一个空对象</p><p>2.obj.sex = ‘男’;</p><p><code>var o =&#123;&#125;;</code></p><p><code>o[a];//创建了对象o,里面的一个属性a（可以是变量.</code></p></blockquote><hr><blockquote><p><code>这里要注意，obj.sex创建的属性是明确的，不能用变量</code></p></blockquote><hr><h3 id="13-3创建多个对象（方便）构造函数"><a href="#13-3创建多个对象（方便）构造函数" class="headerlink" title="13.3创建多个对象（方便）构造函数"></a>13.3创建多个对象（方便）<code>构造函数</code></h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/new%E6%9E%84%E9%80%A0%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E6%96%B9%E4%BE%BF%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA.png" alt="new构造一个函数，方便多个对象创建"></p><blockquote><p>相当于之前的调用函数+创建数组的样子</p><p>new+构造函数名+对象信息（相同）</p><p>快速创建</p><p>还要用<code>this</code></p><p>this.sing = function(sang) {</p><p>​    console.log(sang);</p><p>}</p><p>ldh.sing(‘冰雨’)；</p></blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/new%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.png" alt="new创建对象"></p><hr><p><code>new?</code></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/new.png" alt="new"></p><hr><hr><h3 id="13-4实现遍历对象for-in（让属性有序，可以输出"><a href="#13-4实现遍历对象for-in（让属性有序，可以输出" class="headerlink" title="13.4实现遍历对象for in（让属性有序，可以输出"></a>13.4实现<code>遍历对象</code>for in（让属性有序，可以输出</h3><p>![for in遍历对象中的内容](for in遍历对象中的内容.png)</p><blockquote><p>（<code>输出也是和遍历输出一样的，可以在里面添加条件语句比较大小</code>）</p></blockquote><hr><h4 id="1-实现任意数组的冒泡"><a href="#1-实现任意数组的冒泡" class="headerlink" title="1.实现任意数组的冒泡"></a>1.实现任意数组的冒泡</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">Number</span>(<span class="params">reverse</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">reverse</span> = <span class="keyword">function</span> (<span class="params">sang</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> newArr = [];</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= sang.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt;= sang.<span class="property">length</span> - i - <span class="number">1</span>; j++) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (sang[j] &lt; sang[j + <span class="number">1</span>]) &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">var</span> temp = sang[j + <span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">                            sang[j + <span class="number">1</span>] = sang[j];</span></span><br><span class="line"><span class="language-javascript">                            sang[j] = temp;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                newArr = sang;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr1 = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">2</span>,<span class="number">99</span>], arr2 = <span class="keyword">new</span> <span class="title class_">Number</span>(arr1);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);</span></span><br><span class="line"><span class="language-javascript">        arr2.<span class="title function_">reverse</span>(arr1);</span></span><br></pre></td></tr></table></figure><hr><hr><hr><h2 id="14内置对象-快捷内置方法"><a href="#14内置对象-快捷内置方法" class="headerlink" title="14内置对象(快捷内置方法)"></a>14内置对象(快捷内置方法)</h2><blockquote><p>对象分为三种：</p><p><code>自定义对象（obj)、内置对象、浏览器对象</code></p></blockquote><h3 id="14-1多去查文档（MDN）Math对象"><a href="#14-1多去查文档（MDN）Math对象" class="headerlink" title="14.1多去查文档（MDN）Math对象"></a>14.1多去查文档（MDN）Math对象</h3><p>Math.max(1,9)</p><p>Math.PI</p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/Math%E6%96%B9%E6%B3%95.png" alt="Math方法"></p><blockquote><p><code>会存在隐式转换</code>，字符串数字转换成数字</p><p>Math.abs(‘1’);</p><p>四舍五入，0.5无论正负都是<code>往大了取</code></p></blockquote><hr><h4 id="1-random获取随机数（实现点名）"><a href="#1-random获取随机数（实现点名）" class="headerlink" title="1.random获取随机数（实现点名）"></a>1.random获取随机数（实现点名）</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E8%8E%B7%E5%8F%96%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BB%BB%E6%84%8F%E6%95%B4%E6%95%B0.png" alt="获取两个整数之间的任意整数"></p><p><code>可以实现字符串随机取</code></p><blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E9%9A%8F%E6%9C%BA%E7%82%B9%E5%90%8D.png" alt="随机点名"></p><p><code>利用random代替数字的索引号</code></p></blockquote><hr><hr><h3 id="14-2日期对象（其实就是构造一个日期函数）"><a href="#14-2日期对象（其实就是构造一个日期函数）" class="headerlink" title="14.2日期对象（其实就是构造一个日期函数）"></a>14.2日期对象（其实就是构造一个日期函数）</h3><blockquote><p>需要用到<code>new</code>(实例化后才能使用)</p></blockquote><p>var date = new Dat();</p><p>console.log(date.getMonth()+1);</p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E8%8E%B7%E5%BE%97%E6%97%A5%E6%9C%9F%E7%9A%84date%E6%96%B9%E6%B3%95.png" alt="获得日期的date方法"></p><blockquote><p><code>1.利用数组实现日期的输出</code></p><p>var date = new Date();<code>//(实例化)</code></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E8%BE%93%E5%87%BA%E6%97%A5%E6%9C%9F.png" alt="输出日期"></p><p>在方法里面，<code>星期日输出的是0，刚好对应索引号0</code></p><p>可以在此基础上，加入<code>时分秒</code></p><p><code>2.用函数输出时分秒</code></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%87%BD%E6%95%B0%E8%BE%93%E5%87%BA%E6%97%B6%E5%88%86%E7%A7%92.png" alt="函数输出时分秒"></p><p><code>格式</code></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%97%B6%E5%88%86%E7%A7%92%E6%A0%BC%E5%BC%8F.png" alt="时分秒格式"></p><p>s = s &lt; 10 ？’0’ + s : s;//<code>s小于10就在前面+0，否则直接输出</code></p></blockquote><hr><hr><h3 id="14-3数组对象"><a href="#14-3数组对象" class="headerlink" title="14.3数组对象"></a>14.3数组对象</h3><p>创建方法与之前大致相同</p><h4 id="1-检测是否为数组"><a href="#1-检测是否为数组" class="headerlink" title="1.检测是否为数组"></a>1.检测是否为数组</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%A3%80%E6%B5%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95.png" alt="检测是否为数组的两种方法"></p><hr><h4 id="2-添加数组"><a href="#2-添加数组" class="headerlink" title="2.添加数组"></a>2.添加数组</h4><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">4</span>);<span class="comment">//末尾添加4进去</span></span><br><span class="line"><span class="title function_">unshift</span>(<span class="number">0</span>);<span class="comment">//前面增加一个元素</span></span><br><span class="line"><span class="comment">//返回长度</span></span><br></pre></td></tr></table></figure><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%89%8D%E5%90%8E%E6%B7%BB%E5%8A%A0%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%96%B9%E6%B3%95.png" alt="前后添加数组元素的方法"></p><p>前后增加一个元素</p><p>pop();//后面删除一个元素，返回删除的元素</p><p>shift();//删除第一个元素，返回删除的那个元素</p></blockquote><blockquote><p><code>push//可以直接增加一个数组到另一个数组里面</code></p><ul><li><p>之前需要的是创建一个新的数组用for循环进行转移</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i =  <span class="number">1</span>;i &lt;= arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line"></span><br><span class="line">arrNew [arrNew.<span class="property">length</span>] = arr [ i ];&#125;</span><br></pre></td></tr></table></figure></li><li></li></ul></blockquote><hr><h4 id="3-数组排序"><a href="#3-数组排序" class="headerlink" title="3.数组排序"></a>3.数组排序</h4><blockquote><p><code>arr.reverse()</code></p><p><code>颠倒数组</code></p></blockquote><blockquote><p>arr.sort(function(a,b)){</p><p>return a - b;//<code>升序排列</code>b - a降序</p><p>}//<code>就是冒泡排序</code></p></blockquote><p><code>以上均会改变原来的数组，返回一个新的数组（arrNew=[])</code></p><hr><h4 id="4-索引数组元素-往前往后查"><a href="#4-索引数组元素-往前往后查" class="headerlink" title="4.索引数组元素(往前往后查)"></a>4.索引数组元素(往前往后查)</h4><blockquote><p><code>indexOf(数组元素)</code>//(相同时)返回第一个满足的数组元素的索引号&lt;</p><p><code>lastIndexOf()</code>//最后一个</p></blockquote><blockquote><p>当数组里面找不到时，返回的是-1</p><p>var arr = [‘blue’];</p><p>console.log(arr.indexOf(‘blue’));</p><p>console.log(arr.lastIndexOf(‘blue’));</p></blockquote><hr><h4 id="5-数组转化为字符串"><a href="#5-数组转化为字符串" class="headerlink" title="5.数组转化为字符串"></a>5.数组转化为字符串</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt="修改数组为字符串"></p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">toString</span>()；<span class="comment">//整个转化</span></span><br><span class="line">arr.<span class="title function_">join</span>(分隔符)；<span class="comment">//转化同时可以有分隔符</span></span><br></pre></td></tr></table></figure><p><code>join//默认分隔符为逗号，可以自定义分隔符</code></p><p><a name="数转字">数组转化为字符串</a></p></blockquote><hr><h4 id="6-数组修改拓展"><a href="#6-数组修改拓展" class="headerlink" title="6.数组修改拓展"></a>6.<code>数组修改拓展</code></h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%9B%B4%E6%94%B9%E6%95%B0%E7%BB%84.png" alt="更改数组"></p><p><a name="top">修改数组</a></p><hr><hr><h3 id="14-4字符串对象"><a href="#14-4字符串对象" class="headerlink" title="14.4字符串对象"></a>14.4字符串对象</h3><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%9F%BA%E6%9C%AC%E5%8C%85%E8%A3%85%E7%B1%BB%E5%9E%8B%EF%BC%88%E8%AE%A9%E6%95%B0%E6%8D%AE%E6%8B%A5%E6%9C%89%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%EF%BC%89.png" alt="基本包装类型（让数据拥有属性和方法）"></p><hr><h4 id="1-字符串不可变"><a href="#1-字符串不可变" class="headerlink" title="1.字符串不可变"></a>1.字符串不可变</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/Users\dell\AppData\Roaming\Typora\typora-user-images\image-20220817155725310.png" alt="image-20220817155725310"></p><blockquote><p>只是改变了指向，原来的字符串仍然占空间（所以不要大量拼接字符串）``</p></blockquote><blockquote><p><code>每次更改字符串的操作都会返回一个新的字符串占用空间</code></p></blockquote><hr><h4 id="2-报告字符串的位置"><a href="#2-报告字符串的位置" class="headerlink" title="2.报告字符串的位置"></a>2.报告字符串的位置</h4><blockquote><p>str.indexOf(‘字符串’)</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">   <span class="keyword">var</span> str =<span class="string">&#x27;abcdefg,121041584&#x27;</span>;  <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;1&#x27;</span>)+<span class="number">1</span>);    <span class="comment">//返回该字符串的位置</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;1&#x27;</span>)+<span class="number">1</span>);    <span class="comment">//返回该字符串的位置(优先后面)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>console.log(str.indexOf(‘1’,12)+1);//<code>从第十二个开始找</code></p></blockquote><blockquote><ul><li><code>检查数组中，元素出现的位置和次数</code></li></ul><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E4%B8%AD%EF%BC%8C%E5%85%83%E7%B4%A0%E5%87%BA%E7%8E%B0%E7%9A%84%E4%BD%8D%E7%BD%AE%E5%92%8C%E6%AC%A1%E6%95%B0.png" alt="检查数组中，元素出现的位置和次数"></p><blockquote><p><code>同理字符串也可以</code></p></blockquote></blockquote><hr><h4 id="3-根据位置返回字符串"><a href="#3-根据位置返回字符串" class="headerlink" title="3.根据位置返回字符串"></a>3.<code>根据位置返回字符串</code></h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%A0%B9%E6%8D%AE%E4%BD%8D%E7%BD%AE%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95.png" alt="根据位置返回字符串的三种方法"></p><blockquote><p>还能用if语句判断是否有这个属性</p><p>if(str[<code>&#39;age&#39;</code>])</p></blockquote><blockquote><p><code>检测字符的出现次数（并且比较大小）</code></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%A3%80%E6%B5%8B%E5%AD%97%E7%AC%A6%E7%9A%84%E6%95%B0%E9%87%8F.png" alt="检测字符的数量"></p><ul><li><code>可以利用for in来实现遍历比较大小</code></li></ul></blockquote><hr><h4 id="4-拼接字符串"><a href="#4-拼接字符串" class="headerlink" title="4.拼接字符串"></a>4.拼接字符串</h4><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt="截取字符串"></p><blockquote><p>可以与之前的数组截取对比</p><p><code>参考数组修改拓展</code></p></blockquote><p><a href="#top">跳转到修改数组</a></p><p><a href="#top">修改数组</a></p><hr><h4 id="5-替换字符串"><a href="#5-替换字符串" class="headerlink" title="5.替换字符串"></a>5.替换字符串</h4><blockquote><p>str.replace(‘a’,’*’);</p><p>可以用来替换敏感词</p></blockquote><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/replace%E5%81%9A%E5%88%B0%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2.png" alt="replace做到替换字符串"></p><blockquote><p>str.indexOf(‘o’)//字符时</p><p>indexOf(数组元素)//数组时</p></blockquote><h4 id="6-字符转化为数组"><a href="#6-字符转化为数组" class="headerlink" title="6.字符转化为数组"></a>6.字符转化为数组</h4><p><a href="#%E6%95%B0%E8%BD%AC%E5%AD%97">数组转化为字符串</a></p><p><img src="/2022/12/14/JS%E5%9F%BA%E7%A1%80%EF%BC%882%EF%BC%89/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%95%B0%E7%BB%84.png" alt="字符串转数组"></p><blockquote><p>这里应该<code>注意</code>字符串里面的<code>分隔符</code></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS基础语法</title>
      <link href="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-JS基础"><a href="#1-JS基础" class="headerlink" title="1.JS基础"></a>1.JS基础</h1><h2 id="2-三种书写方"><a href="#2-三种书写方" class="headerlink" title="2.三种书写方"></a>2.三种书写方</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.行内式</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点点看&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;onclick是什么意思呢？&#x27;)&quot;</span>&gt;</span></span><br><span class="line">2.内嵌式</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;内嵌式用法&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">3.外部</span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;外部书写.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>highlight 1</code><br><mark>highlight 2<mark></mark></mark></p><blockquote><ul><li><mark>与之前的用法十分相似<mark></mark></mark></li><li>懂了，就是点击出现警示框的意思</li></ul></blockquote><h2 id="3-js的三种输入输出语句"><a href="#3-js的三种输入输出语句" class="headerlink" title="3.js的三种输入输出语句"></a>3.js的三种输入输出语句</h2><hr><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E4%B8%89%E7%A7%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5.png" alt="三种常用的输入输出语句"></p><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E4%B8%89%E7%A7%8D%E7%94%A8%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%E8%A7%A3%E6%9E%90.png" alt="三种用法的使用解析"></p><blockquote><p><mark>1.输出给用户看的警示框<mark></mark></mark></p><p><mark>2.让用户输入的框<mark></mark></mark></p><p><mark>3.给程序员看的框（显示在console）<mark></mark></mark></p></blockquote><h2 id="4-命名规范"><a href="#4-命名规范" class="headerlink" title="4.命名规范"></a>4.命名规范</h2><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%8F%98%E9%87%8F%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.png" alt="变量命名规范"></p><blockquote><ul><li><mark>注意驼峰命名<mark></mark></mark></li></ul></blockquote><blockquote><ul><li><mark>name最好不要作为直接变量使用<mark></mark></mark></li></ul></blockquote><blockquote><ul><li><mark>值得注意的是定义变量有三个，而且都有区别<mark></mark></mark></li></ul></blockquote><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/var%E3%80%81let%E3%80%81const%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt="var、let、const的区别"></p><ul><li>其中var在第六个版本中会被画出来</li></ul><h2 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5.数据类型"></a>5.数据类型</h2><h3 id="5-1数据类型"><a href="#5-1数据类型" class="headerlink" title="5.1数据类型"></a>5.1数据类型</h3><h3 id="5-2字符串类型"><a href="#5-2字符串类型" class="headerlink" title="5.2字符串类型"></a>5.2字符串类型</h3><h4 id="1-字符串转义符"><a href="#1-字符串转义符" class="headerlink" title="1.字符串转义符"></a>1.字符串转义符</h4><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E4%B9%89%E7%AC%A6.png" alt="字符串转义符"></p><blockquote><p>其中常用的为</p><ol><li><strong><mark>\n(换行符)<mark></mark></mark></strong></li><li><strong><mark>\\(斜杠)<mark></mark></mark></strong></li><li><strong><mark>\b(空格)<mark></mark></mark></strong></li></ol></blockquote><h4 id="2-拼接字符串-检测字符串的长度方法"><a href="#2-拼接字符串-检测字符串的长度方法" class="headerlink" title="2.拼接字符串\检测字符串的长度方法"></a>2.拼接字符串\检测字符串的长度方法</h4><p><strong><mark>变量+length<mark></mark></mark></strong></p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> demo=<span class="string">&quot;哈哈!&quot;</span>;<span class="comment">//定义变量为字符串</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(demo.<span class="property">length</span>);<span class="comment">//显示3</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><hr><p>字符串+其他类型=新的字符串</p><ul><li><p>字符串+字符串</p></li><li><blockquote><p>字符串+变量</p><p>var demo=prompt(‘请输入的的值’)</p><p>alert(‘’’haha’’+demo’);</p><p><mark>注意这里可以通过改变demo的值<mark></mark></mark></p></blockquote></li></ul><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="转换为数据类型"></p><p>**常用的是加号拼接  **<mark><strong>S</strong><mark>tring()注意大写</mark></mark></p><blockquote><p>容易<mark><strong>犯错的点</strong><mark></mark></mark></p><ul><li><mark><strong>有加号的时候，经常输出的是字符型，要注意转换成数字类型</strong><mark></mark></mark></li></ul></blockquote><hr><h3 id="5-3boolean型（布尔）及undefined和-null"><a href="#5-3boolean型（布尔）及undefined和-null" class="headerlink" title="5.3boolean型（布尔）及undefined和 null"></a>5.3boolean型（布尔）及undefined和 null</h3><p><mark>布尔型就是<mark></mark></mark></p><p><mark>ture&amp;flase<mark></mark></mark></p><p><strong><mark>1&amp;0<mark></mark></mark></strong></p><p>undefined和null</p><blockquote><p><mark>未定义&amp;空值<mark></mark></mark></p></blockquote><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/undefined%E5%92%8Cnull.png" alt="undefined和null"></p><hr><blockquote><p><strong><mark>转化为布尔型<mark></mark></mark></strong></p><p><strong><mark>Boolean()<mark></mark></mark></strong></p></blockquote><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E4%B8%80%E8%88%AC%E7%9A%84%E5%B8%83%E5%B0%94%E5%9E%8B%E8%BD%AC%E5%8C%96.png" alt="一般的布尔型转化"></p><h3 id="5-4转化为数字型"><a href="#5-4转化为数字型" class="headerlink" title="5.4转化为数字型"></a>5.4转化为数字型</h3><ol><li><p>parseInt()//将字符型转换成整数型</p></li><li><p>parseFloat()//转化为浮点型</p></li></ol><blockquote><p>1.其中’120px’只会保留120</p><p>2.’aa120px’这个不太行</p></blockquote><ol start="3"><li><p>Number()//强制转换函数</p></li><li><p>-*/三个符号运算可以转换成</p><hr></li></ol><h3 id="5-5总结五种数据类型-检测"><a href="#5-5总结五种数据类型-检测" class="headerlink" title="5.5总结五种数据类型(检测)"></a>5.5总结五种数据类型(<mark>检测<mark>)</mark></mark></h3><ol><li>数字型(number)</li><li>字符型(string)</li><li>布尔型（boolean)</li><li>未定义(undifined)</li><li>空值(null)keyi</li></ol><blockquote><p><strong>平时通过字面量（看）判断类型，后台通过颜色来判断</strong></p><p><mark>通过**console.log(typeof+空格+());**命令检测数据类型<mark></mark></mark></p></blockquote><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/typeof%E6%A3%80%E6%B5%8B%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="typeof检测数据类型"></p><blockquote><p> <mark>注意:通过prompt取过来的值是字符型的。<mark></mark></mark></p></blockquote><hr><hr><h2 id="6-算数运算符"><a href="#6-算数运算符" class="headerlink" title="6.算数运算符"></a>6.算数运算符</h2><h2 id="6-1"><a href="#6-1" class="headerlink" title="6.1+-*/%"></a>6.1+-*/%</h2><ol><li>可以通过%余数是否为零判断是否整除</li><li>浮点数运算时因为计算机通过<mark><strong>二进制</strong><mark>过程，<mark><strong>所以会有误差</strong><mark></mark></mark></mark></mark></li><li>同样的<mark><strong>浮点数</strong><mark>经过运算后的值由于有误差所以<mark><strong>不能直接用来比较</strong><mark>相等</mark></mark></mark></mark></li></ol><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.png" alt="算数运算符的常见问题"></p><hr><p>num=0 </p><p>num++</p><blockquote><p>先返回原值(式子）再计算给值给num</p></blockquote><p>++num</p><blockquote><p>先+1后返回原值++num=1,num=1</p><p>num++ + ++num||</p></blockquote><hr><h2 id="6-2短路运算-中断"><a href="#6-2短路运算-中断" class="headerlink" title="6.2短路运算(中断)"></a>6.2短路运算(中断)</h2><h3 id="1-逻辑-amp-与"><a href="#1-逻辑-amp-与" class="headerlink" title="1.逻辑&amp;与"></a>1.逻辑&amp;与</h3><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E7%9F%AD%E8%B7%AF%E8%BF%90%E7%AE%97.png" alt="短路运算"></p><blockquote><p><mark><strong>返回值</strong><mark>，<strong>目前还不知道有什么意义</strong>?</mark></mark></p><ol><li><p>判断是否要中断后面的运算。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span>&amp;num++);<span class="comment">//返回1式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);<span class="comment">//由于没有运算，num=0</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><hr><h3 id="2-逻辑-或"><a href="#2-逻辑-或" class="headerlink" title="2.逻辑||或"></a>2.逻辑||或</h3><blockquote><p><mark><strong>1式真返回1，假则返回后面一个。直到出现真。</strong><mark></mark></mark></p></blockquote><hr><h3 id="3-逻辑比较"><a href="#3-逻辑比较" class="headerlink" title="3.逻辑比较"></a>3.逻辑比较</h3><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6.png" alt="比较运算符"></p><blockquote><p><mark><strong>关于‘=’号的用法</strong><mark></mark></mark></p></blockquote><table><thead><tr><th>符号</th><th>作用</th><th>用法</th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td></td></tr><tr><td>==</td><td>判断</td><td>判断两边是否相等（包含转化字符）</td></tr><tr><td>===</td><td>全等</td><td>值和数据类型完全相等</td></tr></tbody></table><hr><hr><h3 id="4-运算符优先级"><a href="#4-运算符优先级" class="headerlink" title="4.运算符优先级"></a>4.运算符优先级</h3><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7.png" alt="运算符优先级"></p><ul><li>大致与我们常见的顺序一样</li></ul><hr><h2 id="7-分支流程控制"><a href="#7-分支流程控制" class="headerlink" title="7.分支流程控制"></a>7.分支流程控制</h2><h3 id="7-1-if语句"><a href="#7-1-if语句" class="headerlink" title="7.1  if语句"></a>7.1  if语句</h3><blockquote><p><mark><strong>与以前学过的大致一样</strong><mark></mark></mark></p></blockquote><h3 id="7-2-if-else双分支语句"><a href="#7-2-if-else双分支语句" class="headerlink" title="7.2 if else双分支语句"></a>7.2 if else双分支语句</h3><blockquote><p>if(1&gt;0)</p><p>{alert(‘a’)};</p><p>else</p><p>{alert(‘b’)};</p><blockquote><p><mark><strong>与之前学过的大致一样</strong><mark></mark></mark></p></blockquote></blockquote><h3 id="7-3-if-else-if语句多分支"><a href="#7-3-if-else-if语句多分支" class="headerlink" title="7.3 if else if语句多分支"></a>7.3 if else if语句多分支</h3><blockquote><p><mark><strong>由上往下执行，直至一条成立，与之前的差不多</strong><mark></mark></mark></p></blockquote><hr><h3 id="7-4三元表达式"><a href="#7-4三元表达式" class="headerlink" title="7.4三元表达式"></a><mark><strong>7.4三元表达式</strong><mark></mark></mark></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> result=num&gt;<span class="number">5</span>?<span class="string">&#x27;是的&#x27;</span>:<span class="string">&#x27;不是&#x27;</span>；</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    <span class="comment">//这里作用相当于if else</span></span><br></pre></td></tr></table></figure><blockquote><p>优势在于只需要一行代码</p></blockquote><h3 id="7-5switch"><a href="#7-5switch" class="headerlink" title="7.5switch"></a>7.5switch</h3><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> num=<span class="number">1</span></span><br><span class="line"><span class="keyword">switch</span>(num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;1&#x27;</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;2&#x27;</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span><span class="string">&#x27;3&#x27;</span>:</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> <span class="attr">default</span>:</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有此结果&#x27;</span>);</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p><mark><strong>注意，变量与switch里面的变量必须是全等关系</strong><mark></mark></mark></p></blockquote></blockquote><hr><hr><hr><h2 id="8-循环语句"><a href="#8-循环语句" class="headerlink" title="8.循环语句"></a>8.循环语句</h2><h3 id="8-1-for循环"><a href="#8-1-for循环" class="headerlink" title="8.1 for循环"></a>8.1 for循环</h3><blockquote><p><mark><strong>与之前的for循环类似</strong><mark></mark></mark></p></blockquote><h4 id="1-录入班级平均分"><a href="#1-录入班级平均分" class="headerlink" title="1.录入班级平均分"></a>1.录入班级平均分</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> resault=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> num = <span class="title function_">prompt</span>(<span class="string">&#x27;输入你的班级人数&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (num &lt;= <span class="number">9999</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= num; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> a=<span class="title function_">prompt</span>(<span class="string">&#x27;请输入第&#x27;</span> + i + <span class="string">&#x27;个人的分数&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                 resault = <span class="built_in">parseInt</span>(resault) + <span class="built_in">parseInt</span>(a);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> average=resault/num;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;平均分为&#x27;</span>+average);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">else</span></span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&#x27;输入格式不对或者人数超出范围&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="2-星星金子塔"><a href="#2-星星金子塔" class="headerlink" title="2.星星金子塔"></a>2.星星金子塔</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num=<span class="title function_">prompt</span>(<span class="string">&#x27;输入金字塔层数&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=num;i++)</span><br><span class="line">  &#123;</span><br><span class="line">      str=str+<span class="string">&#x27;★&#x27;</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="title function_">alert</span>(str);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/12/12/JS%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/%E6%98%9F%E6%98%9F%E9%87%91%E5%AD%97%E5%A1%94.png" alt="星星金字塔"></p><blockquote><p>这里有一个问题，这里是输出了很多次分别打印的结果，<mark><strong>如果一次性打印出来这个金子塔的话，需要用到/N</strong><mark></mark></mark></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> num=<span class="title function_">prompt</span>(<span class="string">&#x27;输入金字塔层数&#x27;</span>)</span><br><span class="line">    <span class="keyword">var</span> str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=num;i++)</span><br><span class="line">  &#123;</span><br><span class="line">      str=str+<span class="string">&#x27;★&#x27;</span>;</span><br><span class="line">     str=str+<span class="string">&#x27;/n&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><h4 id="3-双层for循环"><a href="#3-双层for循环" class="headerlink" title="3.  双层for循环"></a>3.  双层for循环</h4><p>一个为行，一个为列</p><hr><hr><h3 id="8-2-while循环"><a href="#8-2-while循环" class="headerlink" title="8.2 while循环"></a>8.2 while循环</h3><blockquote><p><mark><strong>与之前学过的while一样的用法</strong><mark></mark></mark></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;<span class="number">10</span>)</span><br><span class="line">&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;haha&#x27;</span>)</span><br><span class="line">i++;&#125;</span><br></pre></td></tr></table></figure></blockquote><hr><h4 id="1-do-while"><a href="#1-do-while" class="headerlink" title="1.do while"></a>1.do while</h4><blockquote><p>执行思路不同，先执行后判断,<mark><strong>至少执行一次</strong><mark></mark></mark></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;haha&#x27;</span>);</span><br><span class="line">i++</span><br><span class="line">&#125;<span class="keyword">while</span>(i!&lt;=<span class="number">10</span>)</span><br><span class="line"><span class="comment">//这里while后面不加;号,这里表示不为什么数就循环</span></span><br></pre></td></tr></table></figure></blockquote><hr><hr><h3 id="8-3关键字"><a href="#8-3关键字" class="headerlink" title="8.3关键字"></a>8.3关键字</h3><h4 id="1-关键字continue"><a href="#1-关键字continue" class="headerlink" title="1.关键字continue"></a>1.关键字continue</h4><blockquote><p><mark><strong>与之前学过的差不多，用于跳出循环</strong><mark></mark></mark></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i=<span class="number">4</span>)&#123;<span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;第&#x27;</span>+i+<span class="string">&#x27;个&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><mark><strong>不输出第四个</strong><mark></mark></mark></p></blockquote><hr><h4 id="2-关键字break"><a href="#2-关键字break" class="headerlink" title="2.关键字break"></a>2.关键字break</h4><blockquote><p><mark><strong>区别</strong>：<mark>直接结束循环，不是跳出其中一个</mark></mark></p></blockquote><hr><hr><h3 id="8-4-xunhuanzuoye"><a href="#8-4-xunhuanzuoye" class="headerlink" title="8.4 xunhuanzuoye"></a>8.4 xunhuanzuoye</h3><p>1.chengfabiao</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                str = str + j + <span class="string">&#x27;x&#x27;</span> + i + <span class="string">&#x27;=&#x27;</span> + i * j;</span><br><span class="line">                str+= <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><hr><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="/2022/12/09/CSS/"/>
      <url>/2022/12/09/CSS/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS开始学习了"><a href="#CSS开始学习了" class="headerlink" title="CSS开始学习了"></a>CSS开始学习了</h1><p><img src="/2022/12/09/CSS/%E5%AD%A6%E4%B9%A0%E8%A6%81%E6%B1%82.png" alt="学习要求"></p><ul><li>学习的要求，精通必须学会网页动画的设计</li></ul><p>cascading style sheet</p><p>层叠级联样式表</p><h3 id="1-入门直接代码在里面使用"><a href="#1-入门直接代码在里面使用" class="headerlink" title="1.入门直接代码在里面使用"></a>1.入门直接代码在里面使用</h3><p><img src="/2022/12/09/CSS/%E5%A5%97%E5%9C%A8%E9%87%8C%E9%9D%A2%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8.png" alt="套在里面直接使用"></p><h3 id="嵌套使用"><a href="#嵌套使用" class="headerlink" title="嵌套使用"></a>嵌套使用</h3><h2 id="html利用css的两种方式"><a href="#html利用css的两种方式" class="headerlink" title="html利用css的两种方式"></a>html利用css的两种方式<img src="/2022/12/09/CSS/%E5%86%99%E5%85%A5css%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%A0%B7%E5%BC%8F.png" alt="写入css的两种样式"></h2><ul><li>导入式比较不常用（css2.1特有的）</li><li>容易出现问题<ol><li>生成页面时，卡的话会先显示骨架html</li><li>后面才会是css的渲染</li></ol></li></ul><h3 id="样式的优先级"><a href="#样式的优先级" class="headerlink" title="样式的优先级"></a>样式的优先级</h3><p><img src="/2022/12/09/CSS/%E6%A0%B7%E5%BC%8F%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7.png" alt="样式的优先级"></p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>作用：选择页面上的某个元素或标 签</p><p><img src="/2022/12/09/CSS/%E6%A0%87%E7%AD%BE%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%8C%E9%80%89%E4%B8%AD%E6%A0%87%E7%AD%BE.png" alt="标签选择器，选中标签"></p><ol><li>学习的时候可以在网页中调试，再复制到自己的网页上</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span> lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-<span class="number">8</span>&quot;&gt;</span><br><span class="line">    &lt;title&gt;标签&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    <span class="selector-tag">h1</span>&#123;</span><br><span class="line">      <span class="attribute">color</span>: aqua;</span><br><span class="line">      <span class="attribute">background</span>: blue;</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">p</span>&#123;</span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*background--表示字体背景颜色</span></span><br><span class="line"><span class="comment">border-radius: 8px;表示背景圈的圆度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      font-size: 40px;表示字体的大小</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">h1</span>&gt;小颖真帅&lt;/<span class="selector-tag">h1</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;冠锦不行啊&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">html</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="显示结果"><a href="#显示结果" class="headerlink" title="显示结果"></a>显示结果</h3><p><img src="/2022/12/09/CSS/%E6%A0%87%E7%AD%BE%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%9C.png" alt="标签显示结果"></p><h3 id="2-类选择器"><a href="#2-类选择器" class="headerlink" title="2.类选择器"></a>2.类选择器</h3><p> <img src="/2022/12/09/CSS/%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="类选择器"></p><ul><li>可以.class=”**”来自定义标签的选中在style里面设定类的设置就行</li></ul><h3 id="3-id选择器"><a href="#3-id选择器" class="headerlink" title="3.id选择器"></a>3.id选择器</h3><p> 与.class不同，id选择器是全局唯一的</p><p>但是用法相识</p><h3 id="4-选择器的优先级"><a href="#4-选择器的优先级" class="headerlink" title="4.选择器的优先级"></a>4.选择器的优先级</h3><p>id&gt;class&gt;标签</p><p><img src="/2022/12/09/CSS/%E5%88%A4%E6%96%AD%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7.png" alt="判断选择器的优先级"></p><p>去网页上尝试各种标签</p><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><p><img src="/2022/12/09/CSS/%E5%B1%82%E6%AC%A1%E6%B5%81%E7%A8%8B.png" alt="层次流程"></p><p>看代码生成流程层次图</p><p>/<em>浏览器有时候刷新不变可能是没有清楚缓存</em>/</p><p><img src="/2022/12/09/CSS/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%88%B7%E6%96%B0%E4%B8%8D%E5%8F%98.png" alt="浏览器刷新不变"></p><ul><li><p>后代选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> <span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: yellow;</span><br><span class="line">        <span class="attribute">background</span>: green;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>:center;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%90%8E%E4%BB%A3%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="后代选择器"></p></li></ul><p>如图选中了后代带有p标签的元素</p><ul><li><p>子选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&gt;<span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: green;</span><br><span class="line">        <span class="attribute">background</span>: red;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>:center;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%AD%90%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="子选择器"></p></li></ul><p>如图，只选择p1一代</p><ul><li>下铺兄弟选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.xiapu</span>+<span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: green;</span><br><span class="line">        <span class="attribute">background</span>: red;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">        <span class="attribute">text-align</span>:center;&#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p1&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;xiapu&quot;&gt;p0&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;xiapu&quot;&gt;p9&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p8&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p>由题意得，他会选择p9\p8变化</p><ul><li>同条楼下兄弟选择器</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.louxia</span>~<span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background</span>: black;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p1&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;louxia&quot;&gt;p0&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span> class=&quot;xiapu&quot;&gt;p9&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p8&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ol</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">      &lt;<span class="selector-tag">p</span>&gt;p2&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">li</span>&gt;&lt;<span class="selector-tag">p</span>&gt;p3&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">  &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ol</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;p100&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%90%8C%E6%A5%BC%E9%80%89%E6%8B%A9%E5%99%A8%E5%90%91%E4%B8%8B.png" alt="同楼选择器向下"></p><p>如图，选中了同条楼下的兄弟p类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&gt;<span class="selector-tag">input</span>&#123;<span class="attribute">border</span>: <span class="number">3px</span> solid black;&#125;<span class="comment">/*精准选择第一个</span></span><br></pre></td></tr></table></figure><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[class*=<span class="string">&quot;first&quot;</span>]</span>&#123;<span class="attribute">background</span>: red&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-attr">[id*=<span class="string">&quot;demo&quot;</span>]</span>&#123;<span class="attribute">background</span>: blue&#125;</span><br><span class="line"></span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;../../css/颜色与大小<span class="selector-class">.css</span>&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot; class=&quot;item first&quot; id=&quot;demo&quot;&gt;p1&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot; class=&quot;item&quot;&gt;p2&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot;&gt;p3&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot;class=&quot;demo first&quot;&gt;p4&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot; class=&quot;demo&quot;&gt;p5&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=&quot;&quot; id=&quot;demo first&quot;&gt;p6&lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line"><span class="comment">/*其中class与id类似使用</span></span><br><span class="line"><span class="comment">=//表示绝对相等</span></span><br><span class="line"><span class="comment">*=//包含相等</span></span><br><span class="line"><span class="comment">^=//开头包含</span></span><br><span class="line"><span class="comment">$=//表示后面包含</span></span><br><span class="line"><span class="comment">a[class$=&quot;first&quot;]&#123;background: chocolate&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%B1%9E%E6%80%A7%E6%A0%87%E7%AD%BE%E7%9A%84%E5%BA%94%E7%94%A8.png" alt="属性标签的应用"></p><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">      <span class="attribute">background</span>: green;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">      <span class="attribute">text-align</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-tag">li</span> hover&#123;<span class="attribute">background</span>;blueviolet;&#125;<span class="comment">/*移动至标签时的背景颜色*/</span></span><br></pre></td></tr></table></figure><p>主要方便选择第一个或者最后一个标签进行改变</p><p><img src="/2022/12/09/CSS/%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8.png" alt="伪类选择器"></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p><img src="/2022/12/09/CSS/%E5%88%97%E8%A1%A8%E7%9A%84%E8%AE%BE%E7%BD%AE.png" alt="列表的设置"></p><p><img src="/2022/12/09/CSS/%E5%88%97%E8%A1%A8%E6%88%90%E6%9E%9C.png" alt="列表成果"></p><h2 id="3-美化网页"><a href="#3-美化网页" class="headerlink" title="3.美化网页"></a>3.美化网页</h2><h3 id="1-突出主体"><a href="#1-突出主体" class="headerlink" title="1.突出主体"></a>1.突出主体</h3><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>i:hover{</p><p>​    color: aqua;</p><p>​    background-color: aqua;</p><p>}//移动至元素，使元素突出</p></blockquote><h3 id="2-改变字体"><a href="#2-改变字体" class="headerlink" title="2.改变字体"></a>2.改变字体</h3><p>设置阴影</p><p><img src="/2022/12/09/CSS/%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E9%98%B4%E5%BD%B1.png" alt="设置字体阴影"></p><p>突出效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">span</span>&gt;<span class="selector-tag">a</span>&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line"><span class="comment">/*突出a*/</span></span><br><span class="line"><span class="attribute">font-family</span>:楷体，英文字体； </span><br><span class="line"><span class="comment">/*改变设置字体*/</span></span><br><span class="line">font-size:<span class="number">12px</span></span><br><span class="line"><span class="comment">/*改变字体大小*/</span></span><br><span class="line">...</span><br><span class="line">oblique bolder</span><br><span class="line"><span class="comment">/*斜体，加粗</span></span><br></pre></td></tr></table></figure><h3 id="1-文本样式"><a href="#1-文本样式" class="headerlink" title="1.文本样式"></a>1.文本样式</h3><ol><li><p>颜色  color rgb rgba</p><p>排版</p></li><li><p>首行缩进 text-indent:2em</p></li><li><p>文本居中/靠左、右</p></li></ol><p><img src="/2022/12/09/CSS/%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F.png" alt="文本样式"></p><p>！！！注意居中可以让行高与块高度一致</p><p>行高：line-height:10px;</p><ol start="4"><li>装饰 text-decoration:(去掉超链接的下滑线等等)</li></ol><h3 id="2-图片居中"><a href="#2-图片居中" class="headerlink" title="2.图片居中"></a>2.图片居中</h3><p>文本图片水平对齐</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        <span class="selector-tag">img</span>,<span class="selector-tag">span</span>&#123;<span class="attribute">vertical-align</span>: middle;&#125;<span class="comment">/*对齐需要目标*/</span></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">span</span>&gt;冠锦大帅哥&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=&quot;../../resoure/文本样式<span class="selector-class">.png</span>&quot; alt=&quot;图片居中&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">span</span>&gt;冠锦大帅哥&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">p</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%9B%BE%E7%89%87%E4%B8%8E%E5%8F%82%E8%80%83%E7%89%A9%E5%AF%B9%E9%BD%90.png" alt="图片与参考物对齐"></p><h3 id="3-超链接伪类"><a href="#3-超链接伪类" class="headerlink" title="3.超链接伪类"></a>3.超链接伪类</h3><p><img src="/2022/12/09/CSS/%E8%B6%85%E9%93%BE%E6%8E%A5%E4%BC%AA%E7%B1%BB%E6%95%88%E6%9E%9C.png" alt="超链接伪类效果"></p><ol><li>悬浮时颜色、字体大小</li><li>按住时字体颜色</li></ol><p><img src="/2022/12/09/CSS/%E8%B6%85%E9%93%BE%E6%8E%A5%E4%BC%AA%E7%B1%BB%E5%B8%B8%E7%94%A8.png" alt="超链接伪类常用"></p><h3 id="4-图书例子的使用"><a href="#4-图书例子的使用" class="headerlink" title="4.图书例子的使用"></a>4.图书例子的使用</h3><p><img src="/2022/12/09/CSS/%E5%9B%BE%E4%B9%A6%E4%BE%8B%E5%AD%90.png" alt="图书例子"></p><ol><li><p>预览颜色</p></li><li><p>图片链接</p></li><li><p>字体预览斜体</p></li><li><p>字体加粗</p></li><li><p>字体样式</p></li><li><p>悬停文字变大变红</p></li><li><p>点击文字变绿</p></li></ol><p>如<br> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>图书的超伪类链接<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>:none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: oblique bolder <span class="number">20px</span> <span class="string">&quot;楷体&quot;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">26px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;../../css/图书样式.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">&quot;https:/www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">&quot;../../resoure/css/例图，图书界面超伪类链接.png&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">alt</span>=<span class="string">&quot;点击跳转到购买页面&quot;</span>  &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>福尔摩斯探案集<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>作者：柯南·道尔<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>饥荒出版社<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>￥45<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="5-列表"><a href="#5-列表" class="headerlink" title="5.列表"></a>5.列表</h3><p><img src="/2022/12/09/CSS/%E5%88%97%E8%A1%A8%E4%BB%A3%E7%A0%81.png" alt="列表代码"></p><p><img src="/2022/12/09/CSS/%E5%88%97%E8%A1%A8%E6%88%90%E6%9E%9C.png" alt="列表成果"></p><blockquote><p>1.div标签可以作为一个框，来框住内容。非常常用。</p></blockquote><blockquote><p>2.列表格式如上图所示</p></blockquote><h1 id="004-盒子模型（边框）"><a href="#004-盒子模型（边框）" class="headerlink" title="004.盒子模型（边框）"></a>004.盒子模型（边框）</h1><p><img src="/2022/12/09/CSS/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.png" alt="盒子模型"></p><p>margin 外边距</p><p>border 边框</p><p>padding 内边距</p><h3 id="4-1登陆页面"><a href="#4-1登陆页面" class="headerlink" title="4.1登陆页面"></a>4.1登陆页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span> 太保登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>帐号:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="comment">&lt;!--插入输入框--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2.png" alt="登录页面"></p><p><img src="/2022/12/09/CSS/%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E7%9A%84%E6%A0%87%E7%AD%BE.png" alt="登录页面的标签"></p><blockquote><p>1.第一个div的input</p></blockquote><blockquote><p>2.文本居中</p></blockquote><blockquote><ul><li>```css<br>margin: auto;/<em>这样设置可以实现自动对齐</em><br>否则就要手动设置/margin<br>要求：块元素，且块元素有固定的宽度<br>如<div>…</div>里面<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###  4.2边框border </span><br><span class="line"></span><br><span class="line">粗细</span><br><span class="line"></span><br><span class="line">样式</span><br><span class="line"></span><br><span class="line">颜色</span><br><span class="line"></span><br><span class="line">border: 1px solid red</span><br><span class="line"></span><br><span class="line">###  4.3内边距&amp;外边距</span><br><span class="line"></span><br><span class="line">padding&amp;margin</span><br><span class="line"></span><br><span class="line">(默认时，上下左右）p:0 0 0 0 </span><br><span class="line"></span><br><span class="line">* 外边距的妙用，在居中的时候可以利用</span><br><span class="line"></span><br><span class="line">###  4.4圆角边框</span><br><span class="line"></span><br><span class="line">```css</span><br><span class="line">border-radius: 8px;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><p>默认：0 0 0 0</p><p>对应左上、右上、右下、左下（顺时针）</p></blockquote><h3 id="4-5圆形"><a href="#4-5圆形" class="headerlink" title="4.5圆形"></a>4.5圆形</h3><blockquote><p>1.根据图片大小调如（50x50)</p><p>border-radius: 25px;就会变成圆形</p></blockquote><h3 id="4-6阴影"><a href="#4-6阴影" class="headerlink" title="4.6阴影"></a>4.6阴影</h3><blockquote><p>1.盒子阴影：box-shadow:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span>  <span class="number">1px</span> darkorange ; &#125;</span><br><span class="line"><span class="comment">/*        水平位移 垂直位移 虚幻程度 颜色*/</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>2.文字阴影：text-shadow:<img src="/2022/12/09/CSS/%E8%AE%BE%E7%BD%AE%E5%AD%97%E4%BD%93%E9%98%B4%E5%BD%B1.png" alt="设置字体阴影"></p></blockquote><p><img src="/2022/12/09/CSS/%E9%98%B4%E5%BD%B1%E4%BB%A5%E5%8F%8A%E5%9C%86%E8%BE%B9%E6%A1%86%E7%9A%84%E8%AE%BE%E7%BD%AE.png" alt="阴影以及圆边框的设置"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;<span class="comment">/*设置高、宽，居中*/</span></span><br><span class="line"><span class="selector-id">#boxing</span>&#123;<span class="attribute">border-radius</span>:<span class="number">50px</span> <span class="number">0px</span> <span class="number">50px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="comment">/*圆角设置*/</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid red;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;<span class="comment">/*内边距*/</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">12px</span> <span class="number">12px</span>  <span class="number">10px</span> darkorange ;</span><br><span class="line">    <span class="attribute">font</span>:  bolder <span class="number">44px</span> <span class="string">&quot;楷体&quot;</span> ;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">text-align</span>: center;<span class="comment">/*文字居中*/</span></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">200px</span>;<span class="comment">/*设置行高让文字水平居中*/</span></span><br><span class="line">    <span class="attribute">text-shadow</span>:darkorange <span class="number">3px</span> <span class="number">3px</span> <span class="number">3px</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*            水平位移 垂直位移 虚幻程度 颜色*/</span></span><br></pre></td></tr></table></figure><h3 id="4-7居中问题"><a href="#4-7居中问题" class="headerlink" title="4.7居中问题"></a>4.7居中问题</h3><blockquote><p>需要给box设定一定的宽度高度</p><p>margin:0 auto;///text-align:center;</p></blockquote><h2 id><a href="#" class="headerlink" title></a></h2><h1 id="5-浮动（行内排列）"><a href="#5-浮动（行内排列）" class="headerlink" title="5.浮动（行内排列）"></a>5.浮动（行内排列）</h1><p><img src="/2022/12/09/CSS/%E6%B5%AE%E5%8A%A8%EF%BC%8C%E5%85%83%E7%B4%A0%E5%B8%83%E5%B1%80.png" alt="浮动，元素布局"></p><ul><li>块元素：独占一行</li></ul><blockquote><p>h1~h6| p | div | 列表：ol/ul(有序或者无序列表)</p></blockquote><ul><li>行元素：不独占一行</li></ul><blockquote><p>span   a    img     strong…..</p></blockquote><h3 id="5-1块元素和行元素的替换（display）"><a href="#5-1块元素和行元素的替换（display）" class="headerlink" title="5.1块元素和行元素的替换（display）"></a>5.1块元素和行元素的替换（display）</h3><blockquote><p>利用display</p><p>1.行元素：</p><p>display:block||</p><p>display:inline-block（块元素可以在一行（内联）</p><p>2.块元素：</p><p>display:none（消失）||</p><p>display:inline-block</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--/*下面放置两种元素*/--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">div</span>&#123;<span class="attribute">font</span>:  bolder <span class="number">30px</span> <span class="string">&quot;楷体&quot;</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: red&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">span</span>&#123;<span class="attribute">font</span>:  bolder <span class="number">30px</span> <span class="string">&quot;楷体&quot;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: red&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span>序号一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span>序号二<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>行内标签</li></ul><p><img src="/2022/12/09/CSS/%E8%A1%8C%E5%85%83%E7%B4%A0%E4%B8%8E%E5%9D%97%E5%85%83%E7%B4%A0%E7%9A%84%E8%BD%AC%E6%8D%A2.png" alt="行元素与块元素的转换"></p><h3 id="5-2图片浮动（float"><a href="#5-2图片浮动（float" class="headerlink" title="5.2图片浮动（float)"></a>5.2图片浮动（float)</h3><p><img src="/2022/12/09/CSS/%E5%9B%BE%E7%89%87%E6%B5%AE%E5%8A%A8.png" alt="图片浮动"></p><blockquote><ol><li>利用class类标签标注图片</li><li>外面div框住整个面板</li><li>对图片进行即可同行处理</li><li>元素加入float:left实现左浮动</li></ol></blockquote><blockquote><ul><li>清除两侧浮动——clear:both;可以选择一侧</li></ul></blockquote><h3 id="5-3父级边框塌陷（文字超出边）的问题"><a href="#5-3父级边框塌陷（文字超出边）的问题" class="headerlink" title="5.3父级边框塌陷（文字超出边）的问题"></a>5.3父级边框塌陷（文字超出边）的问题</h3><ul><li>就是不浮动的文字什么的跑出了边框（设置的div=父级）</li></ul><p>解决塌陷的方法</p><blockquote><p>1.增加父级的高度</p><p>调整height: 500px;</p><p>2.在浮动元素后面增加div，（虽然简单，但是代码中一般避免用空的div）</p><p>3.下面做一个次父级（顶格法）将文字顶回去</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"><span class="selector-class">.b1</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">clear</span>: both;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">2px</span> dashed red ; </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">&lt;<span class="attr">div</span> <span class="attr">class</span>=<span class="string">&quot;b1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/12/09/CSS/%E5%88%A9%E7%94%A8%E5%9D%97%E5%85%83%E7%B4%A0%E9%A1%B6%E5%9B%9E%E5%8E%BB.png" alt="利用块元素顶回去"></p><blockquote><p>在父级下面做块元素禁止浮动将溢出的文字顶回去</p></blockquote><p>3.overflow:hidden;//auto修剪至不超出（如果加个拖条就可以全部显示overflow: scroll;）（下拉拖条）</p><p><img src="/2022/12/09/CSS/%E6%8B%96%E6%9D%A1.png" alt="拖条"></p><p>4.伪类</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><ul><li><p>在父级之后弄一==个不允许==浮动的块元素，相当于快捷顶格</p><p>==(增加一个伪类：after(推荐)，写法稍微复杂，但是没有副作用)==</p></li></ul></blockquote><h3 id="5-5对比display与float-？"><a href="#5-5对比display与float-？" class="headerlink" title="5.5对比display与float==？=="></a>5.5对比display与float==？==</h3><p>display</p><p>==方向不可控==</p><p>float</p><p>==浮动起来会脱离标准文档流，所以要解决父级边框塌陷的问题==</p><h1 id="6-定位"><a href="#6-定位" class="headerlink" title="6.定位"></a>6.定位</h1><h3 id="6-1相对定位"><a href="#6-1相对定位" class="headerlink" title="6.1相对定位"></a>6.1相对定位</h3><p><img src="/2022/12/09/CSS/%E5%AE%9A%E4%BD%8D%E5%88%9D%E7%BA%A7%E4%BD%BF%E7%94%A8.png" alt="定位初级使用"></p><ul><li>position:</li><li>相对于原来的位置进行指定的偏移（仍然在标准文档中，原来的位置会被保留）</li><li>设置上下左右的操作</li></ul><p><img src="/2022/12/09/CSS/%E5%AE%9A%E4%BD%8D%E4%BD%9C%E4%B8%9A%E7%9A%84%E7%BB%BC%E5%90%88%E4%BD%BF%E7%94%A8.png" alt="定位作业的综合使用"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#asecond</span>&#123;   <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background</span>: pink;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">right</span>:-<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>==1.本次作业中，我<strong>使用了多个div</strong>作为块元素==</p><p>==2.实际上<strong>还可以使用display：block</strong>;==</p><p>==将行元素变成块元素就可以设置高度宽度了==</p><p><strong>==3.忘记了逗号的使用==</strong></p></blockquote><h3 id="6-2绝对定位（absolute"><a href="#6-2绝对定位（absolute" class="headerlink" title="6.2绝对定位（absolute)"></a>6.2绝对定位（absolute)</h3><ul><li><p>在没有父级的情况下，以浏览器为边框</p></li><li><p>有父级时，以父级为边框</p></li></ul><blockquote><p>与相对定位不同</p><ol><li>==绝对定位会丢失原来的位置，使其它块元素挤过去==</li><li>==绝对定位不会超出框，最多只能顶格==</li></ol></blockquote><p>position:absolute;</p><h3 id="6-3固定定位"><a href="#6-3固定定位" class="headerlink" title="6.3固定定位"></a>6.3固定定位</h3><p><img src="/2022/12/09/CSS/%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E4%B8%8E%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D.png" alt="绝对定位与固定定位"></p><ul><li><p>div:nth-of-type(1)//div类型第一个</p></li><li><p>position:fixed;//固定选择器</p></li></ul><p><img src="/2022/12/09/CSS/%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D.png" alt="固定定位"></p><p>固定在屏幕上</p><h3 id="6-5-z-index"><a href="#6-5-z-index" class="headerlink" title="6.5 z-index"></a>6.5 z-index</h3><ul><li><p> 图层设置，初始默认为0层</p></li><li><p> 利用图层设置显示在网页上的顺序</p></li><li><p> 透明度的设置</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">opacity</span>:<span class="number">0.5</span><span class="comment">/*透明度为50%*/</span>新版本</span><br><span class="line">filter:<span class="built_in">Alpha</span>(opacity=<span class="number">50</span>);<span class="comment">/*旧版本识别i8可能不兼容了</span></span><br></pre></td></tr></table></figure><ul><li>利用定位将文字送到图片上</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2022/12/09/HTML/"/>
      <url>/2022/12/09/HTML/</url>
      
        <content type="html"><![CDATA[<h1 id="初识HTML"><a href="#初识HTML" class="headerlink" title="初识HTML"></a>初识HTML</h1><p><img src="/2022/12/09/HTML/image-20220531210016097.png" alt="image-20220531210016097"></p><ul><li><p>ctrl+/就是写注释用的等于</p><p>1.&lt;!–</p></li><li><p>网页一般有两个head,最后一个加/表示自闭合</p></li><li><p>如果用idea开发，<!DOCTYPE HEML></p><p>就是告诉浏览器使用什么软件开发</p><h2 id="HTML标签学习"><a href="#HTML标签学习" class="headerlink" title="HTML标签学习"></a>HTML标签学习</h2></li></ul><p><img src="/2022/12/09/HTML/image-20220531211018666.png" alt="image-20220531211018666"></p><ul><li><p>h+table键可以快速生成标题</p><p><img src="/2022/12/09/HTML/image-20220531211333097.png" alt="image-20220531211333097"></p></li><li><p>p+table可以快速生成段落标签</p></li></ul><p><img src="/2022/12/09/HTML/image-20220531211344329.png" alt="image-20220531211344329"></p><ul><li><p>br+table快速换行标签</p></li><li><p>水平线标签hr+table增加一条水平分界线</p><p><img src="/2022/12/09/HTML/image-20220531211626349.png" alt="image-20220531211626349"></p></li><li><p>粗体斜体的设置</p></li></ul><p><img src="/2022/12/09/HTML/image-20220531212019006.png" alt="image-20220531212019006"></p><ul><li>常用的特殊符号&amp;+</li></ul><h2 id="图像标签学习"><a href="#图像标签学习" class="headerlink" title="图像标签学习"></a>图像标签学习</h2><p><img src="/2022/12/09/HTML/image-20220531213419309.png" alt="image-20220531213419309"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;&#x27;</span>&#x27;&#x27; <span class="attr">alt</span>=<span class="string">&#x27;&#x27;</span>&#x27;&#x27;&gt;</span></span><br><span class="line"><span class="comment">&lt;!--img学习，</span></span><br><span class="line"><span class="comment">src:图片地址</span></span><br><span class="line"><span class="comment">相对路径 绝对路径</span></span><br><span class="line"><span class="comment">../ 表示上一级目录</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注意可能会犯路径错误的情况导致图片加载不出来</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><p>&lt;img src=’’’’ alt=’’’’&gt;表示图片</p><p><img src="/2022/12/09/HTML/image-20220531214138590.png" alt="image-20220531214138590"></p><ul><li>图像设置和图像的一些标签</li></ul><h3 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--a标签</span></span><br><span class="line"><span class="comment">href:为必填项，表示要跳到的那个网页</span></span><br><span class="line"><span class="comment">target:表示窗口在哪里打开</span></span><br><span class="line"><span class="comment">_blank:表示在新标签/页面打开</span></span><br><span class="line"><span class="comment">_self:在自己的网页中打开</span></span><br><span class="line"><span class="comment">不设置的话一般默认实在原网页中打开</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span><span class="attr">某个网站的地址</span>&#x27;&#x27;&gt;</span>点击跳转到页面-<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>嵌套链接</li></ul><p><img src="/2022/12/09/HTML/image-20220531215807054.png" alt="image-20220531215807054"></p><h4 id="锚链接"><a href="#锚链接" class="headerlink" title="锚链接"></a>锚链接</h4><p><img src="/2022/12/09/HTML/image-20220531220440968.png" alt="image-20220531220440968"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--锚链接</span></span><br><span class="line"><span class="comment">1.需要一个锚标记</span></span><br><span class="line"><span class="comment">2.跳转到标记</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">使用name进行标记，hrefjingxingtiaozhuan</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&#x27;&#x27;</span><span class="attr">top</span>&#x27;&#x27;&gt;</span>顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">.中间放置一堆东西</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span>#<span class="attr">top</span>&#x27;&#x27;&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--实现网页之间的跳转</span></span><br><span class="line"><span class="comment">&lt;a name=&#x27;&#x27;down&#x27;&#x27;&gt;down&lt;/a&gt;</span></span><br><span class="line"><span class="comment">//在某个网页留下标记</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;a href=&#x27;&#x27;4.链接标签.html#down&#x27;&#x27;&gt;&lt;/a&gt;在某个网页跳转</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="功能性链接"><a href="#功能性链接" class="headerlink" title="功能性链接"></a>功能性链接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">邮件链接：mailto</span></span><br><span class="line"><span class="comment">qq链接</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span><span class="attr">mailto:121041584</span>@<span class="attr">qq.com</span>&#x27;&#x27;&gt;</span>点击邮箱联系我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&#x27;&#x27;</span><span class="attr">_blank</span>&#x27;&#x27; <span class="attr">href</span>=<span class="string">&#x27;&#x27;</span><span class="attr">网页地址</span>&#x27;&#x27;&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">&#x27;&#x27;</span><span class="attr">o</span>&#x27;&#x27; <span class="attr">src</span>=<span class="string">&#x27;&#x27;</span><span class="attr">直接地址</span>&#x27;&#x27; <span class="attr">alt</span>=<span class="string">&#x27;&#x27;</span><span class="attr">你好</span>，<span class="attr">加我领取100万元</span>&#x27;&#x27; <span class="attr">title</span>=<span class="string">&#x27;&#x27;</span><span class="attr">你好</span>，<span class="attr">加我领取100万元</span>&#x27;&#x27;&lt;/<span class="attr">a</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="网页中嵌套其它网页"><a href="#网页中嵌套其它网页" class="headerlink" title="网页中嵌套其它网页"></a>网页中嵌套其它网页</h2><p><img src="/2022/12/09/HTML/%E7%BD%91%E9%A1%B5%E5%B5%8C%E5%A5%97.png" alt="网页嵌套"></p><ul><li>嵌套注解</li></ul><p><img src="/2022/12/09/HTML/%E5%B5%8C%E5%A5%97%E6%B3%A8%E8%A7%A3.png" alt="嵌套注解"></p><h2 id="表格的制作"><a href="#表格的制作" class="headerlink" title="表格的制作"></a>表格的制作</h2><p><img src="/2022/12/09/HTML/%E8%A1%A8%E6%A0%BC.png" alt="表格"></p><p>注意跨行跨列的使用</p><ul><li></li></ul><p><img src="/2022/12/09/HTML/%E8%B7%A8%E8%A1%8C%E8%B7%A8%E5%88%97.png" alt="跨行跨列"></p><h2 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h2><p>参考图片元素的学习</p><p>1.创建资源目录</p><p>2.写下对应的类似于图片地址的代码</p><p>3.需要注意要设置可操作+是否自动播放</p><p><img src="/2022/12/09/HTML/%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91%E7%9A%84%E5%AD%A6%E4%B9%A0.png" alt="视频音频的学习"></p><h3 id="网页结构"><a href="#网页结构" class="headerlink" title="网页结构"></a>网页结构</h3><ul><li>为了让代码更加清晰</li></ul><p><img src="/2022/12/09/HTML/%E7%BD%91%E9%A1%B5%E7%BB%93%E6%9E%84.png" alt="网页结构"></p><p>如下面的布局分块</p><p><img src="/2022/12/09/HTML/%E5%B8%83%E5%B1%80%E5%88%86%E5%9D%97.png" alt="布局分块"></p><h2 id="行元素-amp-块元素"><a href="#行元素-amp-块元素" class="headerlink" title="行元素&amp;块元素"></a>行元素&amp;块元素</h2><p><img src="/2022/12/09/HTML/%E5%9D%97%E5%85%83%E7%B4%A0%E5%92%8C%E8%A1%8C%E5%85%83%E7%B4%A0.png" alt="块元素和行元素"></p><h3 id="那些忘记了的元素操作"><a href="#那些忘记了的元素操作" class="headerlink" title="那些忘记了的元素操作"></a>那些忘记了的元素操作</h3><blockquote><p>cursor: pointer; //让元素可以被点击</p><p>display : none;//让元素消失</p></blockquote><p>+++</p><h2 id="列表学习"><a href="#列表学习" class="headerlink" title="列表学习"></a>列表学习</h2><h3 id="有序无序列表"><a href="#有序无序列表" class="headerlink" title="有序无序列表"></a>有序无序列表</h3><p>Ol&amp;ul</p><p><img src="/2022/12/09/HTML/%E5%88%97%E8%A1%A8.png" alt="列表"></p><h3 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h3><p><img src="/2022/12/09/HTML/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%97%E8%A1%A8.png" alt="自定义列表"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/background.css"/>
      <url>/css/background.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  :root {    --trans-light: rgba(255, 255, 255, 0.88);    --trans-dark: rgba(25, 25, 25, 0.88);    --border-style: 1px solid rgb(169, 169, 169);    --backdrop-filter: blur(5px) saturate(150%);  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 25px;    border: var(--border-style);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 18px;    border: var(--border-style);  }    /* 文章页、归档页、普通页面 */  div#post,  div#page,  div#archive {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border: var(--border-style);    border-radius: 20px;  }    /* 导航栏 */  #page-header.nav-fixed #nav {    background: rgba(255, 255, 255, 0.75);    backdrop-filter: var(--backdrop-filter);  }    [data-theme="dark"] #page-header.nav-fixed #nav {    background: rgba(0, 0, 0, 0.7) !important;  }    /* 夜间模式遮罩 */  [data-theme="dark"] #recent-posts > .recent-post-item,  [data-theme="dark"] #aside-content .card-widget,  [data-theme="dark"] div#post,  [data-theme="dark"] div#archive,  [data-theme="dark"] div#page {    background: var(--trans-dark);  }      /* 夜间模式页脚页头遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }    /* 阅读模式 */  .read-mode #aside-content .card-widget {    background: rgba(158, 204, 171, 0.5) !important;  }  .read-mode div#post {    background: rgba(158, 204, 171, 0.5) !important;  }    /* 夜间模式下的阅读模式 */  [data-theme="dark"] .read-mode #aside-content .card-widget {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }  [data-theme="dark"] .read-mode div#post {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }  /*笔者自己修改的部分*/mark{   background: #a5f3a2;    margin: 0px;    padding: 0px 10px 0px 10px;    border-radius: 3.3px;    color:     red;    font: bolder 20px "楷体";}/*添加三个灯*/#article-container .highlight-tools .expand {  position: absolute;  padding: 0.57em 0.7em;  cursor: pointer;  -webkit-transition: -webkit-transform 0.3s;  -moz-transition: -moz-transform 0.3s;  -o-transition: -o-transform 0.3s;  -ms-transition: -ms-transform 0.3s;  transition: transform 0.3s;  right: 2.1em;}#article-container .highlight-tools .expand + .code-lang {  left: 75px;}#article-container .highlight-tools .expand.closed {  -webkit-transition: all s;  -moz-transition: all 0.3s;  -o-transition: all 0.3s;  -ms-transition: all 0.3s;  transition: all 0.3s;  -webkit-transform: rotate(-90deg) !important;  -moz-transform: rotate(-90deg) !important;  -o-transform: rotate(-90deg) !important;  -ms-transform: rotate(-90deg) !important;  transform: rotate(-90deg) !important;}#article-container .highlight-tools .code-lang {  position: absolute;  left: 14px;  text-transform: uppercase;  font-weight: bold;  font-size: 1.15em;  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}#article-container .highlight-tools .copy-notice {  position: absolute;  right: 2.4em;  opacity: 0;  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";  filter: alpha(opacity=0);  -webkit-transition: opacity 0.4s;  -moz-transition: opacity 0.4s;  -o-transition: opacity 0.4s;  -ms-transition: opacity 0.4s;  transition: opacity 0.4s;}#article-container .highlight-tools .copy-button {  position: absolute;  right: 14px;  cursor: pointer;  -webkit-transition: color 0.2s;  -moz-transition: color 0.2s;  -o-transition: color 0.2s;  -ms-transition: color 0.2s;  transition: color 0.2s;}#article-container .highlight-tools .copy-button:hover {  color: #49b1f5;}.highlight-tools:after{    /* float: left; */    position: absolute;    border-radius: 50%;    background: #fc625d;    width: 12px;    height: 12px;    left: 12px;    -webkit-box-shadow: 20px 0 #fdbc40, 40px 0 #35cd4b;    box-shadow: 20px 0 #fdbc40, 40px 0 #35cd4b;    content: '';}/*代码表格背景*/:root {  --blue-custom: #5ea6e5;  --loading-color: rgba(207, 246, 247, 0.92);  --border-color: #c9c9c9;  --color-red: rgb(241, 71, 71);  --color-orange: rgb(241, 162, 71);  --color-yellow: rgb(241, 238, 71);  --color-purple: rgb(179, 71, 241);  --color-blue: rgb(102, 204, 255);  --color-gray: rgb(226, 226, 226);  --color-green: rgb(57, 197, 187);  --color-whitegray: rgb(241, 241, 241);  --color-pink: rgb(237, 112, 155);  --color-black: rgb(0, 0, 0);  --color-darkblue: rgb(97, 100, 159);  --color-heoblue: rgb(66, 90, 239);  --btn-bg: var(--theme-color)!important;  --scrollbar-color: var(--theme-color)!important;  --border-style: 1px solid rgba(169, 169, 169, 0.7);  --hlnumber-bg: #282c34;  --hltools-bg: #1c1c1c;  --hl-bg: #282c34;}/*间隔线*/#article-container figure.highlight table {  display: block;  overflow: auto;  border: #404041 solid 0.1px;  border-radius: 0 0 6px 6px;  border-top: none;}#article-container figure.highlight .gutter pre {  border-right: #808081 solid 0.1px}.highlight-tools{  border: #404041 solid 0.1px;  border-radius: 6px 6px 0 0;  border-bottom: none;}/*框子*/blockquote {  margin: 0 0 20px;  padding: 12px 15px;  border-left: 0.5px solid #808486;  border-radius: 8px;  background-color: var(--blockquote-bg);  color: var(--blockquote-color);  box-shadow: -2px 0px 9px -2px #49b1f5;}.highlight {  border-radius: 6px 6px 6px 6px;}/* 高亮修改 */#article-container code{  background: none;  padding: 0 3px 0 3px;  color: rgb(255, 77, 0);  font: 1.05em bold;  text-shadow: 1px 1px 11px #2285c3;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/%E8%AF%AD%E6%B3%95.js"/>
      <url>/js/%E8%AF%AD%E6%B3%95.js</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
